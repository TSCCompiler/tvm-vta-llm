// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="compute,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-2,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.104250,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=77,HLS_SYN_DSP=138,HLS_SYN_FF=12905,HLS_SYN_LUT=28229,HLS_VERSION=2019_1}" *)

module compute (
        ap_clk,
        ap_rst_n,
        m_axi_uop_port_AWVALID,
        m_axi_uop_port_AWREADY,
        m_axi_uop_port_AWADDR,
        m_axi_uop_port_AWID,
        m_axi_uop_port_AWLEN,
        m_axi_uop_port_AWSIZE,
        m_axi_uop_port_AWBURST,
        m_axi_uop_port_AWLOCK,
        m_axi_uop_port_AWCACHE,
        m_axi_uop_port_AWPROT,
        m_axi_uop_port_AWQOS,
        m_axi_uop_port_AWREGION,
        m_axi_uop_port_AWUSER,
        m_axi_uop_port_WVALID,
        m_axi_uop_port_WREADY,
        m_axi_uop_port_WDATA,
        m_axi_uop_port_WSTRB,
        m_axi_uop_port_WLAST,
        m_axi_uop_port_WID,
        m_axi_uop_port_WUSER,
        m_axi_uop_port_ARVALID,
        m_axi_uop_port_ARREADY,
        m_axi_uop_port_ARADDR,
        m_axi_uop_port_ARID,
        m_axi_uop_port_ARLEN,
        m_axi_uop_port_ARSIZE,
        m_axi_uop_port_ARBURST,
        m_axi_uop_port_ARLOCK,
        m_axi_uop_port_ARCACHE,
        m_axi_uop_port_ARPROT,
        m_axi_uop_port_ARQOS,
        m_axi_uop_port_ARREGION,
        m_axi_uop_port_ARUSER,
        m_axi_uop_port_RVALID,
        m_axi_uop_port_RREADY,
        m_axi_uop_port_RDATA,
        m_axi_uop_port_RLAST,
        m_axi_uop_port_RID,
        m_axi_uop_port_RUSER,
        m_axi_uop_port_RRESP,
        m_axi_uop_port_BVALID,
        m_axi_uop_port_BREADY,
        m_axi_uop_port_BRESP,
        m_axi_uop_port_BID,
        m_axi_uop_port_BUSER,
        m_axi_data_port_AWVALID,
        m_axi_data_port_AWREADY,
        m_axi_data_port_AWADDR,
        m_axi_data_port_AWID,
        m_axi_data_port_AWLEN,
        m_axi_data_port_AWSIZE,
        m_axi_data_port_AWBURST,
        m_axi_data_port_AWLOCK,
        m_axi_data_port_AWCACHE,
        m_axi_data_port_AWPROT,
        m_axi_data_port_AWQOS,
        m_axi_data_port_AWREGION,
        m_axi_data_port_AWUSER,
        m_axi_data_port_WVALID,
        m_axi_data_port_WREADY,
        m_axi_data_port_WDATA,
        m_axi_data_port_WSTRB,
        m_axi_data_port_WLAST,
        m_axi_data_port_WID,
        m_axi_data_port_WUSER,
        m_axi_data_port_ARVALID,
        m_axi_data_port_ARREADY,
        m_axi_data_port_ARADDR,
        m_axi_data_port_ARID,
        m_axi_data_port_ARLEN,
        m_axi_data_port_ARSIZE,
        m_axi_data_port_ARBURST,
        m_axi_data_port_ARLOCK,
        m_axi_data_port_ARCACHE,
        m_axi_data_port_ARPROT,
        m_axi_data_port_ARQOS,
        m_axi_data_port_ARREGION,
        m_axi_data_port_ARUSER,
        m_axi_data_port_RVALID,
        m_axi_data_port_RREADY,
        m_axi_data_port_RDATA,
        m_axi_data_port_RLAST,
        m_axi_data_port_RID,
        m_axi_data_port_RUSER,
        m_axi_data_port_RRESP,
        m_axi_data_port_BVALID,
        m_axi_data_port_BREADY,
        m_axi_data_port_BRESP,
        m_axi_data_port_BID,
        m_axi_data_port_BUSER,
        gemm_queue_V_V_TDATA,
        gemm_queue_V_V_TVALID,
        gemm_queue_V_V_TREADY,
        l2g_dep_queue_V_TDATA,
        l2g_dep_queue_V_TVALID,
        l2g_dep_queue_V_TREADY,
        s2g_dep_queue_V_TDATA,
        s2g_dep_queue_V_TVALID,
        s2g_dep_queue_V_TREADY,
        g2l_dep_queue_V_TDATA,
        g2l_dep_queue_V_TVALID,
        g2l_dep_queue_V_TREADY,
        g2s_dep_queue_V_TDATA,
        g2s_dep_queue_V_TVALID,
        g2s_dep_queue_V_TREADY,
        inp_mem_V_Addr_A,
        inp_mem_V_EN_A,
        inp_mem_V_WEN_A,
        inp_mem_V_Din_A,
        inp_mem_V_Dout_A,
        inp_mem_V_Clk_A,
        inp_mem_V_Rst_A,
        wgt_mem_0_V_Addr_A,
        wgt_mem_0_V_EN_A,
        wgt_mem_0_V_WEN_A,
        wgt_mem_0_V_Din_A,
        wgt_mem_0_V_Dout_A,
        wgt_mem_0_V_Clk_A,
        wgt_mem_0_V_Rst_A,
        wgt_mem_1_V_Addr_A,
        wgt_mem_1_V_EN_A,
        wgt_mem_1_V_WEN_A,
        wgt_mem_1_V_Din_A,
        wgt_mem_1_V_Dout_A,
        wgt_mem_1_V_Clk_A,
        wgt_mem_1_V_Rst_A,
        out_mem_V_Addr_A,
        out_mem_V_EN_A,
        out_mem_V_WEN_A,
        out_mem_V_Din_A,
        out_mem_V_Dout_A,
        out_mem_V_Clk_A,
        out_mem_V_Rst_A,
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 46'd1;
parameter    ap_ST_fsm_state2 = 46'd2;
parameter    ap_ST_fsm_state3 = 46'd4;
parameter    ap_ST_fsm_state4 = 46'd8;
parameter    ap_ST_fsm_state5 = 46'd16;
parameter    ap_ST_fsm_state6 = 46'd32;
parameter    ap_ST_fsm_state7 = 46'd64;
parameter    ap_ST_fsm_state8 = 46'd128;
parameter    ap_ST_fsm_pp0_stage0 = 46'd256;
parameter    ap_ST_fsm_pp0_stage1 = 46'd512;
parameter    ap_ST_fsm_state18 = 46'd1024;
parameter    ap_ST_fsm_state19 = 46'd2048;
parameter    ap_ST_fsm_state20 = 46'd4096;
parameter    ap_ST_fsm_state21 = 46'd8192;
parameter    ap_ST_fsm_state22 = 46'd16384;
parameter    ap_ST_fsm_state23 = 46'd32768;
parameter    ap_ST_fsm_state24 = 46'd65536;
parameter    ap_ST_fsm_state25 = 46'd131072;
parameter    ap_ST_fsm_pp1_stage0 = 46'd262144;
parameter    ap_ST_fsm_state34 = 46'd524288;
parameter    ap_ST_fsm_state35 = 46'd1048576;
parameter    ap_ST_fsm_state36 = 46'd2097152;
parameter    ap_ST_fsm_state37 = 46'd4194304;
parameter    ap_ST_fsm_state38 = 46'd8388608;
parameter    ap_ST_fsm_state39 = 46'd16777216;
parameter    ap_ST_fsm_state40 = 46'd33554432;
parameter    ap_ST_fsm_state41 = 46'd67108864;
parameter    ap_ST_fsm_state42 = 46'd134217728;
parameter    ap_ST_fsm_state43 = 46'd268435456;
parameter    ap_ST_fsm_state44 = 46'd536870912;
parameter    ap_ST_fsm_pp2_stage0 = 46'd1073741824;
parameter    ap_ST_fsm_state49 = 46'd2147483648;
parameter    ap_ST_fsm_state50 = 46'd4294967296;
parameter    ap_ST_fsm_state51 = 46'd8589934592;
parameter    ap_ST_fsm_state52 = 46'd17179869184;
parameter    ap_ST_fsm_state53 = 46'd34359738368;
parameter    ap_ST_fsm_state54 = 46'd68719476736;
parameter    ap_ST_fsm_state55 = 46'd137438953472;
parameter    ap_ST_fsm_state56 = 46'd274877906944;
parameter    ap_ST_fsm_state57 = 46'd549755813888;
parameter    ap_ST_fsm_state58 = 46'd1099511627776;
parameter    ap_ST_fsm_pp3_stage0 = 46'd2199023255552;
parameter    ap_ST_fsm_state62 = 46'd4398046511104;
parameter    ap_ST_fsm_state63 = 46'd8796093022208;
parameter    ap_ST_fsm_state64 = 46'd17592186044416;
parameter    ap_ST_fsm_state65 = 46'd35184372088832;
parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_UOP_PORT_ID_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_ADDR_WIDTH = 32;
parameter    C_M_AXI_UOP_PORT_DATA_WIDTH = 32;
parameter    C_M_AXI_UOP_PORT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_WUSER_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_RUSER_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_BUSER_WIDTH = 1;
parameter    C_M_AXI_UOP_PORT_USER_VALUE = 0;
parameter    C_M_AXI_UOP_PORT_PROT_VALUE = 0;
parameter    C_M_AXI_UOP_PORT_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_PORT_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_PORT_DATA_WIDTH = 64;
parameter    C_M_AXI_DATA_PORT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_PORT_USER_VALUE = 0;
parameter    C_M_AXI_DATA_PORT_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_PORT_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_UOP_PORT_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_PORT_WSTRB_WIDTH = (64 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_uop_port_AWVALID;
input   m_axi_uop_port_AWREADY;
output  [C_M_AXI_UOP_PORT_ADDR_WIDTH - 1:0] m_axi_uop_port_AWADDR;
output  [C_M_AXI_UOP_PORT_ID_WIDTH - 1:0] m_axi_uop_port_AWID;
output  [7:0] m_axi_uop_port_AWLEN;
output  [2:0] m_axi_uop_port_AWSIZE;
output  [1:0] m_axi_uop_port_AWBURST;
output  [1:0] m_axi_uop_port_AWLOCK;
output  [3:0] m_axi_uop_port_AWCACHE;
output  [2:0] m_axi_uop_port_AWPROT;
output  [3:0] m_axi_uop_port_AWQOS;
output  [3:0] m_axi_uop_port_AWREGION;
output  [C_M_AXI_UOP_PORT_AWUSER_WIDTH - 1:0] m_axi_uop_port_AWUSER;
output   m_axi_uop_port_WVALID;
input   m_axi_uop_port_WREADY;
output  [C_M_AXI_UOP_PORT_DATA_WIDTH - 1:0] m_axi_uop_port_WDATA;
output  [C_M_AXI_UOP_PORT_WSTRB_WIDTH - 1:0] m_axi_uop_port_WSTRB;
output   m_axi_uop_port_WLAST;
output  [C_M_AXI_UOP_PORT_ID_WIDTH - 1:0] m_axi_uop_port_WID;
output  [C_M_AXI_UOP_PORT_WUSER_WIDTH - 1:0] m_axi_uop_port_WUSER;
output   m_axi_uop_port_ARVALID;
input   m_axi_uop_port_ARREADY;
output  [C_M_AXI_UOP_PORT_ADDR_WIDTH - 1:0] m_axi_uop_port_ARADDR;
output  [C_M_AXI_UOP_PORT_ID_WIDTH - 1:0] m_axi_uop_port_ARID;
output  [7:0] m_axi_uop_port_ARLEN;
output  [2:0] m_axi_uop_port_ARSIZE;
output  [1:0] m_axi_uop_port_ARBURST;
output  [1:0] m_axi_uop_port_ARLOCK;
output  [3:0] m_axi_uop_port_ARCACHE;
output  [2:0] m_axi_uop_port_ARPROT;
output  [3:0] m_axi_uop_port_ARQOS;
output  [3:0] m_axi_uop_port_ARREGION;
output  [C_M_AXI_UOP_PORT_ARUSER_WIDTH - 1:0] m_axi_uop_port_ARUSER;
input   m_axi_uop_port_RVALID;
output   m_axi_uop_port_RREADY;
input  [C_M_AXI_UOP_PORT_DATA_WIDTH - 1:0] m_axi_uop_port_RDATA;
input   m_axi_uop_port_RLAST;
input  [C_M_AXI_UOP_PORT_ID_WIDTH - 1:0] m_axi_uop_port_RID;
input  [C_M_AXI_UOP_PORT_RUSER_WIDTH - 1:0] m_axi_uop_port_RUSER;
input  [1:0] m_axi_uop_port_RRESP;
input   m_axi_uop_port_BVALID;
output   m_axi_uop_port_BREADY;
input  [1:0] m_axi_uop_port_BRESP;
input  [C_M_AXI_UOP_PORT_ID_WIDTH - 1:0] m_axi_uop_port_BID;
input  [C_M_AXI_UOP_PORT_BUSER_WIDTH - 1:0] m_axi_uop_port_BUSER;
output   m_axi_data_port_AWVALID;
input   m_axi_data_port_AWREADY;
output  [C_M_AXI_DATA_PORT_ADDR_WIDTH - 1:0] m_axi_data_port_AWADDR;
output  [C_M_AXI_DATA_PORT_ID_WIDTH - 1:0] m_axi_data_port_AWID;
output  [7:0] m_axi_data_port_AWLEN;
output  [2:0] m_axi_data_port_AWSIZE;
output  [1:0] m_axi_data_port_AWBURST;
output  [1:0] m_axi_data_port_AWLOCK;
output  [3:0] m_axi_data_port_AWCACHE;
output  [2:0] m_axi_data_port_AWPROT;
output  [3:0] m_axi_data_port_AWQOS;
output  [3:0] m_axi_data_port_AWREGION;
output  [C_M_AXI_DATA_PORT_AWUSER_WIDTH - 1:0] m_axi_data_port_AWUSER;
output   m_axi_data_port_WVALID;
input   m_axi_data_port_WREADY;
output  [C_M_AXI_DATA_PORT_DATA_WIDTH - 1:0] m_axi_data_port_WDATA;
output  [C_M_AXI_DATA_PORT_WSTRB_WIDTH - 1:0] m_axi_data_port_WSTRB;
output   m_axi_data_port_WLAST;
output  [C_M_AXI_DATA_PORT_ID_WIDTH - 1:0] m_axi_data_port_WID;
output  [C_M_AXI_DATA_PORT_WUSER_WIDTH - 1:0] m_axi_data_port_WUSER;
output   m_axi_data_port_ARVALID;
input   m_axi_data_port_ARREADY;
output  [C_M_AXI_DATA_PORT_ADDR_WIDTH - 1:0] m_axi_data_port_ARADDR;
output  [C_M_AXI_DATA_PORT_ID_WIDTH - 1:0] m_axi_data_port_ARID;
output  [7:0] m_axi_data_port_ARLEN;
output  [2:0] m_axi_data_port_ARSIZE;
output  [1:0] m_axi_data_port_ARBURST;
output  [1:0] m_axi_data_port_ARLOCK;
output  [3:0] m_axi_data_port_ARCACHE;
output  [2:0] m_axi_data_port_ARPROT;
output  [3:0] m_axi_data_port_ARQOS;
output  [3:0] m_axi_data_port_ARREGION;
output  [C_M_AXI_DATA_PORT_ARUSER_WIDTH - 1:0] m_axi_data_port_ARUSER;
input   m_axi_data_port_RVALID;
output   m_axi_data_port_RREADY;
input  [C_M_AXI_DATA_PORT_DATA_WIDTH - 1:0] m_axi_data_port_RDATA;
input   m_axi_data_port_RLAST;
input  [C_M_AXI_DATA_PORT_ID_WIDTH - 1:0] m_axi_data_port_RID;
input  [C_M_AXI_DATA_PORT_RUSER_WIDTH - 1:0] m_axi_data_port_RUSER;
input  [1:0] m_axi_data_port_RRESP;
input   m_axi_data_port_BVALID;
output   m_axi_data_port_BREADY;
input  [1:0] m_axi_data_port_BRESP;
input  [C_M_AXI_DATA_PORT_ID_WIDTH - 1:0] m_axi_data_port_BID;
input  [C_M_AXI_DATA_PORT_BUSER_WIDTH - 1:0] m_axi_data_port_BUSER;
input  [127:0] gemm_queue_V_V_TDATA;
input   gemm_queue_V_V_TVALID;
output   gemm_queue_V_V_TREADY;
input  [7:0] l2g_dep_queue_V_TDATA;
input   l2g_dep_queue_V_TVALID;
output   l2g_dep_queue_V_TREADY;
input  [7:0] s2g_dep_queue_V_TDATA;
input   s2g_dep_queue_V_TVALID;
output   s2g_dep_queue_V_TREADY;
output  [7:0] g2l_dep_queue_V_TDATA;
output   g2l_dep_queue_V_TVALID;
input   g2l_dep_queue_V_TREADY;
output  [7:0] g2s_dep_queue_V_TDATA;
output   g2s_dep_queue_V_TVALID;
input   g2s_dep_queue_V_TREADY;
output  [31:0] inp_mem_V_Addr_A;
output   inp_mem_V_EN_A;
output  [15:0] inp_mem_V_WEN_A;
output  [127:0] inp_mem_V_Din_A;
input  [127:0] inp_mem_V_Dout_A;
output   inp_mem_V_Clk_A;
output   inp_mem_V_Rst_A;
output  [31:0] wgt_mem_0_V_Addr_A;
output   wgt_mem_0_V_EN_A;
output  [127:0] wgt_mem_0_V_WEN_A;
output  [1023:0] wgt_mem_0_V_Din_A;
input  [1023:0] wgt_mem_0_V_Dout_A;
output   wgt_mem_0_V_Clk_A;
output   wgt_mem_0_V_Rst_A;
output  [31:0] wgt_mem_1_V_Addr_A;
output   wgt_mem_1_V_EN_A;
output  [127:0] wgt_mem_1_V_WEN_A;
output  [1023:0] wgt_mem_1_V_Din_A;
input  [1023:0] wgt_mem_1_V_Dout_A;
output   wgt_mem_1_V_Clk_A;
output   wgt_mem_1_V_Rst_A;
output  [31:0] out_mem_V_Addr_A;
output   out_mem_V_EN_A;
output  [15:0] out_mem_V_WEN_A;
output  [127:0] out_mem_V_Din_A;
input  [127:0] out_mem_V_Dout_A;
output   out_mem_V_Clk_A;
output   out_mem_V_Rst_A;
input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1:0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
output   interrupt;

reg inp_mem_V_EN_A;
reg wgt_mem_0_V_EN_A;
reg wgt_mem_1_V_EN_A;
reg out_mem_V_EN_A;
reg[15:0] out_mem_V_WEN_A;
reg[127:0] out_mem_V_Din_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [45:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] done_i;
reg   [31:0] done_o;
reg    done_o_ap_vld;
wire   [31:0] uops_V;
wire   [31:0] biases_V;
reg   [127:0] gemm_queue_V_V_0_data_out;
wire    gemm_queue_V_V_0_vld_in;
wire    gemm_queue_V_V_0_vld_out;
wire    gemm_queue_V_V_0_ack_in;
reg    gemm_queue_V_V_0_ack_out;
reg   [127:0] gemm_queue_V_V_0_payload_A;
reg   [127:0] gemm_queue_V_V_0_payload_B;
reg    gemm_queue_V_V_0_sel_rd;
reg    gemm_queue_V_V_0_sel_wr;
wire    gemm_queue_V_V_0_sel;
wire    gemm_queue_V_V_0_load_A;
wire    gemm_queue_V_V_0_load_B;
reg   [1:0] gemm_queue_V_V_0_state;
wire    gemm_queue_V_V_0_state_cmp_full;
wire    l2g_dep_queue_V_0_vld_in;
wire    l2g_dep_queue_V_0_vld_out;
reg    l2g_dep_queue_V_0_ack_out;
reg   [1:0] l2g_dep_queue_V_0_state;
wire    s2g_dep_queue_V_0_vld_in;
wire    s2g_dep_queue_V_0_vld_out;
reg    s2g_dep_queue_V_0_ack_out;
reg   [1:0] s2g_dep_queue_V_0_state;
wire   [7:0] g2l_dep_queue_V_1_data_out;
reg    g2l_dep_queue_V_1_vld_in;
wire    g2l_dep_queue_V_1_vld_out;
wire    g2l_dep_queue_V_1_ack_in;
wire    g2l_dep_queue_V_1_ack_out;
reg    g2l_dep_queue_V_1_sel_rd;
wire    g2l_dep_queue_V_1_sel;
reg   [1:0] g2l_dep_queue_V_1_state;
wire   [7:0] g2s_dep_queue_V_1_data_out;
reg    g2s_dep_queue_V_1_vld_in;
wire    g2s_dep_queue_V_1_vld_out;
wire    g2s_dep_queue_V_1_ack_in;
wire    g2s_dep_queue_V_1_ack_out;
reg    g2s_dep_queue_V_1_sel_rd;
wire    g2s_dep_queue_V_1_sel;
reg   [1:0] g2s_dep_queue_V_1_state;
reg   [12:0] uop_mem_V_address0;
reg    uop_mem_V_ce0;
reg    uop_mem_V_we0;
wire   [31:0] uop_mem_V_q0;
reg   [10:0] acc_mem_V_address0;
reg    acc_mem_V_ce0;
reg   [63:0] acc_mem_V_we0;
reg   [511:0] acc_mem_V_d0;
wire   [511:0] acc_mem_V_q0;
reg   [10:0] acc_mem_V_address1;
reg    acc_mem_V_ce1;
reg   [63:0] acc_mem_V_we1;
wire   [511:0] acc_mem_V_q1;
reg    uop_port_blk_n_AR;
wire    ap_CS_fsm_state52;
reg    uop_port_blk_n_R;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln485_reg_16119;
reg    data_port_blk_n_AR;
wire    ap_CS_fsm_state38;
reg    data_port_blk_n_R;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln67_reg_16046;
reg    gemm_queue_V_V_TDATA_blk_n;
reg    l2g_dep_queue_V_TDATA_blk_n;
wire   [0:0] tmp_4_fu_1604_p3;
reg    s2g_dep_queue_V_TDATA_blk_n;
wire   [0:0] tmp_6_fu_1612_p3;
reg    g2l_dep_queue_V_TDATA_blk_n;
wire    ap_CS_fsm_state62;
wire   [0:0] tmp_35_fu_11733_p3;
wire    ap_CS_fsm_state64;
reg   [0:0] tmp_35_reg_16138;
reg    g2s_dep_queue_V_TDATA_blk_n;
wire   [0:0] tmp_36_fu_11740_p3;
wire    ap_CS_fsm_state65;
reg   [0:0] tmp_36_reg_16142;
wire    uop_port_AWREADY;
wire    uop_port_WREADY;
reg    uop_port_ARVALID;
wire    uop_port_ARREADY;
wire   [31:0] uop_port_ARLEN;
wire    uop_port_RVALID;
reg    uop_port_RREADY;
wire   [31:0] uop_port_RDATA;
wire    uop_port_RLAST;
wire   [0:0] uop_port_RID;
wire   [0:0] uop_port_RUSER;
wire   [1:0] uop_port_RRESP;
wire    uop_port_BVALID;
wire   [1:0] uop_port_BRESP;
wire   [0:0] uop_port_BID;
wire   [0:0] uop_port_BUSER;
wire    data_port_AWREADY;
wire    data_port_WREADY;
reg    data_port_ARVALID;
wire    data_port_ARREADY;
wire   [31:0] data_port_ARADDR;
wire    data_port_RVALID;
reg    data_port_RREADY;
wire   [63:0] data_port_RDATA;
wire    data_port_RLAST;
wire   [0:0] data_port_RID;
wire   [0:0] data_port_RUSER;
wire   [1:0] data_port_RRESP;
wire    data_port_BVALID;
wire   [1:0] data_port_BRESP;
wire   [0:0] data_port_BID;
wire   [0:0] data_port_BUSER;
reg   [59:0] indvar_flatten71_reg_1100;
reg   [11:0] dst_offset_in_V_1_reg_1111;
reg   [11:0] src_offset_in_V_1_reg_1122;
reg   [45:0] indvar_flatten25_reg_1133;
reg   [11:0] dst_offset_in_0_i317_reg_1144;
reg   [11:0] src_offset_in_0_i318_reg_1155;
reg   [31:0] upc_0_i322_reg_1166;
reg   [59:0] indvar_flatten15_reg_1175;
reg   [11:0] dst_offset_in_V_reg_1186;
reg   [11:0] src_offset_in_V_reg_1197;
reg   [10:0] wgt_offset_in_V_reg_1208;
reg   [45:0] indvar_flatten_reg_1219;
reg   [11:0] dst_offset_in_0_i_reg_1230;
reg   [11:0] src_offset_in_0_i_reg_1241;
reg   [10:0] wgt_offset_in_0_i_reg_1252;
reg   [31:0] upc_0_i_reg_1263;
reg   [18:0] phi_ln67_reg_1303;
reg   [15:0] phi_ln485_reg_1314;
wire   [12:0] grp_fu_1334_p4;
reg   [12:0] reg_1568;
reg    ap_block_state1;
wire   [0:0] icmp_ln470_fu_1624_p2;
wire   [0:0] icmp_ln473_fu_1630_p2;
wire   [0:0] icmp_ln502_fu_1636_p2;
wire   [0:0] icmp_ln504_fu_1642_p2;
wire   [13:0] grp_fu_1344_p4;
reg   [13:0] reg_1572;
wire   [35:0] p_cast37_fu_1586_p1;
reg   [35:0] p_cast37_reg_12899;
wire   [32:0] p_cast_fu_1600_p1;
reg   [32:0] p_cast_reg_12904;
reg   [127:0] tmp_V_reg_12909;
wire   [14:0] sub_ln343_fu_1674_p2;
reg   [14:0] sub_ln343_reg_13054;
wire   [0:0] icmp_ln350_fu_1680_p2;
reg   [0:0] icmp_ln350_reg_13059;
wire   [14:0] sub_ln253_fu_1712_p2;
reg   [14:0] sub_ln253_reg_13064;
wire   [0:0] icmp_ln262_fu_1718_p2;
reg   [0:0] icmp_ln262_reg_13069;
wire   [3:0] trunc_ln3_fu_1724_p4;
reg   [3:0] trunc_ln3_reg_13074;
wire   [15:0] trunc_ln478_1_fu_1738_p4;
reg   [15:0] trunc_ln478_1_reg_13079;
wire   [3:0] trunc_ln478_2_fu_1748_p4;
reg   [3:0] trunc_ln478_2_reg_13087;
wire  signed [15:0] x_width_V_fu_1772_p2;
reg  signed [15:0] x_width_V_reg_13092;
wire    ap_CS_fsm_state2;
wire   [45:0] grp_fu_1789_p2;
reg   [45:0] mul_ln331_reg_13108;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [31:0] zext_ln350_fu_1817_p1;
reg   [31:0] zext_ln350_reg_13124;
wire    ap_CS_fsm_state8;
wire   [31:0] zext_ln350_1_fu_1821_p1;
reg   [31:0] zext_ln350_1_reg_13131;
reg   [0:0] tmp_12_reg_13136;
wire   [0:0] icmp_ln378_fu_1841_p2;
reg   [0:0] icmp_ln378_reg_13156;
wire   [0:0] icmp_ln391_fu_1853_p2;
reg   [0:0] icmp_ln391_reg_13192;
wire  signed [31:0] src_1_V_fu_1859_p1;
reg  signed [31:0] src_1_V_reg_13228;
wire   [11:0] zext_ln700_7_fu_1863_p1;
reg   [11:0] zext_ln700_7_reg_13248;
wire   [11:0] zext_ln700_8_fu_1867_p1;
reg   [11:0] zext_ln700_8_reg_13253;
wire   [11:0] zext_ln700_9_fu_1871_p1;
reg   [11:0] zext_ln700_9_reg_13258;
wire   [11:0] zext_ln700_10_fu_1875_p1;
reg   [11:0] zext_ln700_10_reg_13263;
wire   [0:0] icmp_ln378_1_fu_1888_p2;
reg   [0:0] icmp_ln378_1_reg_13268;
wire   [0:0] and_ln385_fu_1900_p2;
reg   [0:0] and_ln385_reg_13304;
wire   [59:0] grp_fu_1802_p2;
reg   [59:0] mul_ln331_1_reg_13340;
wire   [0:0] icmp_ln343_fu_1906_p2;
reg   [0:0] icmp_ln343_reg_13345;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
wire    ap_block_state15_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln343_reg_13345_pp0_iter1_reg;
reg   [0:0] icmp_ln343_reg_13345_pp0_iter2_reg;
reg   [0:0] icmp_ln343_reg_13345_pp0_iter3_reg;
wire   [59:0] add_ln343_fu_1911_p2;
reg   [59:0] add_ln343_reg_13349;
reg    ap_enable_reg_pp0_iter0;
wire   [11:0] select_ln343_fu_1967_p3;
reg   [11:0] select_ln343_reg_13354;
wire   [11:0] select_ln343_1_fu_1975_p3;
reg   [11:0] select_ln343_1_reg_13359;
wire  signed [31:0] select_ln350_fu_1993_p3;
reg  signed [31:0] select_ln350_reg_13364;
wire   [11:0] select_ln348_fu_2000_p3;
reg   [11:0] select_ln348_reg_13370;
wire   [11:0] select_ln348_1_fu_2008_p3;
reg   [11:0] select_ln348_1_reg_13376;
wire   [45:0] select_ln348_2_fu_2022_p3;
reg   [45:0] select_ln348_2_reg_13382;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state10_pp0_stage1_iter0;
wire    ap_block_state12_pp0_stage1_iter1;
wire    ap_block_state14_pp0_stage1_iter2;
wire    ap_block_state16_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] upc_3_fu_2034_p2;
reg   [31:0] upc_3_reg_13392;
wire   [11:0] dst_idx_V_1_fu_2047_p2;
reg   [11:0] dst_idx_V_1_reg_13397;
wire   [11:0] src_idx_V_1_fu_2056_p2;
reg   [11:0] src_idx_V_1_reg_13402;
wire   [63:0] zext_ln544_4_fu_2065_p1;
reg   [63:0] zext_ln544_4_reg_13412;
reg   [63:0] zext_ln544_4_reg_13412_pp0_iter2_reg;
reg   [10:0] acc_mem_V_addr_3_reg_13417;
reg   [10:0] acc_mem_V_addr_3_reg_13417_pp0_iter2_reg;
reg   [10:0] acc_mem_V_addr_3_reg_13417_pp0_iter3_reg;
wire   [31:0] trunc_ln647_22_fu_2069_p1;
reg   [31:0] trunc_ln647_22_reg_13423;
reg   [31:0] p_Result_11_0_1_reg_13428;
reg   [31:0] p_Result_11_1_reg_13433;
reg   [31:0] p_Result_11_1_1_reg_13438;
reg   [31:0] p_Result_11_2_reg_13443;
reg   [31:0] p_Result_11_2_1_reg_13448;
reg   [31:0] p_Result_11_3_reg_13453;
reg   [31:0] p_Result_11_3_1_reg_13458;
reg   [31:0] p_Result_11_4_reg_13463;
reg   [31:0] p_Result_11_4_1_reg_13468;
reg   [31:0] p_Result_11_5_reg_13473;
reg   [31:0] p_Result_11_5_1_reg_13478;
reg   [31:0] p_Result_11_6_reg_13483;
reg   [31:0] p_Result_11_6_1_reg_13488;
reg   [31:0] p_Result_11_7_reg_13493;
reg   [31:0] p_Result_11_7_1_reg_13498;
wire   [31:0] dst_tensor_0_0_V_fu_2223_p1;
reg   [31:0] dst_tensor_0_0_V_reg_13503;
wire   [31:0] grp_fu_1418_p4;
reg   [31:0] dst_tensor_0_1_V_reg_13514;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] grp_fu_1428_p4;
reg   [31:0] dst_tensor_0_2_V_reg_13525;
wire   [31:0] grp_fu_1438_p4;
reg   [31:0] dst_tensor_0_3_V_reg_13536;
wire   [31:0] grp_fu_1448_p4;
reg   [31:0] dst_tensor_0_4_V_reg_13547;
wire   [31:0] grp_fu_1458_p4;
reg   [31:0] dst_tensor_0_5_V_reg_13558;
wire   [31:0] grp_fu_1468_p4;
reg   [31:0] dst_tensor_0_6_V_reg_13569;
wire   [31:0] grp_fu_1478_p4;
reg   [31:0] dst_tensor_0_7_V_reg_13580;
wire   [31:0] grp_fu_1488_p4;
reg   [31:0] dst_tensor_0_8_V_reg_13591;
wire   [31:0] grp_fu_1498_p4;
reg   [31:0] dst_tensor_0_9_V_reg_13602;
wire   [31:0] grp_fu_1508_p4;
reg   [31:0] dst_tensor_0_10_V_reg_13613;
wire   [31:0] grp_fu_1518_p4;
reg   [31:0] dst_tensor_0_11_V_reg_13624;
wire   [31:0] grp_fu_1528_p4;
reg   [31:0] dst_tensor_0_12_V_reg_13635;
wire   [31:0] grp_fu_1538_p4;
reg   [31:0] dst_tensor_0_13_V_reg_13646;
wire   [31:0] grp_fu_1548_p4;
reg   [31:0] dst_tensor_0_14_V_reg_13657;
wire   [31:0] grp_fu_1558_p4;
reg   [31:0] dst_tensor_0_15_V_reg_13668;
wire   [7:0] o_tensor_0_0_V_10_fu_2356_p3;
reg   [7:0] o_tensor_0_0_V_10_reg_13679;
wire   [31:0] dst_tensor_0_0_V_6_fu_2376_p3;
reg   [31:0] dst_tensor_0_0_V_6_reg_13684;
reg   [31:0] dst_tensor_0_0_V_6_reg_13684_pp0_iter3_reg;
wire   [7:0] o_tensor_0_1_V_10_fu_2488_p3;
reg   [7:0] o_tensor_0_1_V_10_reg_13689;
wire   [31:0] dst_tensor_0_1_V_6_fu_2508_p3;
reg   [31:0] dst_tensor_0_1_V_6_reg_13694;
reg   [31:0] dst_tensor_0_1_V_6_reg_13694_pp0_iter3_reg;
wire   [7:0] o_tensor_0_2_V_10_fu_2620_p3;
reg   [7:0] o_tensor_0_2_V_10_reg_13699;
wire   [31:0] dst_tensor_0_2_V_6_fu_2640_p3;
reg   [31:0] dst_tensor_0_2_V_6_reg_13704;
reg   [31:0] dst_tensor_0_2_V_6_reg_13704_pp0_iter3_reg;
wire   [7:0] o_tensor_0_3_V_10_fu_2752_p3;
reg   [7:0] o_tensor_0_3_V_10_reg_13709;
wire   [31:0] dst_tensor_0_3_V_6_fu_2772_p3;
reg   [31:0] dst_tensor_0_3_V_6_reg_13714;
reg   [31:0] dst_tensor_0_3_V_6_reg_13714_pp0_iter3_reg;
wire   [7:0] o_tensor_0_4_V_10_fu_2884_p3;
reg   [7:0] o_tensor_0_4_V_10_reg_13719;
wire   [31:0] dst_tensor_0_4_V_6_fu_2904_p3;
reg   [31:0] dst_tensor_0_4_V_6_reg_13724;
reg   [31:0] dst_tensor_0_4_V_6_reg_13724_pp0_iter3_reg;
wire   [7:0] o_tensor_0_5_V_9_fu_3016_p3;
reg   [7:0] o_tensor_0_5_V_9_reg_13729;
wire   [31:0] dst_tensor_0_5_V_6_fu_3036_p3;
reg   [31:0] dst_tensor_0_5_V_6_reg_13734;
reg   [31:0] dst_tensor_0_5_V_6_reg_13734_pp0_iter3_reg;
wire   [7:0] o_tensor_0_6_V_9_fu_3148_p3;
reg   [7:0] o_tensor_0_6_V_9_reg_13739;
wire   [31:0] dst_tensor_0_6_V_6_fu_3168_p3;
reg   [31:0] dst_tensor_0_6_V_6_reg_13744;
reg   [31:0] dst_tensor_0_6_V_6_reg_13744_pp0_iter3_reg;
wire   [7:0] o_tensor_0_7_V_9_fu_3280_p3;
reg   [7:0] o_tensor_0_7_V_9_reg_13749;
wire   [31:0] dst_tensor_0_7_V_6_fu_3300_p3;
reg   [31:0] dst_tensor_0_7_V_6_reg_13754;
reg   [31:0] dst_tensor_0_7_V_6_reg_13754_pp0_iter3_reg;
wire   [31:0] src_1_V_8_fu_3307_p3;
reg   [31:0] src_1_V_8_reg_13759;
wire   [4:0] trunc_ln647_56_fu_3312_p1;
reg   [4:0] trunc_ln647_56_reg_13768;
wire   [4:0] sub_ln461_8_fu_3316_p2;
reg   [4:0] sub_ln461_8_reg_13773;
wire   [31:0] src_1_V_9_fu_3322_p3;
reg   [31:0] src_1_V_9_reg_13778;
wire   [4:0] trunc_ln647_60_fu_3327_p1;
reg   [4:0] trunc_ln647_60_reg_13787;
wire   [4:0] sub_ln461_9_fu_3331_p2;
reg   [4:0] sub_ln461_9_reg_13792;
wire   [31:0] src_1_V_10_fu_3337_p3;
reg   [31:0] src_1_V_10_reg_13797;
wire   [4:0] trunc_ln647_64_fu_3342_p1;
reg   [4:0] trunc_ln647_64_reg_13806;
wire   [4:0] sub_ln461_10_fu_3346_p2;
reg   [4:0] sub_ln461_10_reg_13811;
wire   [31:0] src_1_V_11_fu_3352_p3;
reg   [31:0] src_1_V_11_reg_13816;
wire   [4:0] trunc_ln647_68_fu_3357_p1;
reg   [4:0] trunc_ln647_68_reg_13825;
wire   [4:0] sub_ln461_11_fu_3361_p2;
reg   [4:0] sub_ln461_11_reg_13830;
wire   [31:0] src_1_V_12_fu_3367_p3;
reg   [31:0] src_1_V_12_reg_13835;
wire   [4:0] trunc_ln647_72_fu_3372_p1;
reg   [4:0] trunc_ln647_72_reg_13844;
wire   [4:0] sub_ln461_12_fu_3376_p2;
reg   [4:0] sub_ln461_12_reg_13849;
wire   [31:0] src_1_V_13_fu_3382_p3;
reg   [31:0] src_1_V_13_reg_13854;
wire   [4:0] trunc_ln647_76_fu_3387_p1;
reg   [4:0] trunc_ln647_76_reg_13863;
wire   [4:0] sub_ln461_13_fu_3391_p2;
reg   [4:0] sub_ln461_13_reg_13868;
wire   [31:0] src_1_V_14_fu_3397_p3;
reg   [31:0] src_1_V_14_reg_13873;
wire   [4:0] trunc_ln647_80_fu_3402_p1;
reg   [4:0] trunc_ln647_80_reg_13882;
wire   [4:0] sub_ln461_14_fu_3406_p2;
reg   [4:0] sub_ln461_14_reg_13887;
wire   [31:0] src_1_V_15_fu_3412_p3;
reg   [31:0] src_1_V_15_reg_13892;
wire   [4:0] trunc_ln647_84_fu_3417_p1;
reg   [4:0] trunc_ln647_84_reg_13901;
wire   [4:0] sub_ln461_15_fu_3421_p2;
reg   [4:0] sub_ln461_15_reg_13906;
wire   [31:0] dst_tensor_0_8_V_6_fu_3594_p3;
reg   [31:0] dst_tensor_0_8_V_6_reg_13911;
wire   [31:0] dst_tensor_0_9_V_6_fu_3704_p3;
reg   [31:0] dst_tensor_0_9_V_6_reg_13916;
wire   [31:0] dst_tensor_0_10_V_6_fu_3814_p3;
reg   [31:0] dst_tensor_0_10_V_6_reg_13921;
wire   [31:0] dst_tensor_0_11_V_6_fu_3924_p3;
reg   [31:0] dst_tensor_0_11_V_6_reg_13926;
wire   [31:0] dst_tensor_0_12_V_6_fu_4034_p3;
reg   [31:0] dst_tensor_0_12_V_6_reg_13931;
wire   [31:0] dst_tensor_0_13_V_6_fu_4144_p3;
reg   [31:0] dst_tensor_0_13_V_6_reg_13936;
wire   [31:0] dst_tensor_0_14_V_6_fu_4254_p3;
reg   [31:0] dst_tensor_0_14_V_6_reg_13941;
wire   [31:0] dst_tensor_0_15_V_6_fu_4364_p3;
reg   [31:0] dst_tensor_0_15_V_6_reg_13946;
wire    ap_CS_fsm_state19;
wire   [45:0] grp_fu_4472_p2;
reg   [45:0] mul_ln240_reg_13961;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [31:0] zext_ln262_fu_4491_p1;
reg   [31:0] zext_ln262_reg_13977;
wire    ap_CS_fsm_state25;
wire   [31:0] zext_ln262_1_fu_4495_p1;
reg   [31:0] zext_ln262_1_reg_13984;
reg   [0:0] tmp_10_reg_13989;
wire   [11:0] zext_ln700_2_fu_4506_p1;
reg   [11:0] zext_ln700_2_reg_14009;
wire   [11:0] zext_ln700_3_fu_4510_p1;
reg   [11:0] zext_ln700_3_reg_14014;
wire   [10:0] zext_ln700_fu_4523_p1;
reg   [10:0] zext_ln700_reg_14019;
wire   [11:0] zext_ln700_4_fu_4527_p1;
reg   [11:0] zext_ln700_4_reg_14024;
wire   [11:0] zext_ln700_5_fu_4531_p1;
reg   [11:0] zext_ln700_5_reg_14029;
wire   [10:0] zext_ln700_6_fu_4544_p1;
reg   [10:0] zext_ln700_6_reg_14034;
wire   [59:0] grp_fu_4485_p2;
reg   [59:0] mul_ln240_1_reg_14039;
wire   [0:0] icmp_ln253_fu_4548_p2;
reg   [0:0] icmp_ln253_reg_14044;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state26_pp1_stage0_iter0;
wire    ap_block_state27_pp1_stage0_iter1;
wire    ap_block_state28_pp1_stage0_iter2;
wire    ap_block_state29_pp1_stage0_iter3;
wire    ap_block_state30_pp1_stage0_iter4;
wire    ap_block_state31_pp1_stage0_iter5;
wire    ap_block_state32_pp1_stage0_iter6;
wire    ap_block_state33_pp1_stage0_iter7;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln253_reg_14044_pp1_iter1_reg;
reg   [0:0] icmp_ln253_reg_14044_pp1_iter2_reg;
reg   [0:0] icmp_ln253_reg_14044_pp1_iter3_reg;
reg   [0:0] icmp_ln253_reg_14044_pp1_iter4_reg;
reg   [0:0] icmp_ln253_reg_14044_pp1_iter5_reg;
reg   [0:0] icmp_ln253_reg_14044_pp1_iter6_reg;
wire   [59:0] add_ln253_fu_4553_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [11:0] select_ln253_fu_4622_p3;
wire   [11:0] select_ln253_1_fu_4630_p3;
wire   [10:0] select_ln253_2_fu_4638_p3;
wire  signed [31:0] select_ln262_fu_4661_p3;
reg  signed [31:0] select_ln262_reg_14068;
wire   [11:0] select_ln259_fu_4668_p3;
reg   [11:0] select_ln259_reg_14073;
reg   [11:0] select_ln259_reg_14073_pp1_iter1_reg;
wire   [11:0] select_ln259_1_fu_4676_p3;
reg   [11:0] select_ln259_1_reg_14079;
reg   [11:0] select_ln259_1_reg_14079_pp1_iter1_reg;
wire   [10:0] select_ln259_2_fu_4684_p3;
reg   [10:0] select_ln259_2_reg_14085;
reg   [10:0] select_ln259_2_reg_14085_pp1_iter1_reg;
wire   [31:0] upc_1_fu_4692_p2;
wire   [45:0] select_ln259_3_fu_4704_p3;
wire   [11:0] dst_idx_V_fu_4724_p2;
reg   [11:0] dst_idx_V_reg_14106;
reg   [11:0] dst_idx_V_reg_14106_pp1_iter3_reg;
reg   [11:0] dst_idx_V_reg_14106_pp1_iter4_reg;
wire   [11:0] src_idx_V_fu_4733_p2;
reg   [11:0] src_idx_V_reg_14111;
wire   [10:0] wgt_idx_V_fu_4752_p2;
reg   [10:0] wgt_idx_V_reg_14116;
wire   [7:0] trunc_ln647_1_fu_4766_p1;
reg  signed [7:0] trunc_ln647_1_reg_14136;
reg  signed [7:0] w_tensor_i_0_2_reg_14141;
reg  signed [7:0] w_tensor_i_0_4_reg_14146;
reg  signed [7:0] w_tensor_i_0_6_reg_14151;
wire   [7:0] trunc_ln647_2_fu_4840_p1;
reg  signed [7:0] trunc_ln647_2_reg_14156;
reg  signed [7:0] w_tensor_i_0_s_reg_14161;
reg  signed [7:0] w_tensor_i_0_10_reg_14166;
reg  signed [7:0] w_tensor_i_0_12_reg_14171;
reg  signed [7:0] w_tensor_i_1_reg_14176;
reg  signed [7:0] w_tensor_i_1_2_reg_14181;
reg  signed [7:0] w_tensor_i_1_4_reg_14186;
reg  signed [7:0] w_tensor_i_1_6_reg_14191;
reg  signed [7:0] w_tensor_i_1_8_reg_14196;
reg  signed [7:0] w_tensor_i_1_s_reg_14201;
reg  signed [7:0] w_tensor_i_1_11_reg_14206;
reg  signed [7:0] w_tensor_i_1_13_reg_14211;
reg  signed [7:0] w_tensor_i_2_reg_14216;
reg  signed [7:0] w_tensor_i_2_2_reg_14221;
reg  signed [7:0] w_tensor_i_2_4_reg_14226;
reg  signed [7:0] w_tensor_i_2_6_reg_14231;
reg  signed [7:0] w_tensor_i_2_8_reg_14236;
reg  signed [7:0] w_tensor_i_2_s_reg_14241;
reg  signed [7:0] w_tensor_i_2_11_reg_14246;
reg  signed [7:0] w_tensor_i_2_13_reg_14251;
reg  signed [7:0] w_tensor_i_3_reg_14256;
reg  signed [7:0] w_tensor_i_3_2_reg_14261;
reg  signed [7:0] w_tensor_i_3_4_reg_14266;
reg  signed [7:0] w_tensor_i_3_6_reg_14271;
reg  signed [7:0] w_tensor_i_3_8_reg_14276;
reg  signed [7:0] w_tensor_i_3_s_reg_14281;
reg  signed [7:0] w_tensor_i_3_11_reg_14286;
reg  signed [7:0] w_tensor_i_3_13_reg_14291;
reg  signed [7:0] w_tensor_i_4_reg_14296;
reg  signed [7:0] w_tensor_i_4_2_reg_14301;
reg  signed [7:0] w_tensor_i_4_4_reg_14306;
reg  signed [7:0] w_tensor_i_4_6_reg_14311;
reg  signed [7:0] w_tensor_i_4_8_reg_14316;
reg  signed [7:0] w_tensor_i_4_s_reg_14321;
reg  signed [7:0] w_tensor_i_4_11_reg_14326;
reg  signed [7:0] w_tensor_i_4_13_reg_14331;
reg  signed [7:0] w_tensor_i_5_reg_14336;
reg  signed [7:0] w_tensor_i_5_2_reg_14341;
reg  signed [7:0] w_tensor_i_5_4_reg_14346;
reg  signed [7:0] w_tensor_i_5_6_reg_14351;
reg  signed [7:0] w_tensor_i_5_8_reg_14356;
reg  signed [7:0] w_tensor_i_5_s_reg_14361;
reg  signed [7:0] w_tensor_i_5_11_reg_14366;
reg  signed [7:0] w_tensor_i_5_13_reg_14371;
reg  signed [7:0] w_tensor_i_6_reg_14376;
reg  signed [7:0] w_tensor_i_6_2_reg_14381;
reg  signed [7:0] w_tensor_i_6_4_reg_14386;
reg  signed [7:0] w_tensor_i_6_6_reg_14391;
reg  signed [7:0] w_tensor_i_6_8_reg_14396;
reg  signed [7:0] w_tensor_i_6_s_reg_14401;
reg  signed [7:0] w_tensor_i_6_11_reg_14406;
reg  signed [7:0] w_tensor_i_6_13_reg_14411;
reg  signed [7:0] w_tensor_i_7_reg_14416;
reg  signed [7:0] w_tensor_i_7_2_reg_14421;
reg  signed [7:0] w_tensor_i_7_4_reg_14426;
reg  signed [7:0] w_tensor_i_7_6_reg_14431;
reg  signed [7:0] w_tensor_i_7_8_reg_14436;
reg  signed [7:0] w_tensor_i_7_s_reg_14441;
reg  signed [7:0] w_tensor_i_7_11_reg_14446;
reg  signed [7:0] w_tensor_i_7_13_reg_14451;
reg  signed [7:0] w_tensor_i_8_reg_14456;
reg  signed [7:0] w_tensor_i_8_2_reg_14461;
reg  signed [7:0] w_tensor_i_8_4_reg_14466;
reg  signed [7:0] w_tensor_i_8_6_reg_14471;
reg  signed [7:0] w_tensor_i_8_8_reg_14476;
reg  signed [7:0] w_tensor_i_8_s_reg_14481;
reg  signed [7:0] w_tensor_i_8_11_reg_14486;
reg  signed [7:0] w_tensor_i_8_13_reg_14491;
reg  signed [7:0] w_tensor_i_9_reg_14496;
reg  signed [7:0] w_tensor_i_9_2_reg_14501;
reg  signed [7:0] w_tensor_i_9_4_reg_14506;
reg  signed [7:0] w_tensor_i_9_6_reg_14511;
reg  signed [7:0] w_tensor_i_9_8_reg_14516;
reg  signed [7:0] w_tensor_i_9_s_reg_14521;
reg  signed [7:0] w_tensor_i_9_11_reg_14526;
reg  signed [7:0] w_tensor_i_9_13_reg_14531;
reg  signed [7:0] w_tensor_i_s_reg_14536;
reg  signed [7:0] w_tensor_i_10_2_reg_14541;
reg  signed [7:0] w_tensor_i_10_4_reg_14546;
reg  signed [7:0] w_tensor_i_10_6_reg_14551;
reg  signed [7:0] w_tensor_i_10_8_reg_14556;
reg  signed [7:0] w_tensor_i_10_s_reg_14561;
reg  signed [7:0] w_tensor_i_10_11_reg_14566;
reg  signed [7:0] w_tensor_i_10_13_reg_14571;
reg  signed [7:0] w_tensor_i_10_reg_14576;
reg  signed [7:0] w_tensor_i_11_2_reg_14581;
reg  signed [7:0] w_tensor_i_11_4_reg_14586;
reg  signed [7:0] w_tensor_i_11_6_reg_14591;
reg  signed [7:0] w_tensor_i_11_8_reg_14596;
reg  signed [7:0] w_tensor_i_11_s_reg_14601;
reg  signed [7:0] w_tensor_i_11_11_reg_14606;
reg  signed [7:0] w_tensor_i_11_13_reg_14611;
reg  signed [7:0] w_tensor_i_11_reg_14616;
reg  signed [7:0] w_tensor_i_12_2_reg_14621;
reg  signed [7:0] w_tensor_i_12_4_reg_14626;
reg  signed [7:0] w_tensor_i_12_6_reg_14631;
reg  signed [7:0] w_tensor_i_12_8_reg_14636;
reg  signed [7:0] w_tensor_i_12_s_reg_14641;
reg  signed [7:0] w_tensor_i_12_11_reg_14646;
reg  signed [7:0] w_tensor_i_12_13_reg_14651;
reg  signed [7:0] w_tensor_i_12_reg_14656;
reg  signed [7:0] w_tensor_i_13_2_reg_14661;
reg  signed [7:0] w_tensor_i_13_4_reg_14666;
reg  signed [7:0] w_tensor_i_13_6_reg_14671;
reg  signed [7:0] w_tensor_i_13_8_reg_14676;
reg  signed [7:0] w_tensor_i_13_s_reg_14681;
reg  signed [7:0] w_tensor_i_13_11_reg_14686;
reg  signed [7:0] w_tensor_i_13_13_reg_14691;
reg  signed [7:0] w_tensor_i_13_reg_14696;
reg  signed [7:0] w_tensor_i_14_2_reg_14701;
reg  signed [7:0] w_tensor_i_14_4_reg_14706;
reg  signed [7:0] w_tensor_i_14_6_reg_14711;
reg  signed [7:0] w_tensor_i_14_8_reg_14716;
reg  signed [7:0] w_tensor_i_14_s_reg_14721;
reg  signed [7:0] w_tensor_i_14_11_reg_14726;
reg  signed [7:0] w_tensor_i_14_13_reg_14731;
reg  signed [7:0] w_tensor_i_14_reg_14736;
reg  signed [7:0] w_tensor_i_15_2_reg_14741;
reg  signed [7:0] w_tensor_i_15_4_reg_14746;
reg  signed [7:0] w_tensor_i_15_6_reg_14751;
reg  signed [7:0] w_tensor_i_15_8_reg_14756;
reg  signed [7:0] w_tensor_i_15_s_reg_14761;
reg  signed [7:0] w_tensor_i_15_11_reg_14766;
reg  signed [7:0] w_tensor_i_15_13_reg_14771;
wire   [7:0] trunc_ln647_3_fu_7314_p1;
reg   [7:0] trunc_ln647_3_reg_14776;
reg   [7:0] i_tensor_i_0_2_reg_14781;
reg   [7:0] i_tensor_i_0_4_reg_14786;
reg   [7:0] i_tensor_i_0_6_reg_14791;
reg   [7:0] i_tensor_i_0_8_reg_14796;
reg   [7:0] i_tensor_i_0_s_reg_14801;
reg   [7:0] i_tensor_i_0_11_reg_14806;
reg   [7:0] i_tensor_i_0_13_reg_14811;
wire   [15:0] mul_ln1352_1_fu_7476_p2;
reg  signed [15:0] mul_ln1352_1_reg_14816;
wire   [15:0] mul_ln1352_3_fu_7490_p2;
reg  signed [15:0] mul_ln1352_3_reg_14821;
wire   [15:0] mul_ln1352_5_fu_7504_p2;
reg  signed [15:0] mul_ln1352_5_reg_14826;
wire   [15:0] mul_ln1352_7_fu_7518_p2;
reg  signed [15:0] mul_ln1352_7_reg_14831;
wire   [15:0] mul_ln1352_9_fu_7532_p2;
reg  signed [15:0] mul_ln1352_9_reg_14836;
wire   [15:0] mul_ln1352_11_fu_7546_p2;
reg  signed [15:0] mul_ln1352_11_reg_14841;
wire   [15:0] mul_ln1352_13_fu_7560_p2;
reg  signed [15:0] mul_ln1352_13_reg_14846;
wire   [15:0] mul_ln1352_15_fu_7574_p2;
reg  signed [15:0] mul_ln1352_15_reg_14851;
wire   [15:0] mul_ln1352_17_fu_7584_p2;
reg  signed [15:0] mul_ln1352_17_reg_14856;
wire   [15:0] mul_ln1352_19_fu_7594_p2;
reg  signed [15:0] mul_ln1352_19_reg_14861;
wire   [15:0] mul_ln1352_21_fu_7604_p2;
reg  signed [15:0] mul_ln1352_21_reg_14866;
wire   [15:0] mul_ln1352_23_fu_7614_p2;
reg  signed [15:0] mul_ln1352_23_reg_14871;
wire   [15:0] mul_ln1352_25_fu_7624_p2;
reg  signed [15:0] mul_ln1352_25_reg_14876;
wire   [15:0] mul_ln1352_27_fu_7634_p2;
reg  signed [15:0] mul_ln1352_27_reg_14881;
wire   [15:0] mul_ln1352_29_fu_7644_p2;
reg  signed [15:0] mul_ln1352_29_reg_14886;
wire   [15:0] mul_ln1352_31_fu_7654_p2;
reg  signed [15:0] mul_ln1352_31_reg_14891;
wire   [15:0] mul_ln1352_33_fu_7664_p2;
reg  signed [15:0] mul_ln1352_33_reg_14896;
wire   [15:0] mul_ln1352_35_fu_7674_p2;
reg  signed [15:0] mul_ln1352_35_reg_14901;
wire   [15:0] mul_ln1352_37_fu_7684_p2;
reg  signed [15:0] mul_ln1352_37_reg_14906;
wire   [15:0] mul_ln1352_39_fu_7694_p2;
reg  signed [15:0] mul_ln1352_39_reg_14911;
wire   [15:0] mul_ln1352_41_fu_7704_p2;
reg  signed [15:0] mul_ln1352_41_reg_14916;
wire   [15:0] mul_ln1352_43_fu_7714_p2;
reg  signed [15:0] mul_ln1352_43_reg_14921;
wire   [15:0] mul_ln1352_45_fu_7724_p2;
reg  signed [15:0] mul_ln1352_45_reg_14926;
wire   [15:0] mul_ln1352_47_fu_7734_p2;
reg  signed [15:0] mul_ln1352_47_reg_14931;
wire   [15:0] mul_ln1352_49_fu_7744_p2;
reg  signed [15:0] mul_ln1352_49_reg_14936;
wire   [15:0] mul_ln1352_51_fu_7754_p2;
reg  signed [15:0] mul_ln1352_51_reg_14941;
wire   [15:0] mul_ln1352_53_fu_7764_p2;
reg  signed [15:0] mul_ln1352_53_reg_14946;
wire   [15:0] mul_ln1352_55_fu_7774_p2;
reg  signed [15:0] mul_ln1352_55_reg_14951;
wire   [15:0] mul_ln1352_57_fu_7784_p2;
reg  signed [15:0] mul_ln1352_57_reg_14956;
wire   [15:0] mul_ln1352_59_fu_7794_p2;
reg  signed [15:0] mul_ln1352_59_reg_14961;
wire   [15:0] mul_ln1352_61_fu_7804_p2;
reg  signed [15:0] mul_ln1352_61_reg_14966;
wire   [15:0] mul_ln1352_63_fu_7814_p2;
reg  signed [15:0] mul_ln1352_63_reg_14971;
wire   [15:0] mul_ln1352_65_fu_7824_p2;
reg  signed [15:0] mul_ln1352_65_reg_14976;
wire   [15:0] mul_ln1352_67_fu_7834_p2;
reg  signed [15:0] mul_ln1352_67_reg_14981;
wire   [15:0] mul_ln1352_69_fu_7844_p2;
reg  signed [15:0] mul_ln1352_69_reg_14986;
wire   [15:0] mul_ln1352_71_fu_7854_p2;
reg  signed [15:0] mul_ln1352_71_reg_14991;
wire   [15:0] mul_ln1352_73_fu_7864_p2;
reg  signed [15:0] mul_ln1352_73_reg_14996;
wire   [15:0] mul_ln1352_75_fu_7874_p2;
reg  signed [15:0] mul_ln1352_75_reg_15001;
wire   [15:0] mul_ln1352_77_fu_7884_p2;
reg  signed [15:0] mul_ln1352_77_reg_15006;
wire   [15:0] mul_ln1352_79_fu_7894_p2;
reg  signed [15:0] mul_ln1352_79_reg_15011;
wire   [15:0] mul_ln1352_81_fu_7904_p2;
reg  signed [15:0] mul_ln1352_81_reg_15016;
wire   [15:0] mul_ln1352_83_fu_7914_p2;
reg  signed [15:0] mul_ln1352_83_reg_15021;
wire   [15:0] mul_ln1352_85_fu_7924_p2;
reg  signed [15:0] mul_ln1352_85_reg_15026;
wire   [15:0] mul_ln1352_87_fu_7934_p2;
reg  signed [15:0] mul_ln1352_87_reg_15031;
wire   [15:0] mul_ln1352_89_fu_7944_p2;
reg  signed [15:0] mul_ln1352_89_reg_15036;
wire   [15:0] mul_ln1352_91_fu_7954_p2;
reg  signed [15:0] mul_ln1352_91_reg_15041;
wire   [15:0] mul_ln1352_93_fu_7964_p2;
reg  signed [15:0] mul_ln1352_93_reg_15046;
wire   [15:0] mul_ln1352_95_fu_7974_p2;
reg  signed [15:0] mul_ln1352_95_reg_15051;
wire   [15:0] mul_ln1352_97_fu_7984_p2;
reg  signed [15:0] mul_ln1352_97_reg_15056;
wire   [15:0] mul_ln1352_99_fu_7994_p2;
reg  signed [15:0] mul_ln1352_99_reg_15061;
wire   [15:0] mul_ln1352_101_fu_8004_p2;
reg  signed [15:0] mul_ln1352_101_reg_15066;
wire   [15:0] mul_ln1352_103_fu_8014_p2;
reg  signed [15:0] mul_ln1352_103_reg_15071;
wire   [15:0] mul_ln1352_105_fu_8024_p2;
reg  signed [15:0] mul_ln1352_105_reg_15076;
wire   [15:0] mul_ln1352_107_fu_8034_p2;
reg  signed [15:0] mul_ln1352_107_reg_15081;
wire   [15:0] mul_ln1352_109_fu_8044_p2;
reg  signed [15:0] mul_ln1352_109_reg_15086;
wire   [15:0] mul_ln1352_111_fu_8054_p2;
reg  signed [15:0] mul_ln1352_111_reg_15091;
wire   [15:0] mul_ln1352_113_fu_8064_p2;
reg  signed [15:0] mul_ln1352_113_reg_15096;
wire   [15:0] mul_ln1352_115_fu_8074_p2;
reg  signed [15:0] mul_ln1352_115_reg_15101;
wire   [15:0] mul_ln1352_117_fu_8084_p2;
reg  signed [15:0] mul_ln1352_117_reg_15106;
wire   [15:0] mul_ln1352_119_fu_8094_p2;
reg  signed [15:0] mul_ln1352_119_reg_15111;
wire   [15:0] mul_ln1352_121_fu_8104_p2;
reg  signed [15:0] mul_ln1352_121_reg_15116;
wire   [15:0] mul_ln1352_123_fu_8114_p2;
reg  signed [15:0] mul_ln1352_123_reg_15121;
wire   [15:0] mul_ln1352_125_fu_8124_p2;
reg  signed [15:0] mul_ln1352_125_reg_15126;
wire   [15:0] mul_ln1352_127_fu_8134_p2;
reg  signed [15:0] mul_ln1352_127_reg_15131;
wire   [15:0] mul_ln1352_129_fu_8144_p2;
reg  signed [15:0] mul_ln1352_129_reg_15136;
wire   [15:0] mul_ln1352_131_fu_8154_p2;
reg  signed [15:0] mul_ln1352_131_reg_15141;
wire   [15:0] mul_ln1352_133_fu_8164_p2;
reg  signed [15:0] mul_ln1352_133_reg_15146;
wire   [15:0] mul_ln1352_135_fu_8174_p2;
reg  signed [15:0] mul_ln1352_135_reg_15151;
wire   [15:0] mul_ln1352_137_fu_8184_p2;
reg  signed [15:0] mul_ln1352_137_reg_15156;
wire   [15:0] mul_ln1352_139_fu_8194_p2;
reg  signed [15:0] mul_ln1352_139_reg_15161;
wire   [15:0] mul_ln1352_141_fu_8204_p2;
reg  signed [15:0] mul_ln1352_141_reg_15166;
wire   [15:0] mul_ln1352_143_fu_8214_p2;
reg  signed [15:0] mul_ln1352_143_reg_15171;
wire   [15:0] mul_ln1352_145_fu_8224_p2;
reg  signed [15:0] mul_ln1352_145_reg_15176;
wire   [15:0] mul_ln1352_147_fu_8234_p2;
reg  signed [15:0] mul_ln1352_147_reg_15181;
wire   [15:0] mul_ln1352_149_fu_8244_p2;
reg  signed [15:0] mul_ln1352_149_reg_15186;
wire   [15:0] mul_ln1352_151_fu_8254_p2;
reg  signed [15:0] mul_ln1352_151_reg_15191;
wire   [15:0] mul_ln1352_153_fu_8264_p2;
reg  signed [15:0] mul_ln1352_153_reg_15196;
wire   [15:0] mul_ln1352_155_fu_8274_p2;
reg  signed [15:0] mul_ln1352_155_reg_15201;
wire   [15:0] mul_ln1352_157_fu_8284_p2;
reg  signed [15:0] mul_ln1352_157_reg_15206;
wire   [15:0] mul_ln1352_159_fu_8294_p2;
reg  signed [15:0] mul_ln1352_159_reg_15211;
wire   [15:0] mul_ln1352_161_fu_8304_p2;
reg  signed [15:0] mul_ln1352_161_reg_15216;
wire   [15:0] mul_ln1352_163_fu_8314_p2;
reg  signed [15:0] mul_ln1352_163_reg_15221;
wire   [15:0] mul_ln1352_165_fu_8324_p2;
reg  signed [15:0] mul_ln1352_165_reg_15226;
wire   [15:0] mul_ln1352_167_fu_8334_p2;
reg  signed [15:0] mul_ln1352_167_reg_15231;
wire   [15:0] mul_ln1352_169_fu_8344_p2;
reg  signed [15:0] mul_ln1352_169_reg_15236;
wire   [15:0] mul_ln1352_171_fu_8354_p2;
reg  signed [15:0] mul_ln1352_171_reg_15241;
wire   [15:0] mul_ln1352_173_fu_8364_p2;
reg  signed [15:0] mul_ln1352_173_reg_15246;
wire   [15:0] mul_ln1352_175_fu_8374_p2;
reg  signed [15:0] mul_ln1352_175_reg_15251;
wire   [15:0] mul_ln1352_177_fu_8384_p2;
reg  signed [15:0] mul_ln1352_177_reg_15256;
wire   [15:0] mul_ln1352_179_fu_8394_p2;
reg  signed [15:0] mul_ln1352_179_reg_15261;
wire   [15:0] mul_ln1352_181_fu_8404_p2;
reg  signed [15:0] mul_ln1352_181_reg_15266;
wire   [15:0] mul_ln1352_183_fu_8414_p2;
reg  signed [15:0] mul_ln1352_183_reg_15271;
wire   [15:0] mul_ln1352_185_fu_8424_p2;
reg  signed [15:0] mul_ln1352_185_reg_15276;
wire   [15:0] mul_ln1352_187_fu_8434_p2;
reg  signed [15:0] mul_ln1352_187_reg_15281;
wire   [15:0] mul_ln1352_189_fu_8444_p2;
reg  signed [15:0] mul_ln1352_189_reg_15286;
wire   [15:0] mul_ln1352_191_fu_8454_p2;
reg  signed [15:0] mul_ln1352_191_reg_15291;
wire   [15:0] mul_ln1352_193_fu_8464_p2;
reg  signed [15:0] mul_ln1352_193_reg_15296;
wire   [15:0] mul_ln1352_195_fu_8474_p2;
reg  signed [15:0] mul_ln1352_195_reg_15301;
wire   [15:0] mul_ln1352_197_fu_8484_p2;
reg  signed [15:0] mul_ln1352_197_reg_15306;
wire   [15:0] mul_ln1352_199_fu_8494_p2;
reg  signed [15:0] mul_ln1352_199_reg_15311;
wire   [15:0] mul_ln1352_201_fu_8504_p2;
reg  signed [15:0] mul_ln1352_201_reg_15316;
wire   [15:0] mul_ln1352_203_fu_8514_p2;
reg  signed [15:0] mul_ln1352_203_reg_15321;
wire   [15:0] mul_ln1352_205_fu_8524_p2;
reg  signed [15:0] mul_ln1352_205_reg_15326;
wire   [15:0] mul_ln1352_207_fu_8534_p2;
reg  signed [15:0] mul_ln1352_207_reg_15331;
wire   [15:0] mul_ln1352_209_fu_8544_p2;
reg  signed [15:0] mul_ln1352_209_reg_15336;
wire   [15:0] mul_ln1352_211_fu_8554_p2;
reg  signed [15:0] mul_ln1352_211_reg_15341;
wire   [15:0] mul_ln1352_213_fu_8564_p2;
reg  signed [15:0] mul_ln1352_213_reg_15346;
wire   [15:0] mul_ln1352_215_fu_8574_p2;
reg  signed [15:0] mul_ln1352_215_reg_15351;
wire   [15:0] mul_ln1352_217_fu_8584_p2;
reg  signed [15:0] mul_ln1352_217_reg_15356;
wire   [15:0] mul_ln1352_219_fu_8594_p2;
reg  signed [15:0] mul_ln1352_219_reg_15361;
wire   [15:0] mul_ln1352_221_fu_8604_p2;
reg  signed [15:0] mul_ln1352_221_reg_15366;
wire   [15:0] mul_ln1352_223_fu_8614_p2;
reg  signed [15:0] mul_ln1352_223_reg_15371;
wire   [15:0] mul_ln1352_225_fu_8624_p2;
reg  signed [15:0] mul_ln1352_225_reg_15376;
wire   [15:0] mul_ln1352_227_fu_8634_p2;
reg  signed [15:0] mul_ln1352_227_reg_15381;
wire   [15:0] mul_ln1352_229_fu_8644_p2;
reg  signed [15:0] mul_ln1352_229_reg_15386;
wire   [15:0] mul_ln1352_231_fu_8654_p2;
reg  signed [15:0] mul_ln1352_231_reg_15391;
wire   [15:0] mul_ln1352_233_fu_8664_p2;
reg  signed [15:0] mul_ln1352_233_reg_15396;
wire   [15:0] mul_ln1352_235_fu_8674_p2;
reg  signed [15:0] mul_ln1352_235_reg_15401;
wire   [15:0] mul_ln1352_237_fu_8684_p2;
reg  signed [15:0] mul_ln1352_237_reg_15406;
wire   [15:0] mul_ln1352_239_fu_8694_p2;
reg  signed [15:0] mul_ln1352_239_reg_15411;
wire   [15:0] mul_ln1352_241_fu_8704_p2;
reg  signed [15:0] mul_ln1352_241_reg_15416;
wire   [15:0] mul_ln1352_243_fu_8714_p2;
reg  signed [15:0] mul_ln1352_243_reg_15421;
wire   [15:0] mul_ln1352_245_fu_8724_p2;
reg  signed [15:0] mul_ln1352_245_reg_15426;
wire   [15:0] mul_ln1352_247_fu_8734_p2;
reg  signed [15:0] mul_ln1352_247_reg_15431;
wire   [15:0] mul_ln1352_249_fu_8744_p2;
reg  signed [15:0] mul_ln1352_249_reg_15436;
wire   [15:0] mul_ln1352_251_fu_8754_p2;
reg  signed [15:0] mul_ln1352_251_reg_15441;
wire   [15:0] mul_ln1352_253_fu_8764_p2;
reg  signed [15:0] mul_ln1352_253_reg_15446;
wire   [15:0] mul_ln1352_255_fu_8774_p2;
reg  signed [15:0] mul_ln1352_255_reg_15451;
wire   [63:0] zext_ln544_2_fu_8780_p1;
reg   [63:0] zext_ln544_2_reg_15456;
reg   [63:0] zext_ln544_2_reg_15456_pp1_iter6_reg;
reg   [10:0] acc_mem_V_addr_1_reg_15461;
reg   [10:0] acc_mem_V_addr_1_reg_15461_pp1_iter6_reg;
wire   [17:0] add_ln700_2_fu_8862_p2;
reg   [17:0] add_ln700_2_reg_15467;
wire   [17:0] add_ln700_5_fu_8874_p2;
reg   [17:0] add_ln700_5_reg_15472;
wire   [17:0] add_ln700_9_fu_8886_p2;
reg   [17:0] add_ln700_9_reg_15477;
wire   [17:0] add_ln700_12_fu_8898_p2;
reg   [17:0] add_ln700_12_reg_15482;
wire   [17:0] add_ln700_18_fu_8958_p2;
reg   [17:0] add_ln700_18_reg_15487;
wire   [17:0] add_ln700_21_fu_8970_p2;
reg   [17:0] add_ln700_21_reg_15492;
wire   [17:0] add_ln700_25_fu_8982_p2;
reg   [17:0] add_ln700_25_reg_15497;
wire   [17:0] add_ln700_28_fu_8994_p2;
reg   [17:0] add_ln700_28_reg_15502;
wire   [17:0] add_ln700_34_fu_9054_p2;
reg   [17:0] add_ln700_34_reg_15507;
wire   [17:0] add_ln700_37_fu_9066_p2;
reg   [17:0] add_ln700_37_reg_15512;
wire   [17:0] add_ln700_41_fu_9078_p2;
reg   [17:0] add_ln700_41_reg_15517;
wire   [17:0] add_ln700_44_fu_9090_p2;
reg   [17:0] add_ln700_44_reg_15522;
wire   [17:0] add_ln700_50_fu_9150_p2;
reg   [17:0] add_ln700_50_reg_15527;
wire   [17:0] add_ln700_53_fu_9162_p2;
reg   [17:0] add_ln700_53_reg_15532;
wire   [17:0] add_ln700_57_fu_9174_p2;
reg   [17:0] add_ln700_57_reg_15537;
wire   [17:0] add_ln700_60_fu_9186_p2;
reg   [17:0] add_ln700_60_reg_15542;
wire   [17:0] add_ln700_66_fu_9246_p2;
reg   [17:0] add_ln700_66_reg_15547;
wire   [17:0] add_ln700_69_fu_9258_p2;
reg   [17:0] add_ln700_69_reg_15552;
wire   [17:0] add_ln700_73_fu_9270_p2;
reg   [17:0] add_ln700_73_reg_15557;
wire   [17:0] add_ln700_76_fu_9282_p2;
reg   [17:0] add_ln700_76_reg_15562;
wire   [17:0] add_ln700_82_fu_9342_p2;
reg   [17:0] add_ln700_82_reg_15567;
wire   [17:0] add_ln700_85_fu_9354_p2;
reg   [17:0] add_ln700_85_reg_15572;
wire   [17:0] add_ln700_89_fu_9366_p2;
reg   [17:0] add_ln700_89_reg_15577;
wire   [17:0] add_ln700_92_fu_9378_p2;
reg   [17:0] add_ln700_92_reg_15582;
wire   [17:0] add_ln700_98_fu_9438_p2;
reg   [17:0] add_ln700_98_reg_15587;
wire   [17:0] add_ln700_101_fu_9450_p2;
reg   [17:0] add_ln700_101_reg_15592;
wire   [17:0] add_ln700_105_fu_9462_p2;
reg   [17:0] add_ln700_105_reg_15597;
wire   [17:0] add_ln700_108_fu_9474_p2;
reg   [17:0] add_ln700_108_reg_15602;
wire   [17:0] add_ln700_114_fu_9534_p2;
reg   [17:0] add_ln700_114_reg_15607;
wire   [17:0] add_ln700_117_fu_9546_p2;
reg   [17:0] add_ln700_117_reg_15612;
wire   [17:0] add_ln700_121_fu_9558_p2;
reg   [17:0] add_ln700_121_reg_15617;
wire   [17:0] add_ln700_124_fu_9570_p2;
reg   [17:0] add_ln700_124_reg_15622;
wire   [17:0] add_ln700_130_fu_9630_p2;
reg   [17:0] add_ln700_130_reg_15627;
wire   [17:0] add_ln700_133_fu_9642_p2;
reg   [17:0] add_ln700_133_reg_15632;
wire   [17:0] add_ln700_137_fu_9654_p2;
reg   [17:0] add_ln700_137_reg_15637;
wire   [17:0] add_ln700_140_fu_9666_p2;
reg   [17:0] add_ln700_140_reg_15642;
wire   [17:0] add_ln700_146_fu_9726_p2;
reg   [17:0] add_ln700_146_reg_15647;
wire   [17:0] add_ln700_149_fu_9738_p2;
reg   [17:0] add_ln700_149_reg_15652;
wire   [17:0] add_ln700_153_fu_9750_p2;
reg   [17:0] add_ln700_153_reg_15657;
wire   [17:0] add_ln700_156_fu_9762_p2;
reg   [17:0] add_ln700_156_reg_15662;
wire   [17:0] add_ln700_162_fu_9822_p2;
reg   [17:0] add_ln700_162_reg_15667;
wire   [17:0] add_ln700_165_fu_9834_p2;
reg   [17:0] add_ln700_165_reg_15672;
wire   [17:0] add_ln700_169_fu_9846_p2;
reg   [17:0] add_ln700_169_reg_15677;
wire   [17:0] add_ln700_172_fu_9858_p2;
reg   [17:0] add_ln700_172_reg_15682;
wire   [17:0] add_ln700_178_fu_9918_p2;
reg   [17:0] add_ln700_178_reg_15687;
wire   [17:0] add_ln700_181_fu_9930_p2;
reg   [17:0] add_ln700_181_reg_15692;
wire   [17:0] add_ln700_185_fu_9942_p2;
reg   [17:0] add_ln700_185_reg_15697;
wire   [17:0] add_ln700_188_fu_9954_p2;
reg   [17:0] add_ln700_188_reg_15702;
wire   [17:0] add_ln700_194_fu_10014_p2;
reg   [17:0] add_ln700_194_reg_15707;
wire   [17:0] add_ln700_197_fu_10026_p2;
reg   [17:0] add_ln700_197_reg_15712;
wire   [17:0] add_ln700_201_fu_10038_p2;
reg   [17:0] add_ln700_201_reg_15717;
wire   [17:0] add_ln700_204_fu_10050_p2;
reg   [17:0] add_ln700_204_reg_15722;
wire   [17:0] add_ln700_210_fu_10110_p2;
reg   [17:0] add_ln700_210_reg_15727;
wire   [17:0] add_ln700_213_fu_10122_p2;
reg   [17:0] add_ln700_213_reg_15732;
wire   [17:0] add_ln700_217_fu_10134_p2;
reg   [17:0] add_ln700_217_reg_15737;
wire   [17:0] add_ln700_220_fu_10146_p2;
reg   [17:0] add_ln700_220_reg_15742;
wire   [17:0] add_ln700_226_fu_10206_p2;
reg   [17:0] add_ln700_226_reg_15747;
wire   [17:0] add_ln700_229_fu_10218_p2;
reg   [17:0] add_ln700_229_reg_15752;
wire   [17:0] add_ln700_233_fu_10230_p2;
reg   [17:0] add_ln700_233_reg_15757;
wire   [17:0] add_ln700_236_fu_10242_p2;
reg   [17:0] add_ln700_236_reg_15762;
wire   [17:0] add_ln700_242_fu_10302_p2;
reg   [17:0] add_ln700_242_reg_15767;
wire   [17:0] add_ln700_245_fu_10314_p2;
reg   [17:0] add_ln700_245_reg_15772;
wire   [17:0] add_ln700_249_fu_10326_p2;
reg   [17:0] add_ln700_249_reg_15777;
wire   [17:0] add_ln700_252_fu_10338_p2;
reg   [17:0] add_ln700_252_reg_15782;
wire   [31:0] a_tensor_0_0_V_1_fu_10396_p3;
reg   [31:0] a_tensor_0_0_V_1_reg_15787;
wire   [7:0] o_tensor_0_0_V_1_fu_10403_p1;
reg   [7:0] o_tensor_0_0_V_1_reg_15792;
wire   [31:0] a_tensor_0_1_V_1_fu_10455_p3;
reg   [31:0] a_tensor_0_1_V_1_reg_15797;
wire   [7:0] o_tensor_0_1_V_1_fu_10462_p1;
reg   [7:0] o_tensor_0_1_V_1_reg_15802;
wire   [31:0] a_tensor_0_2_V_1_fu_10514_p3;
reg   [31:0] a_tensor_0_2_V_1_reg_15807;
wire   [7:0] o_tensor_0_2_V_1_fu_10521_p1;
reg   [7:0] o_tensor_0_2_V_1_reg_15812;
wire   [31:0] a_tensor_0_3_V_1_fu_10573_p3;
reg   [31:0] a_tensor_0_3_V_1_reg_15817;
wire   [7:0] o_tensor_0_3_V_1_fu_10580_p1;
reg   [7:0] o_tensor_0_3_V_1_reg_15822;
wire   [31:0] a_tensor_0_4_V_1_fu_10632_p3;
reg   [31:0] a_tensor_0_4_V_1_reg_15827;
wire   [7:0] o_tensor_0_4_V_1_fu_10639_p1;
reg   [7:0] o_tensor_0_4_V_1_reg_15832;
wire   [31:0] select_ln304_fu_10691_p3;
reg   [31:0] select_ln304_reg_15837;
wire   [7:0] trunc_ln647_10_fu_10698_p1;
reg   [7:0] trunc_ln647_10_reg_15842;
wire   [31:0] select_ln304_1_fu_10750_p3;
reg   [31:0] select_ln304_1_reg_15847;
wire   [7:0] trunc_ln647_11_fu_10757_p1;
reg   [7:0] trunc_ln647_11_reg_15852;
wire   [31:0] select_ln304_2_fu_10809_p3;
reg   [31:0] select_ln304_2_reg_15857;
wire   [7:0] trunc_ln647_12_fu_10816_p1;
reg   [7:0] trunc_ln647_12_reg_15862;
wire   [31:0] select_ln304_3_fu_10868_p3;
reg   [31:0] select_ln304_3_reg_15867;
wire   [7:0] trunc_ln647_13_fu_10875_p1;
reg   [7:0] trunc_ln647_13_reg_15872;
wire   [31:0] select_ln304_4_fu_10927_p3;
reg   [31:0] select_ln304_4_reg_15877;
wire   [7:0] trunc_ln647_14_fu_10934_p1;
reg   [7:0] trunc_ln647_14_reg_15882;
wire   [31:0] select_ln304_5_fu_10986_p3;
reg   [31:0] select_ln304_5_reg_15887;
wire   [7:0] trunc_ln647_15_fu_10993_p1;
reg   [7:0] trunc_ln647_15_reg_15892;
wire   [31:0] a_tensor_0_11_V_1_fu_11045_p3;
reg   [31:0] a_tensor_0_11_V_1_reg_15897;
wire   [7:0] trunc_ln647_16_fu_11052_p1;
reg   [7:0] trunc_ln647_16_reg_15902;
wire   [31:0] a_tensor_0_12_V_1_fu_11104_p3;
reg   [31:0] a_tensor_0_12_V_1_reg_15907;
wire   [7:0] trunc_ln647_17_fu_11111_p1;
reg   [7:0] trunc_ln647_17_reg_15912;
wire   [31:0] a_tensor_0_13_V_1_fu_11163_p3;
reg   [31:0] a_tensor_0_13_V_1_reg_15917;
wire   [7:0] trunc_ln647_18_fu_11170_p1;
reg   [7:0] trunc_ln647_18_reg_15922;
wire   [31:0] a_tensor_0_14_V_1_fu_11222_p3;
reg   [31:0] a_tensor_0_14_V_1_reg_15927;
wire   [7:0] trunc_ln647_19_fu_11229_p1;
reg   [7:0] trunc_ln647_19_reg_15932;
wire   [31:0] a_tensor_0_15_V_1_fu_11281_p3;
reg   [31:0] a_tensor_0_15_V_1_reg_15937;
wire   [7:0] trunc_ln647_20_fu_11288_p1;
reg   [7:0] trunc_ln647_20_reg_15942;
reg   [15:0] sram_idx_V_reg_15947;
wire    ap_CS_fsm_state34;
wire   [31:0] dram_idx_V_fu_11343_p4;
reg   [31:0] dram_idx_V_reg_15952;
wire   [15:0] zext_ln478_1_fu_11352_p1;
reg   [15:0] zext_ln478_1_reg_15957;
wire   [15:0] y_offset_0_V_fu_11368_p2;
reg   [15:0] y_offset_0_V_reg_15962;
wire   [15:0] y_offset_1_V_fu_11386_p2;
reg   [15:0] y_offset_1_V_reg_15967;
wire   [0:0] icmp_ln482_fu_11400_p2;
wire   [0:0] icmp_ln487_fu_11406_p2;
reg   [0:0] icmp_ln487_reg_15976;
reg   [31:0] uop_port_addr_reg_15980;
reg   [15:0] trunc_ln304_1_reg_15986;
wire    ap_CS_fsm_state36;
wire    grp_reset_mem_fu_1325_ap_ready;
wire    grp_reset_mem_fu_1325_ap_done;
wire   [15:0] grp_reset_mem_fu_1325_ap_return;
wire   [15:0] zext_ln209_1_fu_11449_p1;
reg   [15:0] zext_ln209_1_reg_15996;
wire   [31:0] zext_ln700_1_fu_11452_p1;
reg   [31:0] zext_ln700_1_reg_16001;
wire   [18:0] shl_ln_fu_11456_p3;
reg   [18:0] shl_ln_reg_16006;
wire   [31:0] zext_ln67_fu_11463_p1;
reg   [31:0] zext_ln67_reg_16011;
wire   [15:0] y_fu_11472_p2;
reg   [15:0] y_reg_16019;
wire    ap_CS_fsm_state37;
wire   [35:0] add_ln66_fu_11490_p2;
reg   [35:0] add_ln66_reg_16024;
wire   [0:0] icmp_ln62_fu_11467_p2;
reg   [15:0] sram_idx_V_assign_2_reg_16029;
wire   [15:0] shl_ln67_fu_11505_p2;
reg   [15:0] shl_ln67_reg_16041;
wire    ap_CS_fsm_state44;
wire   [0:0] icmp_ln67_fu_11510_p2;
wire    ap_block_state45_pp2_stage0_iter0;
reg    ap_block_state46_pp2_stage0_iter1;
wire    ap_block_state47_pp2_stage0_iter2;
wire    ap_block_state48_pp2_stage0_iter3;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln67_reg_16046_pp2_iter1_reg;
reg   [0:0] icmp_ln67_reg_16046_pp2_iter2_reg;
wire   [18:0] add_ln67_fu_11515_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [12:0] lshr_ln2_reg_16055;
reg   [12:0] lshr_ln2_reg_16055_pp2_iter1_reg;
reg   [12:0] lshr_ln2_reg_16055_pp2_iter2_reg;
wire   [2:0] trunc_ln67_1_fu_11540_p1;
reg   [2:0] trunc_ln67_1_reg_16060;
reg   [2:0] trunc_ln67_1_reg_16060_pp2_iter1_reg;
reg   [2:0] trunc_ln67_1_reg_16060_pp2_iter2_reg;
reg   [63:0] data_port_addr_read_reg_16066;
wire   [8:0] shl_ln67_2_fu_11544_p3;
reg   [8:0] shl_ln67_2_reg_16071;
wire   [8:0] empty_18_fu_11551_p2;
reg   [8:0] empty_18_reg_16076;
wire   [0:0] icmp_ln67_1_fu_11557_p2;
reg   [0:0] icmp_ln67_1_reg_16081;
wire   [511:0] and_ln67_1_fu_11658_p2;
reg   [511:0] and_ln67_1_reg_16089;
wire   [15:0] add_ln700_266_fu_11686_p2;
reg   [15:0] add_ln700_266_reg_16094;
wire    ap_CS_fsm_state49;
wire   [31:0] add_ln700_267_fu_11691_p2;
reg   [31:0] add_ln700_267_reg_16099;
wire    ap_CS_fsm_state50;
reg   [14:0] trunc_ln6_reg_16114;
wire    ap_CS_fsm_state58;
wire   [0:0] icmp_ln485_fu_11709_p2;
wire    ap_block_state59_pp3_stage0_iter0;
reg    ap_block_state60_pp3_stage0_iter1;
wire    ap_block_state61_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln485_reg_16119_pp3_iter1_reg;
wire   [15:0] add_ln485_fu_11714_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [14:0] add_ln485_2_fu_11724_p2;
reg   [14:0] add_ln485_2_reg_16128;
reg   [14:0] add_ln485_2_reg_16128_pp3_iter1_reg;
reg   [31:0] uop_port_addr_read_reg_16133;
reg    ap_block_state62_io;
reg    ap_block_state64_io;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state26;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state45;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state59;
reg    ap_enable_reg_pp3_iter2;
wire    grp_reset_mem_fu_1325_ap_start;
wire    grp_reset_mem_fu_1325_ap_idle;
reg   [15:0] grp_reset_mem_fu_1325_sram_idx_V_read;
reg   [15:0] grp_reset_mem_fu_1325_range_V;
wire   [10:0] grp_reset_mem_fu_1325_mem_V_address0;
wire    grp_reset_mem_fu_1325_mem_V_ce0;
wire   [63:0] grp_reset_mem_fu_1325_mem_V_we0;
wire   [511:0] grp_reset_mem_fu_1325_mem_V_d0;
reg   [59:0] ap_phi_mux_indvar_flatten71_phi_fu_1104_p4;
wire    ap_block_pp0_stage0;
reg   [11:0] ap_phi_mux_dst_offset_in_V_1_phi_fu_1115_p4;
reg   [11:0] ap_phi_mux_src_offset_in_V_1_phi_fu_1126_p4;
reg   [45:0] ap_phi_mux_indvar_flatten25_phi_fu_1137_p4;
reg   [11:0] ap_phi_mux_dst_offset_in_0_i317_phi_fu_1148_p4;
reg   [11:0] ap_phi_mux_src_offset_in_0_i318_phi_fu_1159_p4;
reg   [31:0] ap_phi_mux_upc_0_i322_phi_fu_1169_p4;
reg   [11:0] ap_phi_mux_dst_offset_in_0_i_phi_fu_1234_p4;
wire    ap_block_pp1_stage0;
reg   [11:0] ap_phi_mux_src_offset_in_0_i_phi_fu_1245_p4;
reg   [10:0] ap_phi_mux_wgt_offset_in_0_i_phi_fu_1256_p4;
reg   [15:0] sram_idx_V_assign_0_reg_1272;
reg   [31:0] dram_idx_assign_0_reg_1282;
reg   [15:0] i_op_assign_reg_1292;
reg    grp_reset_mem_fu_1325_ap_start_reg;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state51;
wire  signed [63:0] sext_ln353_fu_2030_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln544_3_fu_2061_p1;
wire  signed [63:0] sext_ln265_fu_4712_p1;
wire   [63:0] zext_ln544_fu_4757_p1;
wire   [63:0] zext_ln544_1_fu_4762_p1;
wire   [63:0] zext_ln67_1_fu_11664_p1;
wire   [63:0] zext_ln485_3_fu_11729_p1;
wire   [63:0] zext_ln485_2_fu_11421_p1;
wire   [63:0] zext_ln66_fu_11495_p1;
reg   [7:0] o_tensor_0_0_V_fu_824;
reg   [7:0] o_tensor_0_1_V_fu_828;
reg   [7:0] o_tensor_0_2_V_fu_832;
reg   [7:0] o_tensor_0_3_V_fu_836;
reg   [7:0] o_tensor_0_4_V_fu_840;
reg   [7:0] o_tensor_0_5_V_fu_844;
reg   [7:0] o_tensor_0_6_V_fu_848;
reg   [7:0] o_tensor_0_7_V_fu_852;
reg   [7:0] o_tensor_0_8_V_fu_856;
wire   [7:0] o_tensor_0_8_V_9_fu_3574_p3;
reg   [7:0] o_tensor_0_9_V_fu_860;
wire   [7:0] o_tensor_0_9_V_9_fu_3684_p3;
reg   [7:0] o_tensor_0_10_V_fu_864;
wire   [7:0] o_tensor_0_10_V_9_fu_3794_p3;
reg   [7:0] o_tensor_0_11_V_fu_868;
wire   [7:0] o_tensor_0_11_V_9_fu_3904_p3;
reg   [7:0] o_tensor_0_12_V_fu_872;
wire   [7:0] o_tensor_0_12_V_9_fu_4014_p3;
reg   [7:0] o_tensor_0_13_V_fu_876;
wire   [7:0] o_tensor_0_13_V_9_fu_4124_p3;
reg   [7:0] o_tensor_0_14_V_fu_880;
wire   [7:0] o_tensor_0_14_V_9_fu_4234_p3;
reg   [7:0] o_tensor_0_15_V_fu_884;
wire   [7:0] o_tensor_0_15_V_9_fu_4344_p3;
wire    ap_CS_fsm_state63;
wire   [511:0] tmp_14_fu_4440_p17;
wire   [511:0] tmp_9_fu_11292_p17;
wire   [63:0] shl_ln67_4_fu_11679_p2;
wire   [127:0] tmp_15_fu_4371_p17;
reg   [31:0] out_mem_V_Addr_A_orig;
wire   [127:0] tmp_11_fu_11313_p17;
wire   [31:0] wgt_mem_0_V_Addr_A_orig;
wire   [31:0] wgt_mem_1_V_Addr_A_orig;
wire   [31:0] inp_mem_V_Addr_A_orig;
wire   [28:0] tmp_fu_1576_p4;
wire   [29:0] tmp_2_fu_1590_p4;
wire   [2:0] trunc_ln470_fu_1620_p1;
wire   [13:0] zext_ln350_3_fu_1652_p1;
wire   [0:0] empty_22_fu_1656_p2;
wire   [13:0] smax18_fu_1662_p3;
wire   [14:0] smax18_cast_fu_1670_p1;
wire   [14:0] zext_ln350_2_fu_1648_p1;
wire   [13:0] zext_ln262_3_fu_1690_p1;
wire   [0:0] empty_20_fu_1694_p2;
wire   [13:0] smax_fu_1700_p3;
wire   [14:0] smax_cast_fu_1708_p1;
wire   [14:0] zext_ln262_2_fu_1686_p1;
wire   [4:0] zext_ln478_fu_1734_p1;
wire   [4:0] zext_ln301_fu_1758_p1;
wire   [4:0] add_ln301_fu_1762_p2;
wire   [15:0] zext_ln301_1_fu_1768_p1;
wire   [13:0] grp_fu_1354_p4;
wire  signed [31:0] sext_ln343_fu_1778_p1;
wire   [31:0] grp_fu_1789_p0;
wire   [13:0] grp_fu_1789_p1;
wire   [13:0] grp_fu_1363_p4;
wire   [45:0] grp_fu_1802_p0;
wire   [13:0] grp_fu_1802_p1;
wire   [2:0] trunc_ln_fu_1832_p4;
wire   [15:0] ins_i_fu_1808_p4;
wire   [10:0] grp_fu_1372_p4;
wire   [10:0] grp_fu_1381_p4;
wire   [10:0] grp_fu_1390_p4;
wire   [10:0] grp_fu_1399_p4;
wire   [1:0] tmp_16_fu_1879_p4;
wire   [0:0] icmp_ln385_fu_1847_p2;
wire   [0:0] xor_ln378_fu_1894_p2;
wire   [0:0] icmp_ln348_fu_1922_p2;
wire   [11:0] add_ln700_262_fu_1917_p2;
wire   [11:0] add_ln700_263_fu_1935_p2;
wire   [0:0] icmp_ln350_1_fu_1955_p2;
wire   [11:0] select_ln344_fu_1927_p3;
wire   [11:0] select_ln344_1_fu_1940_p3;
wire   [0:0] select_ln344_3_fu_1960_p3;
wire   [31:0] select_ln344_2_fu_1948_p3;
wire   [11:0] dst_offset_in_V_5_fu_1983_p2;
wire   [11:0] src_offset_in_V_5_fu_1988_p2;
wire   [45:0] add_ln348_fu_2016_p2;
wire   [10:0] trunc_ln647_21_fu_2039_p1;
wire   [11:0] zext_ln209_5_fu_2043_p1;
wire   [10:0] grp_fu_1408_p4;
wire   [11:0] zext_ln209_6_fu_2052_p1;
wire   [31:0] select_ln375_fu_2251_p3;
wire   [0:0] icmp_ln887_fu_2260_p2;
wire   [31:0] select_ln380_fu_2265_p3;
wire   [31:0] select_ln380_1_fu_2271_p3;
wire   [31:0] dst_tensor_0_0_V_1_fu_2277_p3;
wire   [31:0] dst_tensor_0_0_V_2_fu_2289_p2;
wire   [4:0] trunc_ln647_24_fu_2256_p1;
wire   [4:0] sub_ln461_fu_2306_p2;
wire   [31:0] zext_ln556_fu_2312_p1;
wire   [31:0] zext_ln556_1_fu_2321_p1;
wire   [0:0] tmp_17_fu_2298_p3;
wire   [31:0] shl_ln790_fu_2316_p2;
wire   [31:0] ashr_ln808_fu_2325_p2;
wire   [31:0] dst_tensor_0_0_V_3_fu_2330_p3;
wire   [7:0] o_tensor_0_0_V_2_fu_2285_p1;
wire   [7:0] o_tensor_0_0_V_3_fu_2294_p1;
wire   [7:0] o_tensor_0_0_V_8_fu_2342_p3;
wire   [7:0] o_tensor_0_0_V_7_fu_2338_p1;
wire   [7:0] o_tensor_0_0_V_9_fu_2349_p3;
wire   [31:0] dst_tensor_0_0_V_4_fu_2363_p3;
wire   [31:0] dst_tensor_0_0_V_5_fu_2369_p3;
wire   [31:0] src_1_V_1_fu_2383_p3;
wire   [0:0] icmp_ln887_1_fu_2392_p2;
wire   [31:0] select_ln380_3_fu_2397_p3;
wire   [31:0] select_ln380_4_fu_2403_p3;
wire   [31:0] dst_tensor_0_1_V_1_fu_2409_p3;
wire   [31:0] dst_tensor_0_1_V_2_fu_2421_p2;
wire   [4:0] trunc_ln647_28_fu_2388_p1;
wire   [4:0] sub_ln461_1_fu_2438_p2;
wire   [31:0] zext_ln556_2_fu_2444_p1;
wire   [31:0] zext_ln556_3_fu_2453_p1;
wire   [0:0] tmp_18_fu_2430_p3;
wire   [31:0] shl_ln790_1_fu_2448_p2;
wire   [31:0] ashr_ln808_1_fu_2457_p2;
wire   [31:0] dst_tensor_0_1_V_3_fu_2462_p3;
wire   [7:0] o_tensor_0_1_V_2_fu_2417_p1;
wire   [7:0] o_tensor_0_1_V_3_fu_2426_p1;
wire   [7:0] o_tensor_0_1_V_8_fu_2474_p3;
wire   [7:0] o_tensor_0_1_V_7_fu_2470_p1;
wire   [7:0] o_tensor_0_1_V_9_fu_2481_p3;
wire   [31:0] dst_tensor_0_1_V_4_fu_2495_p3;
wire   [31:0] dst_tensor_0_1_V_5_fu_2501_p3;
wire   [31:0] src_1_V_2_fu_2515_p3;
wire   [0:0] icmp_ln887_2_fu_2524_p2;
wire   [31:0] select_ln380_6_fu_2529_p3;
wire   [31:0] select_ln380_7_fu_2535_p3;
wire   [31:0] dst_tensor_0_2_V_1_fu_2541_p3;
wire   [31:0] dst_tensor_0_2_V_2_fu_2553_p2;
wire   [4:0] trunc_ln647_32_fu_2520_p1;
wire   [4:0] sub_ln461_2_fu_2570_p2;
wire   [31:0] zext_ln556_4_fu_2576_p1;
wire   [31:0] zext_ln556_5_fu_2585_p1;
wire   [0:0] tmp_19_fu_2562_p3;
wire   [31:0] shl_ln790_2_fu_2580_p2;
wire   [31:0] ashr_ln808_2_fu_2589_p2;
wire   [31:0] dst_tensor_0_2_V_3_fu_2594_p3;
wire   [7:0] o_tensor_0_2_V_2_fu_2549_p1;
wire   [7:0] o_tensor_0_2_V_3_fu_2558_p1;
wire   [7:0] o_tensor_0_2_V_8_fu_2606_p3;
wire   [7:0] o_tensor_0_2_V_7_fu_2602_p1;
wire   [7:0] o_tensor_0_2_V_9_fu_2613_p3;
wire   [31:0] dst_tensor_0_2_V_4_fu_2627_p3;
wire   [31:0] dst_tensor_0_2_V_5_fu_2633_p3;
wire   [31:0] src_1_V_3_fu_2647_p3;
wire   [0:0] icmp_ln887_3_fu_2656_p2;
wire   [31:0] select_ln380_9_fu_2661_p3;
wire   [31:0] select_ln380_10_fu_2667_p3;
wire   [31:0] dst_tensor_0_3_V_1_fu_2673_p3;
wire   [31:0] dst_tensor_0_3_V_2_fu_2685_p2;
wire   [4:0] trunc_ln647_36_fu_2652_p1;
wire   [4:0] sub_ln461_3_fu_2702_p2;
wire   [31:0] zext_ln556_6_fu_2708_p1;
wire   [31:0] zext_ln556_7_fu_2717_p1;
wire   [0:0] tmp_20_fu_2694_p3;
wire   [31:0] shl_ln790_3_fu_2712_p2;
wire   [31:0] ashr_ln808_3_fu_2721_p2;
wire   [31:0] dst_tensor_0_3_V_3_fu_2726_p3;
wire   [7:0] o_tensor_0_3_V_2_fu_2681_p1;
wire   [7:0] o_tensor_0_3_V_3_fu_2690_p1;
wire   [7:0] o_tensor_0_3_V_8_fu_2738_p3;
wire   [7:0] o_tensor_0_3_V_7_fu_2734_p1;
wire   [7:0] o_tensor_0_3_V_9_fu_2745_p3;
wire   [31:0] dst_tensor_0_3_V_4_fu_2759_p3;
wire   [31:0] dst_tensor_0_3_V_5_fu_2765_p3;
wire   [31:0] src_1_V_4_fu_2779_p3;
wire   [0:0] icmp_ln887_4_fu_2788_p2;
wire   [31:0] select_ln380_12_fu_2793_p3;
wire   [31:0] select_ln380_13_fu_2799_p3;
wire   [31:0] dst_tensor_0_4_V_1_fu_2805_p3;
wire   [31:0] dst_tensor_0_4_V_2_fu_2817_p2;
wire   [4:0] trunc_ln647_40_fu_2784_p1;
wire   [4:0] sub_ln461_4_fu_2834_p2;
wire   [31:0] zext_ln556_8_fu_2840_p1;
wire   [31:0] zext_ln556_9_fu_2849_p1;
wire   [0:0] tmp_21_fu_2826_p3;
wire   [31:0] shl_ln790_4_fu_2844_p2;
wire   [31:0] ashr_ln808_4_fu_2853_p2;
wire   [31:0] dst_tensor_0_4_V_3_fu_2858_p3;
wire   [7:0] o_tensor_0_4_V_2_fu_2813_p1;
wire   [7:0] o_tensor_0_4_V_3_fu_2822_p1;
wire   [7:0] o_tensor_0_4_V_8_fu_2870_p3;
wire   [7:0] o_tensor_0_4_V_7_fu_2866_p1;
wire   [7:0] o_tensor_0_4_V_9_fu_2877_p3;
wire   [31:0] dst_tensor_0_4_V_4_fu_2891_p3;
wire   [31:0] dst_tensor_0_4_V_5_fu_2897_p3;
wire   [31:0] src_1_V_5_fu_2911_p3;
wire   [0:0] icmp_ln887_5_fu_2920_p2;
wire   [31:0] select_ln380_15_fu_2925_p3;
wire   [31:0] select_ln380_16_fu_2931_p3;
wire   [31:0] dst_tensor_0_5_V_1_fu_2937_p3;
wire   [31:0] dst_tensor_0_5_V_2_fu_2949_p2;
wire   [4:0] trunc_ln647_44_fu_2916_p1;
wire   [4:0] sub_ln461_5_fu_2966_p2;
wire   [31:0] zext_ln556_10_fu_2972_p1;
wire   [31:0] zext_ln556_11_fu_2981_p1;
wire   [0:0] tmp_22_fu_2958_p3;
wire   [31:0] shl_ln790_5_fu_2976_p2;
wire   [31:0] ashr_ln808_5_fu_2985_p2;
wire   [31:0] dst_tensor_0_5_V_3_fu_2990_p3;
wire   [7:0] o_tensor_0_5_V_1_fu_2945_p1;
wire   [7:0] o_tensor_0_5_V_2_fu_2954_p1;
wire   [7:0] o_tensor_0_5_V_7_fu_3002_p3;
wire   [7:0] o_tensor_0_5_V_6_fu_2998_p1;
wire   [7:0] o_tensor_0_5_V_8_fu_3009_p3;
wire   [31:0] dst_tensor_0_5_V_4_fu_3023_p3;
wire   [31:0] dst_tensor_0_5_V_5_fu_3029_p3;
wire   [31:0] src_1_V_6_fu_3043_p3;
wire   [0:0] icmp_ln887_6_fu_3052_p2;
wire   [31:0] select_ln380_18_fu_3057_p3;
wire   [31:0] select_ln380_19_fu_3063_p3;
wire   [31:0] dst_tensor_0_6_V_1_fu_3069_p3;
wire   [31:0] dst_tensor_0_6_V_2_fu_3081_p2;
wire   [4:0] trunc_ln647_48_fu_3048_p1;
wire   [4:0] sub_ln461_6_fu_3098_p2;
wire   [31:0] zext_ln556_12_fu_3104_p1;
wire   [31:0] zext_ln556_13_fu_3113_p1;
wire   [0:0] tmp_23_fu_3090_p3;
wire   [31:0] shl_ln790_6_fu_3108_p2;
wire   [31:0] ashr_ln808_6_fu_3117_p2;
wire   [31:0] dst_tensor_0_6_V_3_fu_3122_p3;
wire   [7:0] o_tensor_0_6_V_1_fu_3077_p1;
wire   [7:0] o_tensor_0_6_V_2_fu_3086_p1;
wire   [7:0] o_tensor_0_6_V_7_fu_3134_p3;
wire   [7:0] o_tensor_0_6_V_6_fu_3130_p1;
wire   [7:0] o_tensor_0_6_V_8_fu_3141_p3;
wire   [31:0] dst_tensor_0_6_V_4_fu_3155_p3;
wire   [31:0] dst_tensor_0_6_V_5_fu_3161_p3;
wire   [31:0] src_1_V_7_fu_3175_p3;
wire   [0:0] icmp_ln887_7_fu_3184_p2;
wire   [31:0] select_ln380_21_fu_3189_p3;
wire   [31:0] select_ln380_22_fu_3195_p3;
wire   [31:0] dst_tensor_0_7_V_1_fu_3201_p3;
wire   [31:0] dst_tensor_0_7_V_2_fu_3213_p2;
wire   [4:0] trunc_ln647_52_fu_3180_p1;
wire   [4:0] sub_ln461_7_fu_3230_p2;
wire   [31:0] zext_ln556_14_fu_3236_p1;
wire   [31:0] zext_ln556_15_fu_3245_p1;
wire   [0:0] tmp_24_fu_3222_p3;
wire   [31:0] shl_ln790_7_fu_3240_p2;
wire   [31:0] ashr_ln808_7_fu_3249_p2;
wire   [31:0] dst_tensor_0_7_V_3_fu_3254_p3;
wire   [7:0] o_tensor_0_7_V_1_fu_3209_p1;
wire   [7:0] o_tensor_0_7_V_2_fu_3218_p1;
wire   [7:0] o_tensor_0_7_V_7_fu_3266_p3;
wire   [7:0] o_tensor_0_7_V_6_fu_3262_p1;
wire   [7:0] o_tensor_0_7_V_8_fu_3273_p3;
wire   [31:0] dst_tensor_0_7_V_4_fu_3287_p3;
wire   [31:0] dst_tensor_0_7_V_5_fu_3293_p3;
wire   [0:0] icmp_ln887_8_fu_3491_p2;
wire   [31:0] select_ln380_24_fu_3495_p3;
wire   [31:0] select_ln380_25_fu_3500_p3;
wire   [31:0] dst_tensor_0_8_V_1_fu_3505_p3;
wire   [31:0] dst_tensor_0_8_V_2_fu_3517_p2;
wire   [31:0] zext_ln556_16_fu_3532_p1;
wire   [31:0] zext_ln556_17_fu_3540_p1;
wire   [0:0] tmp_25_fu_3525_p3;
wire   [31:0] shl_ln790_8_fu_3535_p2;
wire   [31:0] ashr_ln808_8_fu_3543_p2;
wire   [31:0] dst_tensor_0_8_V_3_fu_3548_p3;
wire   [7:0] o_tensor_0_8_V_1_fu_3513_p1;
wire   [7:0] o_tensor_0_8_V_2_fu_3521_p1;
wire   [7:0] o_tensor_0_8_V_7_fu_3560_p3;
wire   [7:0] o_tensor_0_8_V_6_fu_3556_p1;
wire   [7:0] o_tensor_0_8_V_8_fu_3567_p3;
wire   [31:0] dst_tensor_0_8_V_4_fu_3581_p3;
wire   [31:0] dst_tensor_0_8_V_5_fu_3587_p3;
wire   [0:0] icmp_ln887_9_fu_3601_p2;
wire   [31:0] select_ln380_27_fu_3605_p3;
wire   [31:0] select_ln380_28_fu_3610_p3;
wire   [31:0] dst_tensor_0_9_V_1_fu_3615_p3;
wire   [31:0] dst_tensor_0_9_V_2_fu_3627_p2;
wire   [31:0] zext_ln556_18_fu_3642_p1;
wire   [31:0] zext_ln556_19_fu_3650_p1;
wire   [0:0] tmp_26_fu_3635_p3;
wire   [31:0] shl_ln790_9_fu_3645_p2;
wire   [31:0] ashr_ln808_9_fu_3653_p2;
wire   [31:0] dst_tensor_0_9_V_3_fu_3658_p3;
wire   [7:0] o_tensor_0_9_V_1_fu_3623_p1;
wire   [7:0] o_tensor_0_9_V_2_fu_3631_p1;
wire   [7:0] o_tensor_0_9_V_7_fu_3670_p3;
wire   [7:0] o_tensor_0_9_V_6_fu_3666_p1;
wire   [7:0] o_tensor_0_9_V_8_fu_3677_p3;
wire   [31:0] dst_tensor_0_9_V_4_fu_3691_p3;
wire   [31:0] dst_tensor_0_9_V_5_fu_3697_p3;
wire   [0:0] icmp_ln887_10_fu_3711_p2;
wire   [31:0] select_ln380_30_fu_3715_p3;
wire   [31:0] select_ln380_31_fu_3720_p3;
wire   [31:0] dst_tensor_0_10_V_1_fu_3725_p3;
wire   [31:0] dst_tensor_0_10_V_2_fu_3737_p2;
wire   [31:0] zext_ln556_20_fu_3752_p1;
wire   [31:0] zext_ln556_21_fu_3760_p1;
wire   [0:0] tmp_27_fu_3745_p3;
wire   [31:0] shl_ln790_10_fu_3755_p2;
wire   [31:0] ashr_ln808_10_fu_3763_p2;
wire   [31:0] dst_tensor_0_10_V_3_fu_3768_p3;
wire   [7:0] o_tensor_0_10_V_1_fu_3733_p1;
wire   [7:0] o_tensor_0_10_V_2_fu_3741_p1;
wire   [7:0] o_tensor_0_10_V_7_fu_3780_p3;
wire   [7:0] o_tensor_0_10_V_6_fu_3776_p1;
wire   [7:0] o_tensor_0_10_V_8_fu_3787_p3;
wire   [31:0] dst_tensor_0_10_V_4_fu_3801_p3;
wire   [31:0] dst_tensor_0_10_V_5_fu_3807_p3;
wire   [0:0] icmp_ln887_11_fu_3821_p2;
wire   [31:0] select_ln380_33_fu_3825_p3;
wire   [31:0] select_ln380_34_fu_3830_p3;
wire   [31:0] dst_tensor_0_11_V_1_fu_3835_p3;
wire   [31:0] dst_tensor_0_11_V_2_fu_3847_p2;
wire   [31:0] zext_ln556_22_fu_3862_p1;
wire   [31:0] zext_ln556_23_fu_3870_p1;
wire   [0:0] tmp_28_fu_3855_p3;
wire   [31:0] shl_ln790_11_fu_3865_p2;
wire   [31:0] ashr_ln808_11_fu_3873_p2;
wire   [31:0] dst_tensor_0_11_V_3_fu_3878_p3;
wire   [7:0] o_tensor_0_11_V_1_fu_3843_p1;
wire   [7:0] o_tensor_0_11_V_2_fu_3851_p1;
wire   [7:0] o_tensor_0_11_V_7_fu_3890_p3;
wire   [7:0] o_tensor_0_11_V_6_fu_3886_p1;
wire   [7:0] o_tensor_0_11_V_8_fu_3897_p3;
wire   [31:0] dst_tensor_0_11_V_4_fu_3911_p3;
wire   [31:0] dst_tensor_0_11_V_5_fu_3917_p3;
wire   [0:0] icmp_ln887_12_fu_3931_p2;
wire   [31:0] select_ln380_36_fu_3935_p3;
wire   [31:0] select_ln380_37_fu_3940_p3;
wire   [31:0] dst_tensor_0_12_V_1_fu_3945_p3;
wire   [31:0] dst_tensor_0_12_V_2_fu_3957_p2;
wire   [31:0] zext_ln556_24_fu_3972_p1;
wire   [31:0] zext_ln556_25_fu_3980_p1;
wire   [0:0] tmp_29_fu_3965_p3;
wire   [31:0] shl_ln790_12_fu_3975_p2;
wire   [31:0] ashr_ln808_12_fu_3983_p2;
wire   [31:0] dst_tensor_0_12_V_3_fu_3988_p3;
wire   [7:0] o_tensor_0_12_V_1_fu_3953_p1;
wire   [7:0] o_tensor_0_12_V_2_fu_3961_p1;
wire   [7:0] o_tensor_0_12_V_7_fu_4000_p3;
wire   [7:0] o_tensor_0_12_V_6_fu_3996_p1;
wire   [7:0] o_tensor_0_12_V_8_fu_4007_p3;
wire   [31:0] dst_tensor_0_12_V_4_fu_4021_p3;
wire   [31:0] dst_tensor_0_12_V_5_fu_4027_p3;
wire   [0:0] icmp_ln887_13_fu_4041_p2;
wire   [31:0] select_ln380_39_fu_4045_p3;
wire   [31:0] select_ln380_40_fu_4050_p3;
wire   [31:0] dst_tensor_0_13_V_1_fu_4055_p3;
wire   [31:0] dst_tensor_0_13_V_2_fu_4067_p2;
wire   [31:0] zext_ln556_26_fu_4082_p1;
wire   [31:0] zext_ln556_27_fu_4090_p1;
wire   [0:0] tmp_30_fu_4075_p3;
wire   [31:0] shl_ln790_13_fu_4085_p2;
wire   [31:0] ashr_ln808_13_fu_4093_p2;
wire   [31:0] dst_tensor_0_13_V_3_fu_4098_p3;
wire   [7:0] o_tensor_0_13_V_1_fu_4063_p1;
wire   [7:0] o_tensor_0_13_V_2_fu_4071_p1;
wire   [7:0] o_tensor_0_13_V_7_fu_4110_p3;
wire   [7:0] o_tensor_0_13_V_6_fu_4106_p1;
wire   [7:0] o_tensor_0_13_V_8_fu_4117_p3;
wire   [31:0] dst_tensor_0_13_V_4_fu_4131_p3;
wire   [31:0] dst_tensor_0_13_V_5_fu_4137_p3;
wire   [0:0] icmp_ln887_14_fu_4151_p2;
wire   [31:0] select_ln380_42_fu_4155_p3;
wire   [31:0] select_ln380_43_fu_4160_p3;
wire   [31:0] dst_tensor_0_14_V_1_fu_4165_p3;
wire   [31:0] dst_tensor_0_14_V_2_fu_4177_p2;
wire   [31:0] zext_ln556_28_fu_4192_p1;
wire   [31:0] zext_ln556_29_fu_4200_p1;
wire   [0:0] tmp_31_fu_4185_p3;
wire   [31:0] shl_ln790_14_fu_4195_p2;
wire   [31:0] ashr_ln808_14_fu_4203_p2;
wire   [31:0] dst_tensor_0_14_V_3_fu_4208_p3;
wire   [7:0] o_tensor_0_14_V_1_fu_4173_p1;
wire   [7:0] o_tensor_0_14_V_2_fu_4181_p1;
wire   [7:0] o_tensor_0_14_V_7_fu_4220_p3;
wire   [7:0] o_tensor_0_14_V_6_fu_4216_p1;
wire   [7:0] o_tensor_0_14_V_8_fu_4227_p3;
wire   [31:0] dst_tensor_0_14_V_4_fu_4241_p3;
wire   [31:0] dst_tensor_0_14_V_5_fu_4247_p3;
wire   [0:0] icmp_ln887_15_fu_4261_p2;
wire   [31:0] select_ln380_45_fu_4265_p3;
wire   [31:0] select_ln380_46_fu_4270_p3;
wire   [31:0] dst_tensor_0_15_V_1_fu_4275_p3;
wire   [31:0] dst_tensor_0_15_V_2_fu_4287_p2;
wire   [31:0] zext_ln556_30_fu_4302_p1;
wire   [31:0] zext_ln556_31_fu_4310_p1;
wire   [0:0] tmp_32_fu_4295_p3;
wire   [31:0] shl_ln790_15_fu_4305_p2;
wire   [31:0] ashr_ln808_15_fu_4313_p2;
wire   [31:0] dst_tensor_0_15_V_3_fu_4318_p3;
wire   [7:0] o_tensor_0_15_V_1_fu_4283_p1;
wire   [7:0] o_tensor_0_15_V_2_fu_4291_p1;
wire   [7:0] o_tensor_0_15_V_7_fu_4330_p3;
wire   [7:0] o_tensor_0_15_V_6_fu_4326_p1;
wire   [7:0] o_tensor_0_15_V_8_fu_4337_p3;
wire   [31:0] dst_tensor_0_15_V_4_fu_4351_p3;
wire   [31:0] dst_tensor_0_15_V_5_fu_4357_p3;
wire  signed [31:0] sext_ln253_fu_4461_p1;
wire   [13:0] grp_fu_4472_p0;
wire   [31:0] grp_fu_4472_p1;
wire   [13:0] grp_fu_4485_p0;
wire   [45:0] grp_fu_4485_p1;
wire   [9:0] trunc_ln9_fu_4514_p4;
wire   [9:0] trunc_ln700_4_fu_4535_p4;
wire   [0:0] icmp_ln259_fu_4564_p2;
wire   [11:0] add_ln700_256_fu_4559_p2;
wire   [11:0] add_ln700_257_fu_4577_p2;
wire   [10:0] add_ln700_258_fu_4590_p2;
wire   [0:0] icmp_ln262_1_fu_4610_p2;
wire   [11:0] select_ln254_fu_4569_p3;
wire   [11:0] select_ln254_1_fu_4582_p3;
wire   [10:0] select_ln254_2_fu_4595_p3;
wire   [0:0] select_ln254_4_fu_4615_p3;
wire   [31:0] select_ln254_3_fu_4603_p3;
wire   [11:0] dst_offset_in_V_4_fu_4646_p2;
wire   [11:0] src_offset_in_V_4_fu_4651_p2;
wire   [10:0] wgt_offset_in_V_2_fu_4656_p2;
wire   [45:0] add_ln259_fu_4698_p2;
wire   [10:0] trunc_ln647_fu_4716_p1;
wire   [11:0] zext_ln209_2_fu_4720_p1;
wire   [11:0] zext_ln209_3_fu_4729_p1;
wire   [9:0] p_Result_2_fu_4738_p4;
wire   [10:0] zext_ln209_4_fu_4748_p1;
wire   [7:0] i_tensor_i_0_1_fu_7318_p4;
wire   [7:0] w_tensor_i_0_1_fu_4770_p4;
wire  signed [7:0] mul_ln1352_1_fu_7476_p0;
wire  signed [15:0] sext_ln215_2_fu_7468_p1;
wire  signed [7:0] mul_ln1352_1_fu_7476_p1;
wire   [7:0] i_tensor_i_0_3_fu_7338_p4;
wire   [7:0] w_tensor_i_0_3_fu_4790_p4;
wire  signed [7:0] mul_ln1352_3_fu_7490_p0;
wire  signed [15:0] sext_ln215_6_fu_7482_p1;
wire  signed [7:0] mul_ln1352_3_fu_7490_p1;
wire   [7:0] i_tensor_i_0_5_fu_7358_p4;
wire   [7:0] w_tensor_i_0_5_fu_4810_p4;
wire  signed [7:0] mul_ln1352_5_fu_7504_p0;
wire  signed [15:0] sext_ln215_10_fu_7496_p1;
wire  signed [7:0] mul_ln1352_5_fu_7504_p1;
wire   [7:0] i_tensor_i_0_7_fu_7378_p4;
wire   [7:0] w_tensor_i_0_7_fu_4830_p4;
wire  signed [7:0] mul_ln1352_7_fu_7518_p0;
wire  signed [15:0] sext_ln215_14_fu_7510_p1;
wire  signed [7:0] mul_ln1352_7_fu_7518_p1;
wire   [7:0] i_tensor_i_0_9_fu_7398_p4;
wire   [7:0] w_tensor_i_0_9_fu_4844_p4;
wire  signed [7:0] mul_ln1352_9_fu_7532_p0;
wire  signed [15:0] sext_ln215_18_fu_7524_p1;
wire  signed [7:0] mul_ln1352_9_fu_7532_p1;
wire   [7:0] i_tensor_i_0_10_fu_7418_p4;
wire   [7:0] w_tensor_i_0_8_fu_4864_p4;
wire  signed [7:0] mul_ln1352_11_fu_7546_p0;
wire  signed [15:0] sext_ln215_22_fu_7538_p1;
wire  signed [7:0] mul_ln1352_11_fu_7546_p1;
wire   [7:0] i_tensor_i_0_12_fu_7438_p4;
wire   [7:0] w_tensor_i_0_11_fu_4884_p4;
wire  signed [7:0] mul_ln1352_13_fu_7560_p0;
wire  signed [15:0] sext_ln215_26_fu_7552_p1;
wire  signed [7:0] mul_ln1352_13_fu_7560_p1;
wire   [7:0] i_tensor_i_0_14_fu_7458_p4;
wire   [7:0] w_tensor_i_0_13_fu_4904_p4;
wire  signed [7:0] mul_ln1352_15_fu_7574_p0;
wire  signed [15:0] sext_ln215_30_fu_7566_p1;
wire  signed [7:0] mul_ln1352_15_fu_7574_p1;
wire   [7:0] w_tensor_i_1_1_fu_4924_p4;
wire  signed [7:0] mul_ln1352_17_fu_7584_p0;
wire  signed [7:0] mul_ln1352_17_fu_7584_p1;
wire   [7:0] w_tensor_i_1_3_fu_4944_p4;
wire  signed [7:0] mul_ln1352_19_fu_7594_p0;
wire  signed [7:0] mul_ln1352_19_fu_7594_p1;
wire   [7:0] w_tensor_i_1_5_fu_4964_p4;
wire  signed [7:0] mul_ln1352_21_fu_7604_p0;
wire  signed [7:0] mul_ln1352_21_fu_7604_p1;
wire   [7:0] w_tensor_i_1_7_fu_4984_p4;
wire  signed [7:0] mul_ln1352_23_fu_7614_p0;
wire  signed [7:0] mul_ln1352_23_fu_7614_p1;
wire   [7:0] w_tensor_i_1_9_fu_5004_p4;
wire  signed [7:0] mul_ln1352_25_fu_7624_p0;
wire  signed [7:0] mul_ln1352_25_fu_7624_p1;
wire   [7:0] w_tensor_i_1_10_fu_5024_p4;
wire  signed [7:0] mul_ln1352_27_fu_7634_p0;
wire  signed [7:0] mul_ln1352_27_fu_7634_p1;
wire   [7:0] w_tensor_i_1_12_fu_5044_p4;
wire  signed [7:0] mul_ln1352_29_fu_7644_p0;
wire  signed [7:0] mul_ln1352_29_fu_7644_p1;
wire   [7:0] w_tensor_i_1_14_fu_5064_p4;
wire  signed [7:0] mul_ln1352_31_fu_7654_p0;
wire  signed [7:0] mul_ln1352_31_fu_7654_p1;
wire   [7:0] w_tensor_i_2_1_fu_5084_p4;
wire  signed [7:0] mul_ln1352_33_fu_7664_p0;
wire  signed [7:0] mul_ln1352_33_fu_7664_p1;
wire   [7:0] w_tensor_i_2_3_fu_5104_p4;
wire  signed [7:0] mul_ln1352_35_fu_7674_p0;
wire  signed [7:0] mul_ln1352_35_fu_7674_p1;
wire   [7:0] w_tensor_i_2_5_fu_5124_p4;
wire  signed [7:0] mul_ln1352_37_fu_7684_p0;
wire  signed [7:0] mul_ln1352_37_fu_7684_p1;
wire   [7:0] w_tensor_i_2_7_fu_5144_p4;
wire  signed [7:0] mul_ln1352_39_fu_7694_p0;
wire  signed [7:0] mul_ln1352_39_fu_7694_p1;
wire   [7:0] w_tensor_i_2_9_fu_5164_p4;
wire  signed [7:0] mul_ln1352_41_fu_7704_p0;
wire  signed [7:0] mul_ln1352_41_fu_7704_p1;
wire   [7:0] w_tensor_i_2_10_fu_5184_p4;
wire  signed [7:0] mul_ln1352_43_fu_7714_p0;
wire  signed [7:0] mul_ln1352_43_fu_7714_p1;
wire   [7:0] w_tensor_i_2_12_fu_5204_p4;
wire  signed [7:0] mul_ln1352_45_fu_7724_p0;
wire  signed [7:0] mul_ln1352_45_fu_7724_p1;
wire   [7:0] w_tensor_i_2_14_fu_5224_p4;
wire  signed [7:0] mul_ln1352_47_fu_7734_p0;
wire  signed [7:0] mul_ln1352_47_fu_7734_p1;
wire   [7:0] w_tensor_i_3_1_fu_5244_p4;
wire  signed [7:0] mul_ln1352_49_fu_7744_p0;
wire  signed [7:0] mul_ln1352_49_fu_7744_p1;
wire   [7:0] w_tensor_i_3_3_fu_5264_p4;
wire  signed [7:0] mul_ln1352_51_fu_7754_p0;
wire  signed [7:0] mul_ln1352_51_fu_7754_p1;
wire   [7:0] w_tensor_i_3_5_fu_5284_p4;
wire  signed [7:0] mul_ln1352_53_fu_7764_p0;
wire  signed [7:0] mul_ln1352_53_fu_7764_p1;
wire   [7:0] w_tensor_i_3_7_fu_5304_p4;
wire  signed [7:0] mul_ln1352_55_fu_7774_p0;
wire  signed [7:0] mul_ln1352_55_fu_7774_p1;
wire   [7:0] w_tensor_i_3_9_fu_5324_p4;
wire  signed [7:0] mul_ln1352_57_fu_7784_p0;
wire  signed [7:0] mul_ln1352_57_fu_7784_p1;
wire   [7:0] w_tensor_i_3_10_fu_5344_p4;
wire  signed [7:0] mul_ln1352_59_fu_7794_p0;
wire  signed [7:0] mul_ln1352_59_fu_7794_p1;
wire   [7:0] w_tensor_i_3_12_fu_5364_p4;
wire  signed [7:0] mul_ln1352_61_fu_7804_p0;
wire  signed [7:0] mul_ln1352_61_fu_7804_p1;
wire   [7:0] w_tensor_i_3_14_fu_5384_p4;
wire  signed [7:0] mul_ln1352_63_fu_7814_p0;
wire  signed [7:0] mul_ln1352_63_fu_7814_p1;
wire   [7:0] w_tensor_i_4_1_fu_5404_p4;
wire  signed [7:0] mul_ln1352_65_fu_7824_p0;
wire  signed [7:0] mul_ln1352_65_fu_7824_p1;
wire   [7:0] w_tensor_i_4_3_fu_5424_p4;
wire  signed [7:0] mul_ln1352_67_fu_7834_p0;
wire  signed [7:0] mul_ln1352_67_fu_7834_p1;
wire   [7:0] w_tensor_i_4_5_fu_5444_p4;
wire  signed [7:0] mul_ln1352_69_fu_7844_p0;
wire  signed [7:0] mul_ln1352_69_fu_7844_p1;
wire   [7:0] w_tensor_i_4_7_fu_5464_p4;
wire  signed [7:0] mul_ln1352_71_fu_7854_p0;
wire  signed [7:0] mul_ln1352_71_fu_7854_p1;
wire   [7:0] w_tensor_i_4_9_fu_5484_p4;
wire  signed [7:0] mul_ln1352_73_fu_7864_p0;
wire  signed [7:0] mul_ln1352_73_fu_7864_p1;
wire   [7:0] w_tensor_i_4_10_fu_5504_p4;
wire  signed [7:0] mul_ln1352_75_fu_7874_p0;
wire  signed [7:0] mul_ln1352_75_fu_7874_p1;
wire   [7:0] w_tensor_i_4_12_fu_5524_p4;
wire  signed [7:0] mul_ln1352_77_fu_7884_p0;
wire  signed [7:0] mul_ln1352_77_fu_7884_p1;
wire   [7:0] w_tensor_i_4_14_fu_5544_p4;
wire  signed [7:0] mul_ln1352_79_fu_7894_p0;
wire  signed [7:0] mul_ln1352_79_fu_7894_p1;
wire   [7:0] w_tensor_i_5_1_fu_5564_p4;
wire  signed [7:0] mul_ln1352_81_fu_7904_p0;
wire  signed [7:0] mul_ln1352_81_fu_7904_p1;
wire   [7:0] w_tensor_i_5_3_fu_5584_p4;
wire  signed [7:0] mul_ln1352_83_fu_7914_p0;
wire  signed [7:0] mul_ln1352_83_fu_7914_p1;
wire   [7:0] w_tensor_i_5_5_fu_5604_p4;
wire  signed [7:0] mul_ln1352_85_fu_7924_p0;
wire  signed [7:0] mul_ln1352_85_fu_7924_p1;
wire   [7:0] w_tensor_i_5_7_fu_5624_p4;
wire  signed [7:0] mul_ln1352_87_fu_7934_p0;
wire  signed [7:0] mul_ln1352_87_fu_7934_p1;
wire   [7:0] w_tensor_i_5_9_fu_5644_p4;
wire  signed [7:0] mul_ln1352_89_fu_7944_p0;
wire  signed [7:0] mul_ln1352_89_fu_7944_p1;
wire   [7:0] w_tensor_i_5_10_fu_5664_p4;
wire  signed [7:0] mul_ln1352_91_fu_7954_p0;
wire  signed [7:0] mul_ln1352_91_fu_7954_p1;
wire   [7:0] w_tensor_i_5_12_fu_5684_p4;
wire  signed [7:0] mul_ln1352_93_fu_7964_p0;
wire  signed [7:0] mul_ln1352_93_fu_7964_p1;
wire   [7:0] w_tensor_i_5_14_fu_5704_p4;
wire  signed [7:0] mul_ln1352_95_fu_7974_p0;
wire  signed [7:0] mul_ln1352_95_fu_7974_p1;
wire   [7:0] w_tensor_i_6_1_fu_5724_p4;
wire  signed [7:0] mul_ln1352_97_fu_7984_p0;
wire  signed [7:0] mul_ln1352_97_fu_7984_p1;
wire   [7:0] w_tensor_i_6_3_fu_5744_p4;
wire  signed [7:0] mul_ln1352_99_fu_7994_p0;
wire  signed [7:0] mul_ln1352_99_fu_7994_p1;
wire   [7:0] w_tensor_i_6_5_fu_5764_p4;
wire  signed [7:0] mul_ln1352_101_fu_8004_p0;
wire  signed [7:0] mul_ln1352_101_fu_8004_p1;
wire   [7:0] w_tensor_i_6_7_fu_5784_p4;
wire  signed [7:0] mul_ln1352_103_fu_8014_p0;
wire  signed [7:0] mul_ln1352_103_fu_8014_p1;
wire   [7:0] w_tensor_i_6_9_fu_5804_p4;
wire  signed [7:0] mul_ln1352_105_fu_8024_p0;
wire  signed [7:0] mul_ln1352_105_fu_8024_p1;
wire   [7:0] w_tensor_i_6_10_fu_5824_p4;
wire  signed [7:0] mul_ln1352_107_fu_8034_p0;
wire  signed [7:0] mul_ln1352_107_fu_8034_p1;
wire   [7:0] w_tensor_i_6_12_fu_5844_p4;
wire  signed [7:0] mul_ln1352_109_fu_8044_p0;
wire  signed [7:0] mul_ln1352_109_fu_8044_p1;
wire   [7:0] w_tensor_i_6_14_fu_5864_p4;
wire  signed [7:0] mul_ln1352_111_fu_8054_p0;
wire  signed [7:0] mul_ln1352_111_fu_8054_p1;
wire   [7:0] w_tensor_i_7_1_fu_5884_p4;
wire  signed [7:0] mul_ln1352_113_fu_8064_p0;
wire  signed [7:0] mul_ln1352_113_fu_8064_p1;
wire   [7:0] w_tensor_i_7_3_fu_5904_p4;
wire  signed [7:0] mul_ln1352_115_fu_8074_p0;
wire  signed [7:0] mul_ln1352_115_fu_8074_p1;
wire   [7:0] w_tensor_i_7_5_fu_5924_p4;
wire  signed [7:0] mul_ln1352_117_fu_8084_p0;
wire  signed [7:0] mul_ln1352_117_fu_8084_p1;
wire   [7:0] w_tensor_i_7_7_fu_5944_p4;
wire  signed [7:0] mul_ln1352_119_fu_8094_p0;
wire  signed [7:0] mul_ln1352_119_fu_8094_p1;
wire   [7:0] w_tensor_i_7_9_fu_5964_p4;
wire  signed [7:0] mul_ln1352_121_fu_8104_p0;
wire  signed [7:0] mul_ln1352_121_fu_8104_p1;
wire   [7:0] w_tensor_i_7_10_fu_5984_p4;
wire  signed [7:0] mul_ln1352_123_fu_8114_p0;
wire  signed [7:0] mul_ln1352_123_fu_8114_p1;
wire   [7:0] w_tensor_i_7_12_fu_6004_p4;
wire  signed [7:0] mul_ln1352_125_fu_8124_p0;
wire  signed [7:0] mul_ln1352_125_fu_8124_p1;
wire   [7:0] w_tensor_i_7_14_fu_6024_p4;
wire  signed [7:0] mul_ln1352_127_fu_8134_p0;
wire  signed [7:0] mul_ln1352_127_fu_8134_p1;
wire   [7:0] w_tensor_i_8_1_fu_6044_p4;
wire  signed [7:0] mul_ln1352_129_fu_8144_p0;
wire  signed [7:0] mul_ln1352_129_fu_8144_p1;
wire   [7:0] w_tensor_i_8_3_fu_6064_p4;
wire  signed [7:0] mul_ln1352_131_fu_8154_p0;
wire  signed [7:0] mul_ln1352_131_fu_8154_p1;
wire   [7:0] w_tensor_i_8_5_fu_6084_p4;
wire  signed [7:0] mul_ln1352_133_fu_8164_p0;
wire  signed [7:0] mul_ln1352_133_fu_8164_p1;
wire   [7:0] w_tensor_i_8_7_fu_6104_p4;
wire  signed [7:0] mul_ln1352_135_fu_8174_p0;
wire  signed [7:0] mul_ln1352_135_fu_8174_p1;
wire   [7:0] w_tensor_i_8_9_fu_6124_p4;
wire  signed [7:0] mul_ln1352_137_fu_8184_p0;
wire  signed [7:0] mul_ln1352_137_fu_8184_p1;
wire   [7:0] w_tensor_i_8_10_fu_6144_p4;
wire  signed [7:0] mul_ln1352_139_fu_8194_p0;
wire  signed [7:0] mul_ln1352_139_fu_8194_p1;
wire   [7:0] w_tensor_i_8_12_fu_6164_p4;
wire  signed [7:0] mul_ln1352_141_fu_8204_p0;
wire  signed [7:0] mul_ln1352_141_fu_8204_p1;
wire   [7:0] w_tensor_i_8_14_fu_6184_p4;
wire  signed [7:0] mul_ln1352_143_fu_8214_p0;
wire  signed [7:0] mul_ln1352_143_fu_8214_p1;
wire   [7:0] w_tensor_i_9_1_fu_6204_p4;
wire  signed [7:0] mul_ln1352_145_fu_8224_p0;
wire  signed [7:0] mul_ln1352_145_fu_8224_p1;
wire   [7:0] w_tensor_i_9_3_fu_6224_p4;
wire  signed [7:0] mul_ln1352_147_fu_8234_p0;
wire  signed [7:0] mul_ln1352_147_fu_8234_p1;
wire   [7:0] w_tensor_i_9_5_fu_6244_p4;
wire  signed [7:0] mul_ln1352_149_fu_8244_p0;
wire  signed [7:0] mul_ln1352_149_fu_8244_p1;
wire   [7:0] w_tensor_i_9_7_fu_6264_p4;
wire  signed [7:0] mul_ln1352_151_fu_8254_p0;
wire  signed [7:0] mul_ln1352_151_fu_8254_p1;
wire   [7:0] w_tensor_i_9_9_fu_6284_p4;
wire  signed [7:0] mul_ln1352_153_fu_8264_p0;
wire  signed [7:0] mul_ln1352_153_fu_8264_p1;
wire   [7:0] w_tensor_i_9_10_fu_6304_p4;
wire  signed [7:0] mul_ln1352_155_fu_8274_p0;
wire  signed [7:0] mul_ln1352_155_fu_8274_p1;
wire   [7:0] w_tensor_i_9_12_fu_6324_p4;
wire  signed [7:0] mul_ln1352_157_fu_8284_p0;
wire  signed [7:0] mul_ln1352_157_fu_8284_p1;
wire   [7:0] w_tensor_i_9_14_fu_6344_p4;
wire  signed [7:0] mul_ln1352_159_fu_8294_p0;
wire  signed [7:0] mul_ln1352_159_fu_8294_p1;
wire   [7:0] w_tensor_i_10_1_fu_6364_p4;
wire  signed [7:0] mul_ln1352_161_fu_8304_p0;
wire  signed [7:0] mul_ln1352_161_fu_8304_p1;
wire   [7:0] w_tensor_i_10_3_fu_6384_p4;
wire  signed [7:0] mul_ln1352_163_fu_8314_p0;
wire  signed [7:0] mul_ln1352_163_fu_8314_p1;
wire   [7:0] w_tensor_i_10_5_fu_6404_p4;
wire  signed [7:0] mul_ln1352_165_fu_8324_p0;
wire  signed [7:0] mul_ln1352_165_fu_8324_p1;
wire   [7:0] w_tensor_i_10_7_fu_6424_p4;
wire  signed [7:0] mul_ln1352_167_fu_8334_p0;
wire  signed [7:0] mul_ln1352_167_fu_8334_p1;
wire   [7:0] w_tensor_i_10_9_fu_6444_p4;
wire  signed [7:0] mul_ln1352_169_fu_8344_p0;
wire  signed [7:0] mul_ln1352_169_fu_8344_p1;
wire   [7:0] w_tensor_i_10_10_fu_6464_p4;
wire  signed [7:0] mul_ln1352_171_fu_8354_p0;
wire  signed [7:0] mul_ln1352_171_fu_8354_p1;
wire   [7:0] w_tensor_i_10_12_fu_6484_p4;
wire  signed [7:0] mul_ln1352_173_fu_8364_p0;
wire  signed [7:0] mul_ln1352_173_fu_8364_p1;
wire   [7:0] w_tensor_i_10_14_fu_6504_p4;
wire  signed [7:0] mul_ln1352_175_fu_8374_p0;
wire  signed [7:0] mul_ln1352_175_fu_8374_p1;
wire   [7:0] w_tensor_i_11_1_fu_6524_p4;
wire  signed [7:0] mul_ln1352_177_fu_8384_p0;
wire  signed [7:0] mul_ln1352_177_fu_8384_p1;
wire   [7:0] w_tensor_i_11_3_fu_6544_p4;
wire  signed [7:0] mul_ln1352_179_fu_8394_p0;
wire  signed [7:0] mul_ln1352_179_fu_8394_p1;
wire   [7:0] w_tensor_i_11_5_fu_6564_p4;
wire  signed [7:0] mul_ln1352_181_fu_8404_p0;
wire  signed [7:0] mul_ln1352_181_fu_8404_p1;
wire   [7:0] w_tensor_i_11_7_fu_6584_p4;
wire  signed [7:0] mul_ln1352_183_fu_8414_p0;
wire  signed [7:0] mul_ln1352_183_fu_8414_p1;
wire   [7:0] w_tensor_i_11_9_fu_6604_p4;
wire  signed [7:0] mul_ln1352_185_fu_8424_p0;
wire  signed [7:0] mul_ln1352_185_fu_8424_p1;
wire   [7:0] w_tensor_i_11_10_fu_6624_p4;
wire  signed [7:0] mul_ln1352_187_fu_8434_p0;
wire  signed [7:0] mul_ln1352_187_fu_8434_p1;
wire   [7:0] w_tensor_i_11_12_fu_6644_p4;
wire  signed [7:0] mul_ln1352_189_fu_8444_p0;
wire  signed [7:0] mul_ln1352_189_fu_8444_p1;
wire   [7:0] w_tensor_i_11_14_fu_6664_p4;
wire  signed [7:0] mul_ln1352_191_fu_8454_p0;
wire  signed [7:0] mul_ln1352_191_fu_8454_p1;
wire   [7:0] w_tensor_i_12_1_fu_6684_p4;
wire  signed [7:0] mul_ln1352_193_fu_8464_p0;
wire  signed [7:0] mul_ln1352_193_fu_8464_p1;
wire   [7:0] w_tensor_i_12_3_fu_6704_p4;
wire  signed [7:0] mul_ln1352_195_fu_8474_p0;
wire  signed [7:0] mul_ln1352_195_fu_8474_p1;
wire   [7:0] w_tensor_i_12_5_fu_6724_p4;
wire  signed [7:0] mul_ln1352_197_fu_8484_p0;
wire  signed [7:0] mul_ln1352_197_fu_8484_p1;
wire   [7:0] w_tensor_i_12_7_fu_6744_p4;
wire  signed [7:0] mul_ln1352_199_fu_8494_p0;
wire  signed [7:0] mul_ln1352_199_fu_8494_p1;
wire   [7:0] w_tensor_i_12_9_fu_6764_p4;
wire  signed [7:0] mul_ln1352_201_fu_8504_p0;
wire  signed [7:0] mul_ln1352_201_fu_8504_p1;
wire   [7:0] w_tensor_i_12_10_fu_6784_p4;
wire  signed [7:0] mul_ln1352_203_fu_8514_p0;
wire  signed [7:0] mul_ln1352_203_fu_8514_p1;
wire   [7:0] w_tensor_i_12_12_fu_6804_p4;
wire  signed [7:0] mul_ln1352_205_fu_8524_p0;
wire  signed [7:0] mul_ln1352_205_fu_8524_p1;
wire   [7:0] w_tensor_i_12_14_fu_6824_p4;
wire  signed [7:0] mul_ln1352_207_fu_8534_p0;
wire  signed [7:0] mul_ln1352_207_fu_8534_p1;
wire   [7:0] w_tensor_i_13_1_fu_6844_p4;
wire  signed [7:0] mul_ln1352_209_fu_8544_p0;
wire  signed [7:0] mul_ln1352_209_fu_8544_p1;
wire   [7:0] w_tensor_i_13_3_fu_6864_p4;
wire  signed [7:0] mul_ln1352_211_fu_8554_p0;
wire  signed [7:0] mul_ln1352_211_fu_8554_p1;
wire   [7:0] w_tensor_i_13_5_fu_6884_p4;
wire  signed [7:0] mul_ln1352_213_fu_8564_p0;
wire  signed [7:0] mul_ln1352_213_fu_8564_p1;
wire   [7:0] w_tensor_i_13_7_fu_6904_p4;
wire  signed [7:0] mul_ln1352_215_fu_8574_p0;
wire  signed [7:0] mul_ln1352_215_fu_8574_p1;
wire   [7:0] w_tensor_i_13_9_fu_6924_p4;
wire  signed [7:0] mul_ln1352_217_fu_8584_p0;
wire  signed [7:0] mul_ln1352_217_fu_8584_p1;
wire   [7:0] w_tensor_i_13_10_fu_6944_p4;
wire  signed [7:0] mul_ln1352_219_fu_8594_p0;
wire  signed [7:0] mul_ln1352_219_fu_8594_p1;
wire   [7:0] w_tensor_i_13_12_fu_6964_p4;
wire  signed [7:0] mul_ln1352_221_fu_8604_p0;
wire  signed [7:0] mul_ln1352_221_fu_8604_p1;
wire   [7:0] w_tensor_i_13_14_fu_6984_p4;
wire  signed [7:0] mul_ln1352_223_fu_8614_p0;
wire  signed [7:0] mul_ln1352_223_fu_8614_p1;
wire   [7:0] w_tensor_i_14_1_fu_7004_p4;
wire  signed [7:0] mul_ln1352_225_fu_8624_p0;
wire  signed [7:0] mul_ln1352_225_fu_8624_p1;
wire   [7:0] w_tensor_i_14_3_fu_7024_p4;
wire  signed [7:0] mul_ln1352_227_fu_8634_p0;
wire  signed [7:0] mul_ln1352_227_fu_8634_p1;
wire   [7:0] w_tensor_i_14_5_fu_7044_p4;
wire  signed [7:0] mul_ln1352_229_fu_8644_p0;
wire  signed [7:0] mul_ln1352_229_fu_8644_p1;
wire   [7:0] w_tensor_i_14_7_fu_7064_p4;
wire  signed [7:0] mul_ln1352_231_fu_8654_p0;
wire  signed [7:0] mul_ln1352_231_fu_8654_p1;
wire   [7:0] w_tensor_i_14_9_fu_7084_p4;
wire  signed [7:0] mul_ln1352_233_fu_8664_p0;
wire  signed [7:0] mul_ln1352_233_fu_8664_p1;
wire   [7:0] w_tensor_i_14_10_fu_7104_p4;
wire  signed [7:0] mul_ln1352_235_fu_8674_p0;
wire  signed [7:0] mul_ln1352_235_fu_8674_p1;
wire   [7:0] w_tensor_i_14_12_fu_7124_p4;
wire  signed [7:0] mul_ln1352_237_fu_8684_p0;
wire  signed [7:0] mul_ln1352_237_fu_8684_p1;
wire   [7:0] w_tensor_i_14_14_fu_7144_p4;
wire  signed [7:0] mul_ln1352_239_fu_8694_p0;
wire  signed [7:0] mul_ln1352_239_fu_8694_p1;
wire   [7:0] w_tensor_i_15_1_fu_7164_p4;
wire  signed [7:0] mul_ln1352_241_fu_8704_p0;
wire  signed [7:0] mul_ln1352_241_fu_8704_p1;
wire   [7:0] w_tensor_i_15_3_fu_7184_p4;
wire  signed [7:0] mul_ln1352_243_fu_8714_p0;
wire  signed [7:0] mul_ln1352_243_fu_8714_p1;
wire   [7:0] w_tensor_i_15_5_fu_7204_p4;
wire  signed [7:0] mul_ln1352_245_fu_8724_p0;
wire  signed [7:0] mul_ln1352_245_fu_8724_p1;
wire   [7:0] w_tensor_i_15_7_fu_7224_p4;
wire  signed [7:0] mul_ln1352_247_fu_8734_p0;
wire  signed [7:0] mul_ln1352_247_fu_8734_p1;
wire   [7:0] w_tensor_i_15_9_fu_7244_p4;
wire  signed [7:0] mul_ln1352_249_fu_8744_p0;
wire  signed [7:0] mul_ln1352_249_fu_8744_p1;
wire   [7:0] w_tensor_i_15_10_fu_7264_p4;
wire  signed [7:0] mul_ln1352_251_fu_8754_p0;
wire  signed [7:0] mul_ln1352_251_fu_8754_p1;
wire   [7:0] w_tensor_i_15_12_fu_7284_p4;
wire  signed [7:0] mul_ln1352_253_fu_8764_p0;
wire  signed [7:0] mul_ln1352_253_fu_8764_p1;
wire   [7:0] w_tensor_i_15_14_fu_7304_p4;
wire  signed [7:0] mul_ln1352_255_fu_8774_p0;
wire  signed [7:0] mul_ln1352_255_fu_8774_p1;
wire  signed [16:0] grp_fu_11747_p3;
wire  signed [16:0] grp_fu_11756_p3;
wire  signed [17:0] sext_ln700_1_fu_8856_p1;
wire  signed [17:0] sext_ln700_2_fu_8859_p1;
wire  signed [16:0] grp_fu_11765_p3;
wire  signed [16:0] grp_fu_11774_p3;
wire  signed [17:0] sext_ln700_4_fu_8868_p1;
wire  signed [17:0] sext_ln700_5_fu_8871_p1;
wire  signed [16:0] grp_fu_11783_p3;
wire  signed [16:0] grp_fu_11792_p3;
wire  signed [17:0] sext_ln700_8_fu_8880_p1;
wire  signed [17:0] sext_ln700_9_fu_8883_p1;
wire  signed [16:0] grp_fu_11801_p3;
wire  signed [16:0] grp_fu_11810_p3;
wire  signed [17:0] sext_ln700_11_fu_8892_p1;
wire  signed [17:0] sext_ln700_12_fu_8895_p1;
wire  signed [16:0] grp_fu_11819_p3;
wire  signed [16:0] grp_fu_11828_p3;
wire  signed [17:0] sext_ln700_16_fu_8952_p1;
wire  signed [17:0] sext_ln700_17_fu_8955_p1;
wire  signed [16:0] grp_fu_11837_p3;
wire  signed [16:0] grp_fu_11846_p3;
wire  signed [17:0] sext_ln700_19_fu_8964_p1;
wire  signed [17:0] sext_ln700_20_fu_8967_p1;
wire  signed [16:0] grp_fu_11855_p3;
wire  signed [16:0] grp_fu_11864_p3;
wire  signed [17:0] sext_ln700_23_fu_8976_p1;
wire  signed [17:0] sext_ln700_24_fu_8979_p1;
wire  signed [16:0] grp_fu_11873_p3;
wire  signed [16:0] grp_fu_11882_p3;
wire  signed [17:0] sext_ln700_26_fu_8988_p1;
wire  signed [17:0] sext_ln700_27_fu_8991_p1;
wire  signed [16:0] grp_fu_11891_p3;
wire  signed [16:0] grp_fu_11900_p3;
wire  signed [17:0] sext_ln700_31_fu_9048_p1;
wire  signed [17:0] sext_ln700_32_fu_9051_p1;
wire  signed [16:0] grp_fu_11909_p3;
wire  signed [16:0] grp_fu_11918_p3;
wire  signed [17:0] sext_ln700_34_fu_9060_p1;
wire  signed [17:0] sext_ln700_35_fu_9063_p1;
wire  signed [16:0] grp_fu_11927_p3;
wire  signed [16:0] grp_fu_11936_p3;
wire  signed [17:0] sext_ln700_38_fu_9072_p1;
wire  signed [17:0] sext_ln700_39_fu_9075_p1;
wire  signed [16:0] grp_fu_11945_p3;
wire  signed [16:0] grp_fu_11954_p3;
wire  signed [17:0] sext_ln700_41_fu_9084_p1;
wire  signed [17:0] sext_ln700_42_fu_9087_p1;
wire  signed [16:0] grp_fu_11963_p3;
wire  signed [16:0] grp_fu_11972_p3;
wire  signed [17:0] sext_ln700_46_fu_9144_p1;
wire  signed [17:0] sext_ln700_47_fu_9147_p1;
wire  signed [16:0] grp_fu_11981_p3;
wire  signed [16:0] grp_fu_11990_p3;
wire  signed [17:0] sext_ln700_49_fu_9156_p1;
wire  signed [17:0] sext_ln700_50_fu_9159_p1;
wire  signed [16:0] grp_fu_11999_p3;
wire  signed [16:0] grp_fu_12008_p3;
wire  signed [17:0] sext_ln700_53_fu_9168_p1;
wire  signed [17:0] sext_ln700_54_fu_9171_p1;
wire  signed [16:0] grp_fu_12017_p3;
wire  signed [16:0] grp_fu_12026_p3;
wire  signed [17:0] sext_ln700_56_fu_9180_p1;
wire  signed [17:0] sext_ln700_57_fu_9183_p1;
wire  signed [16:0] grp_fu_12035_p3;
wire  signed [16:0] grp_fu_12044_p3;
wire  signed [17:0] sext_ln700_61_fu_9240_p1;
wire  signed [17:0] sext_ln700_62_fu_9243_p1;
wire  signed [16:0] grp_fu_12053_p3;
wire  signed [16:0] grp_fu_12062_p3;
wire  signed [17:0] sext_ln700_64_fu_9252_p1;
wire  signed [17:0] sext_ln700_65_fu_9255_p1;
wire  signed [16:0] grp_fu_12071_p3;
wire  signed [16:0] grp_fu_12080_p3;
wire  signed [17:0] sext_ln700_68_fu_9264_p1;
wire  signed [17:0] sext_ln700_69_fu_9267_p1;
wire  signed [16:0] grp_fu_12089_p3;
wire  signed [16:0] grp_fu_12098_p3;
wire  signed [17:0] sext_ln700_71_fu_9276_p1;
wire  signed [17:0] sext_ln700_72_fu_9279_p1;
wire  signed [16:0] grp_fu_12107_p3;
wire  signed [16:0] grp_fu_12116_p3;
wire  signed [17:0] sext_ln700_76_fu_9336_p1;
wire  signed [17:0] sext_ln700_77_fu_9339_p1;
wire  signed [16:0] grp_fu_12125_p3;
wire  signed [16:0] grp_fu_12134_p3;
wire  signed [17:0] sext_ln700_79_fu_9348_p1;
wire  signed [17:0] sext_ln700_80_fu_9351_p1;
wire  signed [16:0] grp_fu_12143_p3;
wire  signed [16:0] grp_fu_12152_p3;
wire  signed [17:0] sext_ln700_83_fu_9360_p1;
wire  signed [17:0] sext_ln700_84_fu_9363_p1;
wire  signed [16:0] grp_fu_12161_p3;
wire  signed [16:0] grp_fu_12170_p3;
wire  signed [17:0] sext_ln700_86_fu_9372_p1;
wire  signed [17:0] sext_ln700_87_fu_9375_p1;
wire  signed [16:0] grp_fu_12179_p3;
wire  signed [16:0] grp_fu_12188_p3;
wire  signed [17:0] sext_ln700_91_fu_9432_p1;
wire  signed [17:0] sext_ln700_92_fu_9435_p1;
wire  signed [16:0] grp_fu_12197_p3;
wire  signed [16:0] grp_fu_12206_p3;
wire  signed [17:0] sext_ln700_94_fu_9444_p1;
wire  signed [17:0] sext_ln700_95_fu_9447_p1;
wire  signed [16:0] grp_fu_12215_p3;
wire  signed [16:0] grp_fu_12224_p3;
wire  signed [17:0] sext_ln700_98_fu_9456_p1;
wire  signed [17:0] sext_ln700_99_fu_9459_p1;
wire  signed [16:0] grp_fu_12233_p3;
wire  signed [16:0] grp_fu_12242_p3;
wire  signed [17:0] sext_ln700_101_fu_9468_p1;
wire  signed [17:0] sext_ln700_102_fu_9471_p1;
wire  signed [16:0] grp_fu_12251_p3;
wire  signed [16:0] grp_fu_12260_p3;
wire  signed [17:0] sext_ln700_106_fu_9528_p1;
wire  signed [17:0] sext_ln700_107_fu_9531_p1;
wire  signed [16:0] grp_fu_12269_p3;
wire  signed [16:0] grp_fu_12278_p3;
wire  signed [17:0] sext_ln700_109_fu_9540_p1;
wire  signed [17:0] sext_ln700_110_fu_9543_p1;
wire  signed [16:0] grp_fu_12287_p3;
wire  signed [16:0] grp_fu_12296_p3;
wire  signed [17:0] sext_ln700_113_fu_9552_p1;
wire  signed [17:0] sext_ln700_114_fu_9555_p1;
wire  signed [16:0] grp_fu_12305_p3;
wire  signed [16:0] grp_fu_12314_p3;
wire  signed [17:0] sext_ln700_116_fu_9564_p1;
wire  signed [17:0] sext_ln700_117_fu_9567_p1;
wire  signed [16:0] grp_fu_12323_p3;
wire  signed [16:0] grp_fu_12332_p3;
wire  signed [17:0] sext_ln700_121_fu_9624_p1;
wire  signed [17:0] sext_ln700_122_fu_9627_p1;
wire  signed [16:0] grp_fu_12341_p3;
wire  signed [16:0] grp_fu_12350_p3;
wire  signed [17:0] sext_ln700_124_fu_9636_p1;
wire  signed [17:0] sext_ln700_125_fu_9639_p1;
wire  signed [16:0] grp_fu_12359_p3;
wire  signed [16:0] grp_fu_12368_p3;
wire  signed [17:0] sext_ln700_128_fu_9648_p1;
wire  signed [17:0] sext_ln700_129_fu_9651_p1;
wire  signed [16:0] grp_fu_12377_p3;
wire  signed [16:0] grp_fu_12386_p3;
wire  signed [17:0] sext_ln700_131_fu_9660_p1;
wire  signed [17:0] sext_ln700_132_fu_9663_p1;
wire  signed [16:0] grp_fu_12395_p3;
wire  signed [16:0] grp_fu_12404_p3;
wire  signed [17:0] sext_ln700_136_fu_9720_p1;
wire  signed [17:0] sext_ln700_137_fu_9723_p1;
wire  signed [16:0] grp_fu_12413_p3;
wire  signed [16:0] grp_fu_12422_p3;
wire  signed [17:0] sext_ln700_139_fu_9732_p1;
wire  signed [17:0] sext_ln700_140_fu_9735_p1;
wire  signed [16:0] grp_fu_12431_p3;
wire  signed [16:0] grp_fu_12440_p3;
wire  signed [17:0] sext_ln700_143_fu_9744_p1;
wire  signed [17:0] sext_ln700_144_fu_9747_p1;
wire  signed [16:0] grp_fu_12449_p3;
wire  signed [16:0] grp_fu_12458_p3;
wire  signed [17:0] sext_ln700_146_fu_9756_p1;
wire  signed [17:0] sext_ln700_147_fu_9759_p1;
wire  signed [16:0] grp_fu_12467_p3;
wire  signed [16:0] grp_fu_12476_p3;
wire  signed [17:0] sext_ln700_151_fu_9816_p1;
wire  signed [17:0] sext_ln700_152_fu_9819_p1;
wire  signed [16:0] grp_fu_12485_p3;
wire  signed [16:0] grp_fu_12494_p3;
wire  signed [17:0] sext_ln700_154_fu_9828_p1;
wire  signed [17:0] sext_ln700_155_fu_9831_p1;
wire  signed [16:0] grp_fu_12503_p3;
wire  signed [16:0] grp_fu_12512_p3;
wire  signed [17:0] sext_ln700_158_fu_9840_p1;
wire  signed [17:0] sext_ln700_159_fu_9843_p1;
wire  signed [16:0] grp_fu_12521_p3;
wire  signed [16:0] grp_fu_12530_p3;
wire  signed [17:0] sext_ln700_161_fu_9852_p1;
wire  signed [17:0] sext_ln700_162_fu_9855_p1;
wire  signed [16:0] grp_fu_12539_p3;
wire  signed [16:0] grp_fu_12548_p3;
wire  signed [17:0] sext_ln700_166_fu_9912_p1;
wire  signed [17:0] sext_ln700_167_fu_9915_p1;
wire  signed [16:0] grp_fu_12557_p3;
wire  signed [16:0] grp_fu_12566_p3;
wire  signed [17:0] sext_ln700_169_fu_9924_p1;
wire  signed [17:0] sext_ln700_170_fu_9927_p1;
wire  signed [16:0] grp_fu_12575_p3;
wire  signed [16:0] grp_fu_12584_p3;
wire  signed [17:0] sext_ln700_173_fu_9936_p1;
wire  signed [17:0] sext_ln700_174_fu_9939_p1;
wire  signed [16:0] grp_fu_12593_p3;
wire  signed [16:0] grp_fu_12602_p3;
wire  signed [17:0] sext_ln700_176_fu_9948_p1;
wire  signed [17:0] sext_ln700_177_fu_9951_p1;
wire  signed [16:0] grp_fu_12611_p3;
wire  signed [16:0] grp_fu_12620_p3;
wire  signed [17:0] sext_ln700_181_fu_10008_p1;
wire  signed [17:0] sext_ln700_182_fu_10011_p1;
wire  signed [16:0] grp_fu_12629_p3;
wire  signed [16:0] grp_fu_12638_p3;
wire  signed [17:0] sext_ln700_184_fu_10020_p1;
wire  signed [17:0] sext_ln700_185_fu_10023_p1;
wire  signed [16:0] grp_fu_12647_p3;
wire  signed [16:0] grp_fu_12656_p3;
wire  signed [17:0] sext_ln700_188_fu_10032_p1;
wire  signed [17:0] sext_ln700_189_fu_10035_p1;
wire  signed [16:0] grp_fu_12665_p3;
wire  signed [16:0] grp_fu_12674_p3;
wire  signed [17:0] sext_ln700_191_fu_10044_p1;
wire  signed [17:0] sext_ln700_192_fu_10047_p1;
wire  signed [16:0] grp_fu_12683_p3;
wire  signed [16:0] grp_fu_12692_p3;
wire  signed [17:0] sext_ln700_196_fu_10104_p1;
wire  signed [17:0] sext_ln700_197_fu_10107_p1;
wire  signed [16:0] grp_fu_12701_p3;
wire  signed [16:0] grp_fu_12710_p3;
wire  signed [17:0] sext_ln700_199_fu_10116_p1;
wire  signed [17:0] sext_ln700_200_fu_10119_p1;
wire  signed [16:0] grp_fu_12719_p3;
wire  signed [16:0] grp_fu_12728_p3;
wire  signed [17:0] sext_ln700_203_fu_10128_p1;
wire  signed [17:0] sext_ln700_204_fu_10131_p1;
wire  signed [16:0] grp_fu_12737_p3;
wire  signed [16:0] grp_fu_12746_p3;
wire  signed [17:0] sext_ln700_206_fu_10140_p1;
wire  signed [17:0] sext_ln700_207_fu_10143_p1;
wire  signed [16:0] grp_fu_12755_p3;
wire  signed [16:0] grp_fu_12764_p3;
wire  signed [17:0] sext_ln700_211_fu_10200_p1;
wire  signed [17:0] sext_ln700_212_fu_10203_p1;
wire  signed [16:0] grp_fu_12773_p3;
wire  signed [16:0] grp_fu_12782_p3;
wire  signed [17:0] sext_ln700_214_fu_10212_p1;
wire  signed [17:0] sext_ln700_215_fu_10215_p1;
wire  signed [16:0] grp_fu_12791_p3;
wire  signed [16:0] grp_fu_12800_p3;
wire  signed [17:0] sext_ln700_218_fu_10224_p1;
wire  signed [17:0] sext_ln700_219_fu_10227_p1;
wire  signed [16:0] grp_fu_12809_p3;
wire  signed [16:0] grp_fu_12818_p3;
wire  signed [17:0] sext_ln700_221_fu_10236_p1;
wire  signed [17:0] sext_ln700_222_fu_10239_p1;
wire  signed [16:0] grp_fu_12827_p3;
wire  signed [16:0] grp_fu_12836_p3;
wire  signed [17:0] sext_ln700_226_fu_10296_p1;
wire  signed [17:0] sext_ln700_227_fu_10299_p1;
wire  signed [16:0] grp_fu_12845_p3;
wire  signed [16:0] grp_fu_12854_p3;
wire  signed [17:0] sext_ln700_229_fu_10308_p1;
wire  signed [17:0] sext_ln700_230_fu_10311_p1;
wire  signed [16:0] grp_fu_12863_p3;
wire  signed [16:0] grp_fu_12872_p3;
wire  signed [17:0] sext_ln700_233_fu_10320_p1;
wire  signed [17:0] sext_ln700_234_fu_10323_p1;
wire  signed [16:0] grp_fu_12881_p3;
wire  signed [16:0] grp_fu_12890_p3;
wire  signed [17:0] sext_ln700_236_fu_10332_p1;
wire  signed [17:0] sext_ln700_237_fu_10335_p1;
wire  signed [18:0] sext_ln700_3_fu_10348_p1;
wire  signed [18:0] sext_ln700_6_fu_10351_p1;
wire   [18:0] add_ln700_6_fu_10354_p2;
wire  signed [18:0] sext_ln700_10_fu_10364_p1;
wire  signed [18:0] sext_ln700_13_fu_10367_p1;
wire   [18:0] add_ln700_13_fu_10370_p2;
wire  signed [19:0] sext_ln700_7_fu_10360_p1;
wire  signed [19:0] sext_ln700_14_fu_10376_p1;
wire   [19:0] add_ln700_14_fu_10380_p2;
wire  signed [31:0] sext_ln68_fu_10386_p1;
wire   [31:0] a_tensor_0_0_V_fu_10344_p1;
wire   [31:0] add_ln700_15_fu_10390_p2;
wire  signed [18:0] sext_ln700_18_fu_10407_p1;
wire  signed [18:0] sext_ln700_21_fu_10410_p1;
wire   [18:0] add_ln700_22_fu_10413_p2;
wire  signed [18:0] sext_ln700_25_fu_10423_p1;
wire  signed [18:0] sext_ln700_28_fu_10426_p1;
wire   [18:0] add_ln700_29_fu_10429_p2;
wire  signed [19:0] sext_ln700_22_fu_10419_p1;
wire  signed [19:0] sext_ln700_29_fu_10435_p1;
wire   [19:0] add_ln700_30_fu_10439_p2;
wire  signed [31:0] sext_ln68_1_fu_10445_p1;
wire   [31:0] add_ln700_31_fu_10449_p2;
wire  signed [18:0] sext_ln700_33_fu_10466_p1;
wire  signed [18:0] sext_ln700_36_fu_10469_p1;
wire   [18:0] add_ln700_38_fu_10472_p2;
wire  signed [18:0] sext_ln700_40_fu_10482_p1;
wire  signed [18:0] sext_ln700_43_fu_10485_p1;
wire   [18:0] add_ln700_45_fu_10488_p2;
wire  signed [19:0] sext_ln700_37_fu_10478_p1;
wire  signed [19:0] sext_ln700_44_fu_10494_p1;
wire   [19:0] add_ln700_46_fu_10498_p2;
wire  signed [31:0] sext_ln68_2_fu_10504_p1;
wire   [31:0] add_ln700_47_fu_10508_p2;
wire  signed [18:0] sext_ln700_48_fu_10525_p1;
wire  signed [18:0] sext_ln700_51_fu_10528_p1;
wire   [18:0] add_ln700_54_fu_10531_p2;
wire  signed [18:0] sext_ln700_55_fu_10541_p1;
wire  signed [18:0] sext_ln700_58_fu_10544_p1;
wire   [18:0] add_ln700_61_fu_10547_p2;
wire  signed [19:0] sext_ln700_52_fu_10537_p1;
wire  signed [19:0] sext_ln700_59_fu_10553_p1;
wire   [19:0] add_ln700_62_fu_10557_p2;
wire  signed [31:0] sext_ln68_3_fu_10563_p1;
wire   [31:0] add_ln700_63_fu_10567_p2;
wire  signed [18:0] sext_ln700_63_fu_10584_p1;
wire  signed [18:0] sext_ln700_66_fu_10587_p1;
wire   [18:0] add_ln700_70_fu_10590_p2;
wire  signed [18:0] sext_ln700_70_fu_10600_p1;
wire  signed [18:0] sext_ln700_73_fu_10603_p1;
wire   [18:0] add_ln700_77_fu_10606_p2;
wire  signed [19:0] sext_ln700_67_fu_10596_p1;
wire  signed [19:0] sext_ln700_74_fu_10612_p1;
wire   [19:0] add_ln700_78_fu_10616_p2;
wire  signed [31:0] sext_ln68_4_fu_10622_p1;
wire   [31:0] add_ln700_79_fu_10626_p2;
wire  signed [18:0] sext_ln700_78_fu_10643_p1;
wire  signed [18:0] sext_ln700_81_fu_10646_p1;
wire   [18:0] add_ln700_86_fu_10649_p2;
wire  signed [18:0] sext_ln700_85_fu_10659_p1;
wire  signed [18:0] sext_ln700_88_fu_10662_p1;
wire   [18:0] add_ln700_93_fu_10665_p2;
wire  signed [19:0] sext_ln700_82_fu_10655_p1;
wire  signed [19:0] sext_ln700_89_fu_10671_p1;
wire   [19:0] add_ln700_94_fu_10675_p2;
wire  signed [31:0] sext_ln68_5_fu_10681_p1;
wire   [31:0] add_ln700_95_fu_10685_p2;
wire  signed [18:0] sext_ln700_93_fu_10702_p1;
wire  signed [18:0] sext_ln700_96_fu_10705_p1;
wire   [18:0] add_ln700_102_fu_10708_p2;
wire  signed [18:0] sext_ln700_100_fu_10718_p1;
wire  signed [18:0] sext_ln700_103_fu_10721_p1;
wire   [18:0] add_ln700_109_fu_10724_p2;
wire  signed [19:0] sext_ln700_97_fu_10714_p1;
wire  signed [19:0] sext_ln700_104_fu_10730_p1;
wire   [19:0] add_ln700_110_fu_10734_p2;
wire  signed [31:0] sext_ln68_6_fu_10740_p1;
wire   [31:0] add_ln700_111_fu_10744_p2;
wire  signed [18:0] sext_ln700_108_fu_10761_p1;
wire  signed [18:0] sext_ln700_111_fu_10764_p1;
wire   [18:0] add_ln700_118_fu_10767_p2;
wire  signed [18:0] sext_ln700_115_fu_10777_p1;
wire  signed [18:0] sext_ln700_118_fu_10780_p1;
wire   [18:0] add_ln700_125_fu_10783_p2;
wire  signed [19:0] sext_ln700_112_fu_10773_p1;
wire  signed [19:0] sext_ln700_119_fu_10789_p1;
wire   [19:0] add_ln700_126_fu_10793_p2;
wire  signed [31:0] sext_ln68_7_fu_10799_p1;
wire   [31:0] add_ln700_127_fu_10803_p2;
wire  signed [18:0] sext_ln700_123_fu_10820_p1;
wire  signed [18:0] sext_ln700_126_fu_10823_p1;
wire   [18:0] add_ln700_134_fu_10826_p2;
wire  signed [18:0] sext_ln700_130_fu_10836_p1;
wire  signed [18:0] sext_ln700_133_fu_10839_p1;
wire   [18:0] add_ln700_141_fu_10842_p2;
wire  signed [19:0] sext_ln700_127_fu_10832_p1;
wire  signed [19:0] sext_ln700_134_fu_10848_p1;
wire   [19:0] add_ln700_142_fu_10852_p2;
wire  signed [31:0] sext_ln68_8_fu_10858_p1;
wire   [31:0] add_ln700_143_fu_10862_p2;
wire  signed [18:0] sext_ln700_138_fu_10879_p1;
wire  signed [18:0] sext_ln700_141_fu_10882_p1;
wire   [18:0] add_ln700_150_fu_10885_p2;
wire  signed [18:0] sext_ln700_145_fu_10895_p1;
wire  signed [18:0] sext_ln700_148_fu_10898_p1;
wire   [18:0] add_ln700_157_fu_10901_p2;
wire  signed [19:0] sext_ln700_142_fu_10891_p1;
wire  signed [19:0] sext_ln700_149_fu_10907_p1;
wire   [19:0] add_ln700_158_fu_10911_p2;
wire  signed [31:0] sext_ln68_9_fu_10917_p1;
wire   [31:0] add_ln700_159_fu_10921_p2;
wire  signed [18:0] sext_ln700_153_fu_10938_p1;
wire  signed [18:0] sext_ln700_156_fu_10941_p1;
wire   [18:0] add_ln700_166_fu_10944_p2;
wire  signed [18:0] sext_ln700_160_fu_10954_p1;
wire  signed [18:0] sext_ln700_163_fu_10957_p1;
wire   [18:0] add_ln700_173_fu_10960_p2;
wire  signed [19:0] sext_ln700_157_fu_10950_p1;
wire  signed [19:0] sext_ln700_164_fu_10966_p1;
wire   [19:0] add_ln700_174_fu_10970_p2;
wire  signed [31:0] sext_ln68_10_fu_10976_p1;
wire   [31:0] add_ln700_175_fu_10980_p2;
wire  signed [18:0] sext_ln700_168_fu_10997_p1;
wire  signed [18:0] sext_ln700_171_fu_11000_p1;
wire   [18:0] add_ln700_182_fu_11003_p2;
wire  signed [18:0] sext_ln700_175_fu_11013_p1;
wire  signed [18:0] sext_ln700_178_fu_11016_p1;
wire   [18:0] add_ln700_189_fu_11019_p2;
wire  signed [19:0] sext_ln700_172_fu_11009_p1;
wire  signed [19:0] sext_ln700_179_fu_11025_p1;
wire   [19:0] add_ln700_190_fu_11029_p2;
wire  signed [31:0] sext_ln68_11_fu_11035_p1;
wire   [31:0] add_ln700_191_fu_11039_p2;
wire  signed [18:0] sext_ln700_183_fu_11056_p1;
wire  signed [18:0] sext_ln700_186_fu_11059_p1;
wire   [18:0] add_ln700_198_fu_11062_p2;
wire  signed [18:0] sext_ln700_190_fu_11072_p1;
wire  signed [18:0] sext_ln700_193_fu_11075_p1;
wire   [18:0] add_ln700_205_fu_11078_p2;
wire  signed [19:0] sext_ln700_187_fu_11068_p1;
wire  signed [19:0] sext_ln700_194_fu_11084_p1;
wire   [19:0] add_ln700_206_fu_11088_p2;
wire  signed [31:0] sext_ln68_12_fu_11094_p1;
wire   [31:0] add_ln700_207_fu_11098_p2;
wire  signed [18:0] sext_ln700_198_fu_11115_p1;
wire  signed [18:0] sext_ln700_201_fu_11118_p1;
wire   [18:0] add_ln700_214_fu_11121_p2;
wire  signed [18:0] sext_ln700_205_fu_11131_p1;
wire  signed [18:0] sext_ln700_208_fu_11134_p1;
wire   [18:0] add_ln700_221_fu_11137_p2;
wire  signed [19:0] sext_ln700_202_fu_11127_p1;
wire  signed [19:0] sext_ln700_209_fu_11143_p1;
wire   [19:0] add_ln700_222_fu_11147_p2;
wire  signed [31:0] sext_ln68_13_fu_11153_p1;
wire   [31:0] add_ln700_223_fu_11157_p2;
wire  signed [18:0] sext_ln700_213_fu_11174_p1;
wire  signed [18:0] sext_ln700_216_fu_11177_p1;
wire   [18:0] add_ln700_230_fu_11180_p2;
wire  signed [18:0] sext_ln700_220_fu_11190_p1;
wire  signed [18:0] sext_ln700_223_fu_11193_p1;
wire   [18:0] add_ln700_237_fu_11196_p2;
wire  signed [19:0] sext_ln700_217_fu_11186_p1;
wire  signed [19:0] sext_ln700_224_fu_11202_p1;
wire   [19:0] add_ln700_238_fu_11206_p2;
wire  signed [31:0] sext_ln68_14_fu_11212_p1;
wire   [31:0] add_ln700_239_fu_11216_p2;
wire  signed [18:0] sext_ln700_228_fu_11233_p1;
wire  signed [18:0] sext_ln700_231_fu_11236_p1;
wire   [18:0] add_ln700_246_fu_11239_p2;
wire  signed [18:0] sext_ln700_235_fu_11249_p1;
wire  signed [18:0] sext_ln700_238_fu_11252_p1;
wire   [18:0] add_ln700_253_fu_11255_p2;
wire  signed [19:0] sext_ln700_232_fu_11245_p1;
wire  signed [19:0] sext_ln700_239_fu_11261_p1;
wire   [19:0] add_ln700_254_fu_11265_p2;
wire  signed [31:0] sext_ln68_15_fu_11271_p1;
wire   [31:0] add_ln700_255_fu_11275_p2;
wire   [3:0] trunc_ln4_fu_11355_p4;
wire   [3:0] y_offset_0_V_fu_11368_p0;
wire   [3:0] trunc_ln209_1_fu_11373_p4;
wire   [3:0] y_offset_1_V_fu_11386_p0;
wire   [2:0] trunc_ln5_fu_11391_p4;
wire   [32:0] zext_ln485_fu_11412_p1;
wire   [32:0] add_ln485_1_fu_11416_p2;
wire   [15:0] trunc_ln304_2_fu_11440_p4;
wire   [34:0] ret_V_fu_11478_p3;
wire   [35:0] zext_ln1352_fu_11486_p1;
wire   [15:0] trunc_ln67_fu_11521_p1;
wire   [15:0] add_ln67_1_fu_11525_p2;
wire   [9:0] zext_ln67_2_fu_11563_p1;
wire   [9:0] zext_ln67_3_fu_11566_p1;
wire   [9:0] xor_ln67_fu_11572_p2;
wire   [9:0] select_ln67_fu_11578_p3;
wire   [9:0] select_ln67_2_fu_11592_p3;
wire   [9:0] select_ln67_1_fu_11585_p3;
wire   [9:0] xor_ln67_1_fu_11599_p2;
wire   [511:0] zext_ln67_4_fu_11569_p1;
wire   [511:0] zext_ln67_5_fu_11605_p1;
wire   [511:0] shl_ln67_1_fu_11617_p2;
reg   [511:0] tmp_33_fu_11623_p4;
wire   [511:0] zext_ln67_6_fu_11609_p1;
wire   [511:0] zext_ln67_7_fu_11613_p1;
wire   [511:0] shl_ln67_3_fu_11640_p2;
wire   [511:0] lshr_ln67_fu_11646_p2;
wire   [511:0] select_ln67_3_fu_11633_p3;
wire   [511:0] and_ln67_fu_11652_p2;
wire   [5:0] tmp_34_fu_11668_p3;
wire   [63:0] zext_ln67_8_fu_11675_p1;
wire   [14:0] trunc_ln485_fu_11720_p1;
wire  signed [7:0] grp_fu_11747_p0;
wire  signed [15:0] sext_ln215_fu_8784_p1;
wire  signed [7:0] grp_fu_11756_p0;
wire  signed [15:0] sext_ln215_4_fu_8793_p1;
wire  signed [7:0] grp_fu_11765_p0;
wire  signed [15:0] sext_ln215_8_fu_8802_p1;
wire  signed [7:0] grp_fu_11774_p0;
wire  signed [15:0] sext_ln215_12_fu_8811_p1;
wire  signed [7:0] grp_fu_11783_p0;
wire  signed [15:0] sext_ln215_16_fu_8820_p1;
wire  signed [7:0] grp_fu_11792_p0;
wire  signed [15:0] sext_ln215_20_fu_8829_p1;
wire  signed [7:0] grp_fu_11801_p0;
wire  signed [15:0] sext_ln215_24_fu_8838_p1;
wire  signed [7:0] grp_fu_11810_p0;
wire  signed [15:0] sext_ln215_28_fu_8847_p1;
wire  signed [7:0] grp_fu_11819_p0;
wire  signed [7:0] grp_fu_11828_p0;
wire  signed [7:0] grp_fu_11837_p0;
wire  signed [7:0] grp_fu_11846_p0;
wire  signed [7:0] grp_fu_11855_p0;
wire  signed [7:0] grp_fu_11864_p0;
wire  signed [7:0] grp_fu_11873_p0;
wire  signed [7:0] grp_fu_11882_p0;
wire  signed [7:0] grp_fu_11891_p0;
wire  signed [7:0] grp_fu_11900_p0;
wire  signed [7:0] grp_fu_11909_p0;
wire  signed [7:0] grp_fu_11918_p0;
wire  signed [7:0] grp_fu_11927_p0;
wire  signed [7:0] grp_fu_11936_p0;
wire  signed [7:0] grp_fu_11945_p0;
wire  signed [7:0] grp_fu_11954_p0;
wire  signed [7:0] grp_fu_11963_p0;
wire  signed [7:0] grp_fu_11972_p0;
wire  signed [7:0] grp_fu_11981_p0;
wire  signed [7:0] grp_fu_11990_p0;
wire  signed [7:0] grp_fu_11999_p0;
wire  signed [7:0] grp_fu_12008_p0;
wire  signed [7:0] grp_fu_12017_p0;
wire  signed [7:0] grp_fu_12026_p0;
wire  signed [7:0] grp_fu_12035_p0;
wire  signed [7:0] grp_fu_12044_p0;
wire  signed [7:0] grp_fu_12053_p0;
wire  signed [7:0] grp_fu_12062_p0;
wire  signed [7:0] grp_fu_12071_p0;
wire  signed [7:0] grp_fu_12080_p0;
wire  signed [7:0] grp_fu_12089_p0;
wire  signed [7:0] grp_fu_12098_p0;
wire  signed [7:0] grp_fu_12107_p0;
wire  signed [7:0] grp_fu_12116_p0;
wire  signed [7:0] grp_fu_12125_p0;
wire  signed [7:0] grp_fu_12134_p0;
wire  signed [7:0] grp_fu_12143_p0;
wire  signed [7:0] grp_fu_12152_p0;
wire  signed [7:0] grp_fu_12161_p0;
wire  signed [7:0] grp_fu_12170_p0;
wire  signed [7:0] grp_fu_12179_p0;
wire  signed [7:0] grp_fu_12188_p0;
wire  signed [7:0] grp_fu_12197_p0;
wire  signed [7:0] grp_fu_12206_p0;
wire  signed [7:0] grp_fu_12215_p0;
wire  signed [7:0] grp_fu_12224_p0;
wire  signed [7:0] grp_fu_12233_p0;
wire  signed [7:0] grp_fu_12242_p0;
wire  signed [7:0] grp_fu_12251_p0;
wire  signed [7:0] grp_fu_12260_p0;
wire  signed [7:0] grp_fu_12269_p0;
wire  signed [7:0] grp_fu_12278_p0;
wire  signed [7:0] grp_fu_12287_p0;
wire  signed [7:0] grp_fu_12296_p0;
wire  signed [7:0] grp_fu_12305_p0;
wire  signed [7:0] grp_fu_12314_p0;
wire  signed [7:0] grp_fu_12323_p0;
wire  signed [7:0] grp_fu_12332_p0;
wire  signed [7:0] grp_fu_12341_p0;
wire  signed [7:0] grp_fu_12350_p0;
wire  signed [7:0] grp_fu_12359_p0;
wire  signed [7:0] grp_fu_12368_p0;
wire  signed [7:0] grp_fu_12377_p0;
wire  signed [7:0] grp_fu_12386_p0;
wire  signed [7:0] grp_fu_12395_p0;
wire  signed [7:0] grp_fu_12404_p0;
wire  signed [7:0] grp_fu_12413_p0;
wire  signed [7:0] grp_fu_12422_p0;
wire  signed [7:0] grp_fu_12431_p0;
wire  signed [7:0] grp_fu_12440_p0;
wire  signed [7:0] grp_fu_12449_p0;
wire  signed [7:0] grp_fu_12458_p0;
wire  signed [7:0] grp_fu_12467_p0;
wire  signed [7:0] grp_fu_12476_p0;
wire  signed [7:0] grp_fu_12485_p0;
wire  signed [7:0] grp_fu_12494_p0;
wire  signed [7:0] grp_fu_12503_p0;
wire  signed [7:0] grp_fu_12512_p0;
wire  signed [7:0] grp_fu_12521_p0;
wire  signed [7:0] grp_fu_12530_p0;
wire  signed [7:0] grp_fu_12539_p0;
wire  signed [7:0] grp_fu_12548_p0;
wire  signed [7:0] grp_fu_12557_p0;
wire  signed [7:0] grp_fu_12566_p0;
wire  signed [7:0] grp_fu_12575_p0;
wire  signed [7:0] grp_fu_12584_p0;
wire  signed [7:0] grp_fu_12593_p0;
wire  signed [7:0] grp_fu_12602_p0;
wire  signed [7:0] grp_fu_12611_p0;
wire  signed [7:0] grp_fu_12620_p0;
wire  signed [7:0] grp_fu_12629_p0;
wire  signed [7:0] grp_fu_12638_p0;
wire  signed [7:0] grp_fu_12647_p0;
wire  signed [7:0] grp_fu_12656_p0;
wire  signed [7:0] grp_fu_12665_p0;
wire  signed [7:0] grp_fu_12674_p0;
wire  signed [7:0] grp_fu_12683_p0;
wire  signed [7:0] grp_fu_12692_p0;
wire  signed [7:0] grp_fu_12701_p0;
wire  signed [7:0] grp_fu_12710_p0;
wire  signed [7:0] grp_fu_12719_p0;
wire  signed [7:0] grp_fu_12728_p0;
wire  signed [7:0] grp_fu_12737_p0;
wire  signed [7:0] grp_fu_12746_p0;
wire  signed [7:0] grp_fu_12755_p0;
wire  signed [7:0] grp_fu_12764_p0;
wire  signed [7:0] grp_fu_12773_p0;
wire  signed [7:0] grp_fu_12782_p0;
wire  signed [7:0] grp_fu_12791_p0;
wire  signed [7:0] grp_fu_12800_p0;
wire  signed [7:0] grp_fu_12809_p0;
wire  signed [7:0] grp_fu_12818_p0;
wire  signed [7:0] grp_fu_12827_p0;
wire  signed [7:0] grp_fu_12836_p0;
wire  signed [7:0] grp_fu_12845_p0;
wire  signed [7:0] grp_fu_12854_p0;
wire  signed [7:0] grp_fu_12863_p0;
wire  signed [7:0] grp_fu_12872_p0;
wire  signed [7:0] grp_fu_12881_p0;
wire  signed [7:0] grp_fu_12890_p0;
reg    ap_block_state65;
reg    ap_block_state65_io;
reg   [45:0] ap_NS_fsm;
reg    ap_block_state51_on_subcall_done;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_block_pp2;
reg    ap_block_pp3;
reg    ap_enable_operation_240;
reg    ap_enable_state12_pp0_iter1_stage1;
reg    ap_enable_operation_244;
reg    ap_enable_state13_pp0_iter2_stage0;
reg    ap_enable_operation_687;
reg    ap_enable_state17_pp0_iter4_stage0;
reg    ap_enable_operation_243;
reg    ap_enable_operation_261;
reg    ap_enable_operation_1321;
reg    ap_enable_state31_pp1_iter5_stage0;
reg    ap_enable_operation_2162;
reg    ap_enable_state32_pp1_iter6_stage0;
reg    ap_enable_operation_2393;
reg    ap_enable_state33_pp1_iter7_stage0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [45:0] grp_fu_1789_p00;
wire   [45:0] grp_fu_1789_p10;
wire   [59:0] grp_fu_1802_p00;
wire   [59:0] grp_fu_1802_p10;
wire   [45:0] grp_fu_4472_p00;
wire   [45:0] grp_fu_4472_p10;
wire   [59:0] grp_fu_4485_p00;
wire   [59:0] grp_fu_4485_p10;
wire   [15:0] y_offset_0_V_fu_11368_p00;
wire   [15:0] y_offset_1_V_fu_11386_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 46'd1;
#0 gemm_queue_V_V_0_sel_rd = 1'b0;
#0 gemm_queue_V_V_0_sel_wr = 1'b0;
#0 gemm_queue_V_V_0_state = 2'd0;
#0 l2g_dep_queue_V_0_state = 2'd0;
#0 s2g_dep_queue_V_0_state = 2'd0;
#0 g2l_dep_queue_V_1_sel_rd = 1'b0;
#0 g2l_dep_queue_V_1_state = 2'd0;
#0 g2s_dep_queue_V_1_sel_rd = 1'b0;
#0 g2s_dep_queue_V_1_state = 2'd0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 grp_reset_mem_fu_1325_ap_start_reg = 1'b0;
end

compute_uop_mem_V #(
    .DataWidth( 32 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
uop_mem_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(uop_mem_V_address0),
    .ce0(uop_mem_V_ce0),
    .we0(uop_mem_V_we0),
    .d0(uop_port_addr_read_reg_16133),
    .q0(uop_mem_V_q0)
);

compute_acc_mem_V #(
    .DataWidth( 512 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
acc_mem_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(acc_mem_V_address0),
    .ce0(acc_mem_V_ce0),
    .we0(acc_mem_V_we0),
    .d0(acc_mem_V_d0),
    .q0(acc_mem_V_q0),
    .address1(acc_mem_V_address1),
    .ce1(acc_mem_V_ce1),
    .we1(acc_mem_V_we1),
    .d1(and_ln67_1_reg_16089),
    .q1(acc_mem_V_q1)
);

compute_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
compute_CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .done_o(done_o),
    .done_o_ap_vld(done_o_ap_vld),
    .done_i(done_i),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .uops_V(uops_V),
    .biases_V(biases_V)
);

compute_uop_port_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_UOP_PORT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_UOP_PORT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_UOP_PORT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_UOP_PORT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_UOP_PORT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_UOP_PORT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_UOP_PORT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_UOP_PORT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_UOP_PORT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_UOP_PORT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_UOP_PORT_CACHE_VALUE ))
compute_uop_port_m_axi_U(
    .AWVALID(m_axi_uop_port_AWVALID),
    .AWREADY(m_axi_uop_port_AWREADY),
    .AWADDR(m_axi_uop_port_AWADDR),
    .AWID(m_axi_uop_port_AWID),
    .AWLEN(m_axi_uop_port_AWLEN),
    .AWSIZE(m_axi_uop_port_AWSIZE),
    .AWBURST(m_axi_uop_port_AWBURST),
    .AWLOCK(m_axi_uop_port_AWLOCK),
    .AWCACHE(m_axi_uop_port_AWCACHE),
    .AWPROT(m_axi_uop_port_AWPROT),
    .AWQOS(m_axi_uop_port_AWQOS),
    .AWREGION(m_axi_uop_port_AWREGION),
    .AWUSER(m_axi_uop_port_AWUSER),
    .WVALID(m_axi_uop_port_WVALID),
    .WREADY(m_axi_uop_port_WREADY),
    .WDATA(m_axi_uop_port_WDATA),
    .WSTRB(m_axi_uop_port_WSTRB),
    .WLAST(m_axi_uop_port_WLAST),
    .WID(m_axi_uop_port_WID),
    .WUSER(m_axi_uop_port_WUSER),
    .ARVALID(m_axi_uop_port_ARVALID),
    .ARREADY(m_axi_uop_port_ARREADY),
    .ARADDR(m_axi_uop_port_ARADDR),
    .ARID(m_axi_uop_port_ARID),
    .ARLEN(m_axi_uop_port_ARLEN),
    .ARSIZE(m_axi_uop_port_ARSIZE),
    .ARBURST(m_axi_uop_port_ARBURST),
    .ARLOCK(m_axi_uop_port_ARLOCK),
    .ARCACHE(m_axi_uop_port_ARCACHE),
    .ARPROT(m_axi_uop_port_ARPROT),
    .ARQOS(m_axi_uop_port_ARQOS),
    .ARREGION(m_axi_uop_port_ARREGION),
    .ARUSER(m_axi_uop_port_ARUSER),
    .RVALID(m_axi_uop_port_RVALID),
    .RREADY(m_axi_uop_port_RREADY),
    .RDATA(m_axi_uop_port_RDATA),
    .RLAST(m_axi_uop_port_RLAST),
    .RID(m_axi_uop_port_RID),
    .RUSER(m_axi_uop_port_RUSER),
    .RRESP(m_axi_uop_port_RRESP),
    .BVALID(m_axi_uop_port_BVALID),
    .BREADY(m_axi_uop_port_BREADY),
    .BRESP(m_axi_uop_port_BRESP),
    .BID(m_axi_uop_port_BID),
    .BUSER(m_axi_uop_port_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(uop_port_ARVALID),
    .I_ARREADY(uop_port_ARREADY),
    .I_ARADDR(uop_port_addr_reg_15980),
    .I_ARID(1'd0),
    .I_ARLEN(uop_port_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(uop_port_RVALID),
    .I_RREADY(uop_port_RREADY),
    .I_RDATA(uop_port_RDATA),
    .I_RID(uop_port_RID),
    .I_RUSER(uop_port_RUSER),
    .I_RRESP(uop_port_RRESP),
    .I_RLAST(uop_port_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(uop_port_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(uop_port_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(uop_port_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(uop_port_BRESP),
    .I_BID(uop_port_BID),
    .I_BUSER(uop_port_BUSER)
);

compute_data_port_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 64 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_PORT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_PORT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_PORT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_PORT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_PORT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_PORT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_PORT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_PORT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_PORT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_PORT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_PORT_CACHE_VALUE ))
compute_data_port_m_axi_U(
    .AWVALID(m_axi_data_port_AWVALID),
    .AWREADY(m_axi_data_port_AWREADY),
    .AWADDR(m_axi_data_port_AWADDR),
    .AWID(m_axi_data_port_AWID),
    .AWLEN(m_axi_data_port_AWLEN),
    .AWSIZE(m_axi_data_port_AWSIZE),
    .AWBURST(m_axi_data_port_AWBURST),
    .AWLOCK(m_axi_data_port_AWLOCK),
    .AWCACHE(m_axi_data_port_AWCACHE),
    .AWPROT(m_axi_data_port_AWPROT),
    .AWQOS(m_axi_data_port_AWQOS),
    .AWREGION(m_axi_data_port_AWREGION),
    .AWUSER(m_axi_data_port_AWUSER),
    .WVALID(m_axi_data_port_WVALID),
    .WREADY(m_axi_data_port_WREADY),
    .WDATA(m_axi_data_port_WDATA),
    .WSTRB(m_axi_data_port_WSTRB),
    .WLAST(m_axi_data_port_WLAST),
    .WID(m_axi_data_port_WID),
    .WUSER(m_axi_data_port_WUSER),
    .ARVALID(m_axi_data_port_ARVALID),
    .ARREADY(m_axi_data_port_ARREADY),
    .ARADDR(m_axi_data_port_ARADDR),
    .ARID(m_axi_data_port_ARID),
    .ARLEN(m_axi_data_port_ARLEN),
    .ARSIZE(m_axi_data_port_ARSIZE),
    .ARBURST(m_axi_data_port_ARBURST),
    .ARLOCK(m_axi_data_port_ARLOCK),
    .ARCACHE(m_axi_data_port_ARCACHE),
    .ARPROT(m_axi_data_port_ARPROT),
    .ARQOS(m_axi_data_port_ARQOS),
    .ARREGION(m_axi_data_port_ARREGION),
    .ARUSER(m_axi_data_port_ARUSER),
    .RVALID(m_axi_data_port_RVALID),
    .RREADY(m_axi_data_port_RREADY),
    .RDATA(m_axi_data_port_RDATA),
    .RLAST(m_axi_data_port_RLAST),
    .RID(m_axi_data_port_RID),
    .RUSER(m_axi_data_port_RUSER),
    .RRESP(m_axi_data_port_RRESP),
    .BVALID(m_axi_data_port_BVALID),
    .BREADY(m_axi_data_port_BREADY),
    .BRESP(m_axi_data_port_BRESP),
    .BID(m_axi_data_port_BID),
    .BUSER(m_axi_data_port_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(data_port_ARVALID),
    .I_ARREADY(data_port_ARREADY),
    .I_ARADDR(data_port_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(zext_ln67_reg_16011),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(data_port_RVALID),
    .I_RREADY(data_port_RREADY),
    .I_RDATA(data_port_RDATA),
    .I_RID(data_port_RID),
    .I_RUSER(data_port_RUSER),
    .I_RRESP(data_port_RRESP),
    .I_RLAST(data_port_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(data_port_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(data_port_WREADY),
    .I_WDATA(64'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(8'd0),
    .I_BVALID(data_port_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(data_port_BRESP),
    .I_BID(data_port_BID),
    .I_BUSER(data_port_BUSER)
);

reset_mem grp_reset_mem_fu_1325(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_reset_mem_fu_1325_ap_start),
    .ap_done(grp_reset_mem_fu_1325_ap_done),
    .ap_idle(grp_reset_mem_fu_1325_ap_idle),
    .ap_ready(grp_reset_mem_fu_1325_ap_ready),
    .sram_idx_V_read(grp_reset_mem_fu_1325_sram_idx_V_read),
    .range_V(grp_reset_mem_fu_1325_range_V),
    .mem_V_address0(grp_reset_mem_fu_1325_mem_V_address0),
    .mem_V_ce0(grp_reset_mem_fu_1325_mem_V_ce0),
    .mem_V_we0(grp_reset_mem_fu_1325_mem_V_we0),
    .mem_V_d0(grp_reset_mem_fu_1325_mem_V_d0),
    .ap_return(grp_reset_mem_fu_1325_ap_return)
);

compute_mul_32ns_14ns_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 46 ))
compute_mul_32ns_14ns_46_2_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1789_p0),
    .din1(grp_fu_1789_p1),
    .ce(1'b1),
    .dout(grp_fu_1789_p2)
);

compute_mul_46ns_14ns_60_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 46 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 60 ))
compute_mul_46ns_14ns_60_5_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1802_p0),
    .din1(grp_fu_1802_p1),
    .ce(1'b1),
    .dout(grp_fu_1802_p2)
);

compute_mul_14ns_32ns_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 46 ))
compute_mul_14ns_32ns_46_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_4472_p0),
    .din1(grp_fu_4472_p1),
    .ce(1'b1),
    .dout(grp_fu_4472_p2)
);

compute_mul_14ns_46ns_60_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 46 ),
    .dout_WIDTH( 60 ))
compute_mul_14ns_46ns_60_5_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_4485_p0),
    .din1(grp_fu_4485_p1),
    .ce(1'b1),
    .dout(grp_fu_4485_p2)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U8(
    .din0(grp_fu_11747_p0),
    .din1(trunc_ln647_1_reg_14136),
    .din2(mul_ln1352_1_reg_14816),
    .dout(grp_fu_11747_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U9(
    .din0(grp_fu_11756_p0),
    .din1(w_tensor_i_0_2_reg_14141),
    .din2(mul_ln1352_3_reg_14821),
    .dout(grp_fu_11756_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U10(
    .din0(grp_fu_11765_p0),
    .din1(w_tensor_i_0_4_reg_14146),
    .din2(mul_ln1352_5_reg_14826),
    .dout(grp_fu_11765_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U11(
    .din0(grp_fu_11774_p0),
    .din1(w_tensor_i_0_6_reg_14151),
    .din2(mul_ln1352_7_reg_14831),
    .dout(grp_fu_11774_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U12(
    .din0(grp_fu_11783_p0),
    .din1(trunc_ln647_2_reg_14156),
    .din2(mul_ln1352_9_reg_14836),
    .dout(grp_fu_11783_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U13(
    .din0(grp_fu_11792_p0),
    .din1(w_tensor_i_0_s_reg_14161),
    .din2(mul_ln1352_11_reg_14841),
    .dout(grp_fu_11792_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U14(
    .din0(grp_fu_11801_p0),
    .din1(w_tensor_i_0_10_reg_14166),
    .din2(mul_ln1352_13_reg_14846),
    .dout(grp_fu_11801_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U15(
    .din0(grp_fu_11810_p0),
    .din1(w_tensor_i_0_12_reg_14171),
    .din2(mul_ln1352_15_reg_14851),
    .dout(grp_fu_11810_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U16(
    .din0(grp_fu_11819_p0),
    .din1(w_tensor_i_1_reg_14176),
    .din2(mul_ln1352_17_reg_14856),
    .dout(grp_fu_11819_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U17(
    .din0(grp_fu_11828_p0),
    .din1(w_tensor_i_1_2_reg_14181),
    .din2(mul_ln1352_19_reg_14861),
    .dout(grp_fu_11828_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U18(
    .din0(grp_fu_11837_p0),
    .din1(w_tensor_i_1_4_reg_14186),
    .din2(mul_ln1352_21_reg_14866),
    .dout(grp_fu_11837_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U19(
    .din0(grp_fu_11846_p0),
    .din1(w_tensor_i_1_6_reg_14191),
    .din2(mul_ln1352_23_reg_14871),
    .dout(grp_fu_11846_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U20(
    .din0(grp_fu_11855_p0),
    .din1(w_tensor_i_1_8_reg_14196),
    .din2(mul_ln1352_25_reg_14876),
    .dout(grp_fu_11855_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U21(
    .din0(grp_fu_11864_p0),
    .din1(w_tensor_i_1_s_reg_14201),
    .din2(mul_ln1352_27_reg_14881),
    .dout(grp_fu_11864_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U22(
    .din0(grp_fu_11873_p0),
    .din1(w_tensor_i_1_11_reg_14206),
    .din2(mul_ln1352_29_reg_14886),
    .dout(grp_fu_11873_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U23(
    .din0(grp_fu_11882_p0),
    .din1(w_tensor_i_1_13_reg_14211),
    .din2(mul_ln1352_31_reg_14891),
    .dout(grp_fu_11882_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U24(
    .din0(grp_fu_11891_p0),
    .din1(w_tensor_i_2_reg_14216),
    .din2(mul_ln1352_33_reg_14896),
    .dout(grp_fu_11891_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U25(
    .din0(grp_fu_11900_p0),
    .din1(w_tensor_i_2_2_reg_14221),
    .din2(mul_ln1352_35_reg_14901),
    .dout(grp_fu_11900_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U26(
    .din0(grp_fu_11909_p0),
    .din1(w_tensor_i_2_4_reg_14226),
    .din2(mul_ln1352_37_reg_14906),
    .dout(grp_fu_11909_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U27(
    .din0(grp_fu_11918_p0),
    .din1(w_tensor_i_2_6_reg_14231),
    .din2(mul_ln1352_39_reg_14911),
    .dout(grp_fu_11918_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U28(
    .din0(grp_fu_11927_p0),
    .din1(w_tensor_i_2_8_reg_14236),
    .din2(mul_ln1352_41_reg_14916),
    .dout(grp_fu_11927_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U29(
    .din0(grp_fu_11936_p0),
    .din1(w_tensor_i_2_s_reg_14241),
    .din2(mul_ln1352_43_reg_14921),
    .dout(grp_fu_11936_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U30(
    .din0(grp_fu_11945_p0),
    .din1(w_tensor_i_2_11_reg_14246),
    .din2(mul_ln1352_45_reg_14926),
    .dout(grp_fu_11945_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U31(
    .din0(grp_fu_11954_p0),
    .din1(w_tensor_i_2_13_reg_14251),
    .din2(mul_ln1352_47_reg_14931),
    .dout(grp_fu_11954_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U32(
    .din0(grp_fu_11963_p0),
    .din1(w_tensor_i_3_reg_14256),
    .din2(mul_ln1352_49_reg_14936),
    .dout(grp_fu_11963_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U33(
    .din0(grp_fu_11972_p0),
    .din1(w_tensor_i_3_2_reg_14261),
    .din2(mul_ln1352_51_reg_14941),
    .dout(grp_fu_11972_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U34(
    .din0(grp_fu_11981_p0),
    .din1(w_tensor_i_3_4_reg_14266),
    .din2(mul_ln1352_53_reg_14946),
    .dout(grp_fu_11981_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U35(
    .din0(grp_fu_11990_p0),
    .din1(w_tensor_i_3_6_reg_14271),
    .din2(mul_ln1352_55_reg_14951),
    .dout(grp_fu_11990_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U36(
    .din0(grp_fu_11999_p0),
    .din1(w_tensor_i_3_8_reg_14276),
    .din2(mul_ln1352_57_reg_14956),
    .dout(grp_fu_11999_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U37(
    .din0(grp_fu_12008_p0),
    .din1(w_tensor_i_3_s_reg_14281),
    .din2(mul_ln1352_59_reg_14961),
    .dout(grp_fu_12008_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U38(
    .din0(grp_fu_12017_p0),
    .din1(w_tensor_i_3_11_reg_14286),
    .din2(mul_ln1352_61_reg_14966),
    .dout(grp_fu_12017_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U39(
    .din0(grp_fu_12026_p0),
    .din1(w_tensor_i_3_13_reg_14291),
    .din2(mul_ln1352_63_reg_14971),
    .dout(grp_fu_12026_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U40(
    .din0(grp_fu_12035_p0),
    .din1(w_tensor_i_4_reg_14296),
    .din2(mul_ln1352_65_reg_14976),
    .dout(grp_fu_12035_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U41(
    .din0(grp_fu_12044_p0),
    .din1(w_tensor_i_4_2_reg_14301),
    .din2(mul_ln1352_67_reg_14981),
    .dout(grp_fu_12044_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U42(
    .din0(grp_fu_12053_p0),
    .din1(w_tensor_i_4_4_reg_14306),
    .din2(mul_ln1352_69_reg_14986),
    .dout(grp_fu_12053_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U43(
    .din0(grp_fu_12062_p0),
    .din1(w_tensor_i_4_6_reg_14311),
    .din2(mul_ln1352_71_reg_14991),
    .dout(grp_fu_12062_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U44(
    .din0(grp_fu_12071_p0),
    .din1(w_tensor_i_4_8_reg_14316),
    .din2(mul_ln1352_73_reg_14996),
    .dout(grp_fu_12071_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U45(
    .din0(grp_fu_12080_p0),
    .din1(w_tensor_i_4_s_reg_14321),
    .din2(mul_ln1352_75_reg_15001),
    .dout(grp_fu_12080_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U46(
    .din0(grp_fu_12089_p0),
    .din1(w_tensor_i_4_11_reg_14326),
    .din2(mul_ln1352_77_reg_15006),
    .dout(grp_fu_12089_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U47(
    .din0(grp_fu_12098_p0),
    .din1(w_tensor_i_4_13_reg_14331),
    .din2(mul_ln1352_79_reg_15011),
    .dout(grp_fu_12098_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U48(
    .din0(grp_fu_12107_p0),
    .din1(w_tensor_i_5_reg_14336),
    .din2(mul_ln1352_81_reg_15016),
    .dout(grp_fu_12107_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U49(
    .din0(grp_fu_12116_p0),
    .din1(w_tensor_i_5_2_reg_14341),
    .din2(mul_ln1352_83_reg_15021),
    .dout(grp_fu_12116_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U50(
    .din0(grp_fu_12125_p0),
    .din1(w_tensor_i_5_4_reg_14346),
    .din2(mul_ln1352_85_reg_15026),
    .dout(grp_fu_12125_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U51(
    .din0(grp_fu_12134_p0),
    .din1(w_tensor_i_5_6_reg_14351),
    .din2(mul_ln1352_87_reg_15031),
    .dout(grp_fu_12134_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U52(
    .din0(grp_fu_12143_p0),
    .din1(w_tensor_i_5_8_reg_14356),
    .din2(mul_ln1352_89_reg_15036),
    .dout(grp_fu_12143_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U53(
    .din0(grp_fu_12152_p0),
    .din1(w_tensor_i_5_s_reg_14361),
    .din2(mul_ln1352_91_reg_15041),
    .dout(grp_fu_12152_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U54(
    .din0(grp_fu_12161_p0),
    .din1(w_tensor_i_5_11_reg_14366),
    .din2(mul_ln1352_93_reg_15046),
    .dout(grp_fu_12161_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U55(
    .din0(grp_fu_12170_p0),
    .din1(w_tensor_i_5_13_reg_14371),
    .din2(mul_ln1352_95_reg_15051),
    .dout(grp_fu_12170_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U56(
    .din0(grp_fu_12179_p0),
    .din1(w_tensor_i_6_reg_14376),
    .din2(mul_ln1352_97_reg_15056),
    .dout(grp_fu_12179_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U57(
    .din0(grp_fu_12188_p0),
    .din1(w_tensor_i_6_2_reg_14381),
    .din2(mul_ln1352_99_reg_15061),
    .dout(grp_fu_12188_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U58(
    .din0(grp_fu_12197_p0),
    .din1(w_tensor_i_6_4_reg_14386),
    .din2(mul_ln1352_101_reg_15066),
    .dout(grp_fu_12197_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U59(
    .din0(grp_fu_12206_p0),
    .din1(w_tensor_i_6_6_reg_14391),
    .din2(mul_ln1352_103_reg_15071),
    .dout(grp_fu_12206_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U60(
    .din0(grp_fu_12215_p0),
    .din1(w_tensor_i_6_8_reg_14396),
    .din2(mul_ln1352_105_reg_15076),
    .dout(grp_fu_12215_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U61(
    .din0(grp_fu_12224_p0),
    .din1(w_tensor_i_6_s_reg_14401),
    .din2(mul_ln1352_107_reg_15081),
    .dout(grp_fu_12224_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U62(
    .din0(grp_fu_12233_p0),
    .din1(w_tensor_i_6_11_reg_14406),
    .din2(mul_ln1352_109_reg_15086),
    .dout(grp_fu_12233_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U63(
    .din0(grp_fu_12242_p0),
    .din1(w_tensor_i_6_13_reg_14411),
    .din2(mul_ln1352_111_reg_15091),
    .dout(grp_fu_12242_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U64(
    .din0(grp_fu_12251_p0),
    .din1(w_tensor_i_7_reg_14416),
    .din2(mul_ln1352_113_reg_15096),
    .dout(grp_fu_12251_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U65(
    .din0(grp_fu_12260_p0),
    .din1(w_tensor_i_7_2_reg_14421),
    .din2(mul_ln1352_115_reg_15101),
    .dout(grp_fu_12260_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U66(
    .din0(grp_fu_12269_p0),
    .din1(w_tensor_i_7_4_reg_14426),
    .din2(mul_ln1352_117_reg_15106),
    .dout(grp_fu_12269_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U67(
    .din0(grp_fu_12278_p0),
    .din1(w_tensor_i_7_6_reg_14431),
    .din2(mul_ln1352_119_reg_15111),
    .dout(grp_fu_12278_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U68(
    .din0(grp_fu_12287_p0),
    .din1(w_tensor_i_7_8_reg_14436),
    .din2(mul_ln1352_121_reg_15116),
    .dout(grp_fu_12287_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U69(
    .din0(grp_fu_12296_p0),
    .din1(w_tensor_i_7_s_reg_14441),
    .din2(mul_ln1352_123_reg_15121),
    .dout(grp_fu_12296_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U70(
    .din0(grp_fu_12305_p0),
    .din1(w_tensor_i_7_11_reg_14446),
    .din2(mul_ln1352_125_reg_15126),
    .dout(grp_fu_12305_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U71(
    .din0(grp_fu_12314_p0),
    .din1(w_tensor_i_7_13_reg_14451),
    .din2(mul_ln1352_127_reg_15131),
    .dout(grp_fu_12314_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U72(
    .din0(grp_fu_12323_p0),
    .din1(w_tensor_i_8_reg_14456),
    .din2(mul_ln1352_129_reg_15136),
    .dout(grp_fu_12323_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U73(
    .din0(grp_fu_12332_p0),
    .din1(w_tensor_i_8_2_reg_14461),
    .din2(mul_ln1352_131_reg_15141),
    .dout(grp_fu_12332_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U74(
    .din0(grp_fu_12341_p0),
    .din1(w_tensor_i_8_4_reg_14466),
    .din2(mul_ln1352_133_reg_15146),
    .dout(grp_fu_12341_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U75(
    .din0(grp_fu_12350_p0),
    .din1(w_tensor_i_8_6_reg_14471),
    .din2(mul_ln1352_135_reg_15151),
    .dout(grp_fu_12350_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U76(
    .din0(grp_fu_12359_p0),
    .din1(w_tensor_i_8_8_reg_14476),
    .din2(mul_ln1352_137_reg_15156),
    .dout(grp_fu_12359_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U77(
    .din0(grp_fu_12368_p0),
    .din1(w_tensor_i_8_s_reg_14481),
    .din2(mul_ln1352_139_reg_15161),
    .dout(grp_fu_12368_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U78(
    .din0(grp_fu_12377_p0),
    .din1(w_tensor_i_8_11_reg_14486),
    .din2(mul_ln1352_141_reg_15166),
    .dout(grp_fu_12377_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U79(
    .din0(grp_fu_12386_p0),
    .din1(w_tensor_i_8_13_reg_14491),
    .din2(mul_ln1352_143_reg_15171),
    .dout(grp_fu_12386_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U80(
    .din0(grp_fu_12395_p0),
    .din1(w_tensor_i_9_reg_14496),
    .din2(mul_ln1352_145_reg_15176),
    .dout(grp_fu_12395_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U81(
    .din0(grp_fu_12404_p0),
    .din1(w_tensor_i_9_2_reg_14501),
    .din2(mul_ln1352_147_reg_15181),
    .dout(grp_fu_12404_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U82(
    .din0(grp_fu_12413_p0),
    .din1(w_tensor_i_9_4_reg_14506),
    .din2(mul_ln1352_149_reg_15186),
    .dout(grp_fu_12413_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U83(
    .din0(grp_fu_12422_p0),
    .din1(w_tensor_i_9_6_reg_14511),
    .din2(mul_ln1352_151_reg_15191),
    .dout(grp_fu_12422_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U84(
    .din0(grp_fu_12431_p0),
    .din1(w_tensor_i_9_8_reg_14516),
    .din2(mul_ln1352_153_reg_15196),
    .dout(grp_fu_12431_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U85(
    .din0(grp_fu_12440_p0),
    .din1(w_tensor_i_9_s_reg_14521),
    .din2(mul_ln1352_155_reg_15201),
    .dout(grp_fu_12440_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U86(
    .din0(grp_fu_12449_p0),
    .din1(w_tensor_i_9_11_reg_14526),
    .din2(mul_ln1352_157_reg_15206),
    .dout(grp_fu_12449_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U87(
    .din0(grp_fu_12458_p0),
    .din1(w_tensor_i_9_13_reg_14531),
    .din2(mul_ln1352_159_reg_15211),
    .dout(grp_fu_12458_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U88(
    .din0(grp_fu_12467_p0),
    .din1(w_tensor_i_s_reg_14536),
    .din2(mul_ln1352_161_reg_15216),
    .dout(grp_fu_12467_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U89(
    .din0(grp_fu_12476_p0),
    .din1(w_tensor_i_10_2_reg_14541),
    .din2(mul_ln1352_163_reg_15221),
    .dout(grp_fu_12476_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U90(
    .din0(grp_fu_12485_p0),
    .din1(w_tensor_i_10_4_reg_14546),
    .din2(mul_ln1352_165_reg_15226),
    .dout(grp_fu_12485_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U91(
    .din0(grp_fu_12494_p0),
    .din1(w_tensor_i_10_6_reg_14551),
    .din2(mul_ln1352_167_reg_15231),
    .dout(grp_fu_12494_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U92(
    .din0(grp_fu_12503_p0),
    .din1(w_tensor_i_10_8_reg_14556),
    .din2(mul_ln1352_169_reg_15236),
    .dout(grp_fu_12503_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U93(
    .din0(grp_fu_12512_p0),
    .din1(w_tensor_i_10_s_reg_14561),
    .din2(mul_ln1352_171_reg_15241),
    .dout(grp_fu_12512_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U94(
    .din0(grp_fu_12521_p0),
    .din1(w_tensor_i_10_11_reg_14566),
    .din2(mul_ln1352_173_reg_15246),
    .dout(grp_fu_12521_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U95(
    .din0(grp_fu_12530_p0),
    .din1(w_tensor_i_10_13_reg_14571),
    .din2(mul_ln1352_175_reg_15251),
    .dout(grp_fu_12530_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U96(
    .din0(grp_fu_12539_p0),
    .din1(w_tensor_i_10_reg_14576),
    .din2(mul_ln1352_177_reg_15256),
    .dout(grp_fu_12539_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U97(
    .din0(grp_fu_12548_p0),
    .din1(w_tensor_i_11_2_reg_14581),
    .din2(mul_ln1352_179_reg_15261),
    .dout(grp_fu_12548_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U98(
    .din0(grp_fu_12557_p0),
    .din1(w_tensor_i_11_4_reg_14586),
    .din2(mul_ln1352_181_reg_15266),
    .dout(grp_fu_12557_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U99(
    .din0(grp_fu_12566_p0),
    .din1(w_tensor_i_11_6_reg_14591),
    .din2(mul_ln1352_183_reg_15271),
    .dout(grp_fu_12566_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U100(
    .din0(grp_fu_12575_p0),
    .din1(w_tensor_i_11_8_reg_14596),
    .din2(mul_ln1352_185_reg_15276),
    .dout(grp_fu_12575_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U101(
    .din0(grp_fu_12584_p0),
    .din1(w_tensor_i_11_s_reg_14601),
    .din2(mul_ln1352_187_reg_15281),
    .dout(grp_fu_12584_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U102(
    .din0(grp_fu_12593_p0),
    .din1(w_tensor_i_11_11_reg_14606),
    .din2(mul_ln1352_189_reg_15286),
    .dout(grp_fu_12593_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U103(
    .din0(grp_fu_12602_p0),
    .din1(w_tensor_i_11_13_reg_14611),
    .din2(mul_ln1352_191_reg_15291),
    .dout(grp_fu_12602_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U104(
    .din0(grp_fu_12611_p0),
    .din1(w_tensor_i_11_reg_14616),
    .din2(mul_ln1352_193_reg_15296),
    .dout(grp_fu_12611_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U105(
    .din0(grp_fu_12620_p0),
    .din1(w_tensor_i_12_2_reg_14621),
    .din2(mul_ln1352_195_reg_15301),
    .dout(grp_fu_12620_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U106(
    .din0(grp_fu_12629_p0),
    .din1(w_tensor_i_12_4_reg_14626),
    .din2(mul_ln1352_197_reg_15306),
    .dout(grp_fu_12629_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U107(
    .din0(grp_fu_12638_p0),
    .din1(w_tensor_i_12_6_reg_14631),
    .din2(mul_ln1352_199_reg_15311),
    .dout(grp_fu_12638_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U108(
    .din0(grp_fu_12647_p0),
    .din1(w_tensor_i_12_8_reg_14636),
    .din2(mul_ln1352_201_reg_15316),
    .dout(grp_fu_12647_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U109(
    .din0(grp_fu_12656_p0),
    .din1(w_tensor_i_12_s_reg_14641),
    .din2(mul_ln1352_203_reg_15321),
    .dout(grp_fu_12656_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U110(
    .din0(grp_fu_12665_p0),
    .din1(w_tensor_i_12_11_reg_14646),
    .din2(mul_ln1352_205_reg_15326),
    .dout(grp_fu_12665_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U111(
    .din0(grp_fu_12674_p0),
    .din1(w_tensor_i_12_13_reg_14651),
    .din2(mul_ln1352_207_reg_15331),
    .dout(grp_fu_12674_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U112(
    .din0(grp_fu_12683_p0),
    .din1(w_tensor_i_12_reg_14656),
    .din2(mul_ln1352_209_reg_15336),
    .dout(grp_fu_12683_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U113(
    .din0(grp_fu_12692_p0),
    .din1(w_tensor_i_13_2_reg_14661),
    .din2(mul_ln1352_211_reg_15341),
    .dout(grp_fu_12692_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U114(
    .din0(grp_fu_12701_p0),
    .din1(w_tensor_i_13_4_reg_14666),
    .din2(mul_ln1352_213_reg_15346),
    .dout(grp_fu_12701_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U115(
    .din0(grp_fu_12710_p0),
    .din1(w_tensor_i_13_6_reg_14671),
    .din2(mul_ln1352_215_reg_15351),
    .dout(grp_fu_12710_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U116(
    .din0(grp_fu_12719_p0),
    .din1(w_tensor_i_13_8_reg_14676),
    .din2(mul_ln1352_217_reg_15356),
    .dout(grp_fu_12719_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U117(
    .din0(grp_fu_12728_p0),
    .din1(w_tensor_i_13_s_reg_14681),
    .din2(mul_ln1352_219_reg_15361),
    .dout(grp_fu_12728_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U118(
    .din0(grp_fu_12737_p0),
    .din1(w_tensor_i_13_11_reg_14686),
    .din2(mul_ln1352_221_reg_15366),
    .dout(grp_fu_12737_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U119(
    .din0(grp_fu_12746_p0),
    .din1(w_tensor_i_13_13_reg_14691),
    .din2(mul_ln1352_223_reg_15371),
    .dout(grp_fu_12746_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U120(
    .din0(grp_fu_12755_p0),
    .din1(w_tensor_i_13_reg_14696),
    .din2(mul_ln1352_225_reg_15376),
    .dout(grp_fu_12755_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U121(
    .din0(grp_fu_12764_p0),
    .din1(w_tensor_i_14_2_reg_14701),
    .din2(mul_ln1352_227_reg_15381),
    .dout(grp_fu_12764_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U122(
    .din0(grp_fu_12773_p0),
    .din1(w_tensor_i_14_4_reg_14706),
    .din2(mul_ln1352_229_reg_15386),
    .dout(grp_fu_12773_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U123(
    .din0(grp_fu_12782_p0),
    .din1(w_tensor_i_14_6_reg_14711),
    .din2(mul_ln1352_231_reg_15391),
    .dout(grp_fu_12782_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U124(
    .din0(grp_fu_12791_p0),
    .din1(w_tensor_i_14_8_reg_14716),
    .din2(mul_ln1352_233_reg_15396),
    .dout(grp_fu_12791_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U125(
    .din0(grp_fu_12800_p0),
    .din1(w_tensor_i_14_s_reg_14721),
    .din2(mul_ln1352_235_reg_15401),
    .dout(grp_fu_12800_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U126(
    .din0(grp_fu_12809_p0),
    .din1(w_tensor_i_14_11_reg_14726),
    .din2(mul_ln1352_237_reg_15406),
    .dout(grp_fu_12809_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U127(
    .din0(grp_fu_12818_p0),
    .din1(w_tensor_i_14_13_reg_14731),
    .din2(mul_ln1352_239_reg_15411),
    .dout(grp_fu_12818_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U128(
    .din0(grp_fu_12827_p0),
    .din1(w_tensor_i_14_reg_14736),
    .din2(mul_ln1352_241_reg_15416),
    .dout(grp_fu_12827_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U129(
    .din0(grp_fu_12836_p0),
    .din1(w_tensor_i_15_2_reg_14741),
    .din2(mul_ln1352_243_reg_15421),
    .dout(grp_fu_12836_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U130(
    .din0(grp_fu_12845_p0),
    .din1(w_tensor_i_15_4_reg_14746),
    .din2(mul_ln1352_245_reg_15426),
    .dout(grp_fu_12845_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U131(
    .din0(grp_fu_12854_p0),
    .din1(w_tensor_i_15_6_reg_14751),
    .din2(mul_ln1352_247_reg_15431),
    .dout(grp_fu_12854_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U132(
    .din0(grp_fu_12863_p0),
    .din1(w_tensor_i_15_8_reg_14756),
    .din2(mul_ln1352_249_reg_15436),
    .dout(grp_fu_12863_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U133(
    .din0(grp_fu_12872_p0),
    .din1(w_tensor_i_15_s_reg_14761),
    .din2(mul_ln1352_251_reg_15441),
    .dout(grp_fu_12872_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U134(
    .din0(grp_fu_12881_p0),
    .din1(w_tensor_i_15_11_reg_14766),
    .din2(mul_ln1352_253_reg_15446),
    .dout(grp_fu_12881_p3)
);

compute_mac_muladd_8s_8s_16s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
compute_mac_muladd_8s_8s_16s_17_1_1_U135(
    .din0(grp_fu_12890_p0),
    .din1(w_tensor_i_15_13_reg_14771),
    .din2(mul_ln1352_255_reg_15451),
    .dout(grp_fu_12890_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state9))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state26) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state26)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state26);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp1_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state45))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state45)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state45);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((1'b1 == ap_CS_fsm_state44)) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state59))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state59)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state59);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        g2l_dep_queue_V_1_sel_rd <= 1'b0;
    end else begin
        if (((g2l_dep_queue_V_1_ack_out == 1'b1) & (g2l_dep_queue_V_1_vld_out == 1'b1))) begin
            g2l_dep_queue_V_1_sel_rd <= ~g2l_dep_queue_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        g2l_dep_queue_V_1_state <= 2'd0;
    end else begin
        if ((((g2l_dep_queue_V_1_vld_in == 1'b0) & (g2l_dep_queue_V_1_state == 2'd2)) | ((g2l_dep_queue_V_1_vld_in == 1'b0) & (g2l_dep_queue_V_1_state == 2'd3) & (g2l_dep_queue_V_1_ack_out == 1'b1)))) begin
            g2l_dep_queue_V_1_state <= 2'd2;
        end else if ((((g2l_dep_queue_V_TREADY == 1'b0) & (g2l_dep_queue_V_1_state == 2'd1)) | ((g2l_dep_queue_V_TREADY == 1'b0) & (g2l_dep_queue_V_1_state == 2'd3) & (g2l_dep_queue_V_1_vld_in == 1'b1)))) begin
            g2l_dep_queue_V_1_state <= 2'd1;
        end else if (((~((g2l_dep_queue_V_1_vld_in == 1'b0) & (g2l_dep_queue_V_1_ack_out == 1'b1)) & ~((g2l_dep_queue_V_TREADY == 1'b0) & (g2l_dep_queue_V_1_vld_in == 1'b1)) & (g2l_dep_queue_V_1_state == 2'd3)) | ((g2l_dep_queue_V_1_state == 2'd1) & (g2l_dep_queue_V_1_ack_out == 1'b1)) | ((g2l_dep_queue_V_1_state == 2'd2) & (g2l_dep_queue_V_1_vld_in == 1'b1)))) begin
            g2l_dep_queue_V_1_state <= 2'd3;
        end else begin
            g2l_dep_queue_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        g2s_dep_queue_V_1_sel_rd <= 1'b0;
    end else begin
        if (((g2s_dep_queue_V_1_ack_out == 1'b1) & (g2s_dep_queue_V_1_vld_out == 1'b1))) begin
            g2s_dep_queue_V_1_sel_rd <= ~g2s_dep_queue_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        g2s_dep_queue_V_1_state <= 2'd0;
    end else begin
        if ((((g2s_dep_queue_V_1_vld_in == 1'b0) & (g2s_dep_queue_V_1_state == 2'd2)) | ((g2s_dep_queue_V_1_vld_in == 1'b0) & (g2s_dep_queue_V_1_state == 2'd3) & (g2s_dep_queue_V_1_ack_out == 1'b1)))) begin
            g2s_dep_queue_V_1_state <= 2'd2;
        end else if ((((g2s_dep_queue_V_TREADY == 1'b0) & (g2s_dep_queue_V_1_state == 2'd1)) | ((g2s_dep_queue_V_TREADY == 1'b0) & (g2s_dep_queue_V_1_state == 2'd3) & (g2s_dep_queue_V_1_vld_in == 1'b1)))) begin
            g2s_dep_queue_V_1_state <= 2'd1;
        end else if (((~((g2s_dep_queue_V_1_vld_in == 1'b0) & (g2s_dep_queue_V_1_ack_out == 1'b1)) & ~((g2s_dep_queue_V_TREADY == 1'b0) & (g2s_dep_queue_V_1_vld_in == 1'b1)) & (g2s_dep_queue_V_1_state == 2'd3)) | ((g2s_dep_queue_V_1_state == 2'd1) & (g2s_dep_queue_V_1_ack_out == 1'b1)) | ((g2s_dep_queue_V_1_state == 2'd2) & (g2s_dep_queue_V_1_vld_in == 1'b1)))) begin
            g2s_dep_queue_V_1_state <= 2'd3;
        end else begin
            g2s_dep_queue_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        gemm_queue_V_V_0_sel_rd <= 1'b0;
    end else begin
        if (((gemm_queue_V_V_0_ack_out == 1'b1) & (gemm_queue_V_V_0_vld_out == 1'b1))) begin
            gemm_queue_V_V_0_sel_rd <= ~gemm_queue_V_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        gemm_queue_V_V_0_sel_wr <= 1'b0;
    end else begin
        if (((gemm_queue_V_V_0_ack_in == 1'b1) & (gemm_queue_V_V_0_vld_in == 1'b1))) begin
            gemm_queue_V_V_0_sel_wr <= ~gemm_queue_V_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        gemm_queue_V_V_0_state <= 2'd0;
    end else begin
        if ((((gemm_queue_V_V_0_vld_in == 1'b0) & (gemm_queue_V_V_0_state == 2'd2)) | ((gemm_queue_V_V_0_vld_in == 1'b0) & (gemm_queue_V_V_0_ack_out == 1'b1) & (gemm_queue_V_V_0_state == 2'd3)))) begin
            gemm_queue_V_V_0_state <= 2'd2;
        end else if ((((gemm_queue_V_V_0_ack_out == 1'b0) & (gemm_queue_V_V_0_state == 2'd1)) | ((gemm_queue_V_V_0_ack_out == 1'b0) & (gemm_queue_V_V_0_vld_in == 1'b1) & (gemm_queue_V_V_0_state == 2'd3)))) begin
            gemm_queue_V_V_0_state <= 2'd1;
        end else if (((~((gemm_queue_V_V_0_vld_in == 1'b0) & (gemm_queue_V_V_0_ack_out == 1'b1)) & ~((gemm_queue_V_V_0_ack_out == 1'b0) & (gemm_queue_V_V_0_vld_in == 1'b1)) & (gemm_queue_V_V_0_state == 2'd3)) | ((gemm_queue_V_V_0_ack_out == 1'b1) & (gemm_queue_V_V_0_state == 2'd1)) | ((gemm_queue_V_V_0_vld_in == 1'b1) & (gemm_queue_V_V_0_state == 2'd2)))) begin
            gemm_queue_V_V_0_state <= 2'd3;
        end else begin
            gemm_queue_V_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_reset_mem_fu_1325_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state37) & (icmp_ln62_fu_11467_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state37) & (icmp_ln62_fu_11467_p2 == 1'd0)))) begin
            grp_reset_mem_fu_1325_ap_start_reg <= 1'b1;
        end else if ((grp_reset_mem_fu_1325_ap_ready == 1'b1)) begin
            grp_reset_mem_fu_1325_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        l2g_dep_queue_V_0_state <= 2'd0;
    end else begin
        if ((((l2g_dep_queue_V_0_vld_in == 1'b0) & (l2g_dep_queue_V_0_state == 2'd2)) | ((l2g_dep_queue_V_0_vld_in == 1'b0) & (l2g_dep_queue_V_0_state == 2'd3) & (l2g_dep_queue_V_0_ack_out == 1'b1)))) begin
            l2g_dep_queue_V_0_state <= 2'd2;
        end else if ((((l2g_dep_queue_V_0_ack_out == 1'b0) & (l2g_dep_queue_V_0_state == 2'd1)) | ((l2g_dep_queue_V_0_ack_out == 1'b0) & (l2g_dep_queue_V_0_state == 2'd3) & (l2g_dep_queue_V_0_vld_in == 1'b1)))) begin
            l2g_dep_queue_V_0_state <= 2'd1;
        end else if (((~((l2g_dep_queue_V_0_vld_in == 1'b0) & (l2g_dep_queue_V_0_ack_out == 1'b1)) & ~((l2g_dep_queue_V_0_ack_out == 1'b0) & (l2g_dep_queue_V_0_vld_in == 1'b1)) & (l2g_dep_queue_V_0_state == 2'd3)) | ((l2g_dep_queue_V_0_state == 2'd1) & (l2g_dep_queue_V_0_ack_out == 1'b1)) | ((l2g_dep_queue_V_0_state == 2'd2) & (l2g_dep_queue_V_0_vld_in == 1'b1)))) begin
            l2g_dep_queue_V_0_state <= 2'd3;
        end else begin
            l2g_dep_queue_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        s2g_dep_queue_V_0_state <= 2'd0;
    end else begin
        if ((((s2g_dep_queue_V_0_vld_in == 1'b0) & (s2g_dep_queue_V_0_state == 2'd2)) | ((s2g_dep_queue_V_0_vld_in == 1'b0) & (s2g_dep_queue_V_0_state == 2'd3) & (s2g_dep_queue_V_0_ack_out == 1'b1)))) begin
            s2g_dep_queue_V_0_state <= 2'd2;
        end else if ((((s2g_dep_queue_V_0_ack_out == 1'b0) & (s2g_dep_queue_V_0_state == 2'd1)) | ((s2g_dep_queue_V_0_ack_out == 1'b0) & (s2g_dep_queue_V_0_state == 2'd3) & (s2g_dep_queue_V_0_vld_in == 1'b1)))) begin
            s2g_dep_queue_V_0_state <= 2'd1;
        end else if (((~((s2g_dep_queue_V_0_vld_in == 1'b0) & (s2g_dep_queue_V_0_ack_out == 1'b1)) & ~((s2g_dep_queue_V_0_ack_out == 1'b0) & (s2g_dep_queue_V_0_vld_in == 1'b1)) & (s2g_dep_queue_V_0_state == 2'd3)) | ((s2g_dep_queue_V_0_state == 2'd1) & (s2g_dep_queue_V_0_ack_out == 1'b1)) | ((s2g_dep_queue_V_0_state == 2'd2) & (s2g_dep_queue_V_0_vld_in == 1'b1)))) begin
            s2g_dep_queue_V_0_state <= 2'd3;
        end else begin
            s2g_dep_queue_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_reset_mem_fu_1325_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state50)) begin
            dram_idx_assign_0_reg_1282 <= add_ln700_267_reg_16099;
        end else if ((1'b1 == ap_CS_fsm_state36)) begin
            dram_idx_assign_0_reg_1282 <= dram_idx_V_reg_15952;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        dst_offset_in_0_i317_reg_1144 <= select_ln348_reg_13370;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dst_offset_in_0_i317_reg_1144 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_reg_14044 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        dst_offset_in_0_i_reg_1230 <= select_ln259_reg_14073;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        dst_offset_in_0_i_reg_1230 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        dst_offset_in_V_1_reg_1111 <= select_ln343_reg_13354;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dst_offset_in_V_1_reg_1111 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_fu_4548_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        dst_offset_in_V_reg_1186 <= select_ln253_fu_4622_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        dst_offset_in_V_reg_1186 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_reset_mem_fu_1325_ap_done == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state50)) begin
            i_op_assign_reg_1292 <= y_reg_16019;
        end else if ((1'b1 == ap_CS_fsm_state36)) begin
            i_op_assign_reg_1292 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_fu_4548_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten15_reg_1175 <= add_ln253_fu_4553_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        indvar_flatten15_reg_1175 <= 60'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        indvar_flatten25_reg_1133 <= select_ln348_2_reg_13382;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten25_reg_1133 <= 46'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        indvar_flatten71_reg_1100 <= add_ln343_reg_13349;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten71_reg_1100 <= 60'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_fu_4548_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten_reg_1219 <= select_ln259_3_fu_4704_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        indvar_flatten_reg_1219 <= 46'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln485_fu_11709_p2 == 1'd0))) begin
        phi_ln485_reg_1314 <= add_ln485_fu_11714_p2;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        phi_ln485_reg_1314 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln67_fu_11510_p2 == 1'd0))) begin
        phi_ln67_reg_1303 <= add_ln67_fu_11515_p2;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        phi_ln67_reg_1303 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        src_offset_in_0_i318_reg_1155 <= select_ln348_1_reg_13376;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        src_offset_in_0_i318_reg_1155 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_reg_14044 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_offset_in_0_i_reg_1241 <= select_ln259_1_reg_14079;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        src_offset_in_0_i_reg_1241 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        src_offset_in_V_1_reg_1122 <= select_ln343_1_reg_13359;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        src_offset_in_V_1_reg_1122 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_fu_4548_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        src_offset_in_V_reg_1197 <= select_ln253_1_fu_4630_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        src_offset_in_V_reg_1197 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        upc_0_i322_reg_1166 <= upc_3_reg_13392;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        upc_0_i322_reg_1166 <= zext_ln350_fu_1817_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_fu_4548_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        upc_0_i_reg_1263 <= upc_1_fu_4692_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        upc_0_i_reg_1263 <= zext_ln262_fu_4491_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_reg_14044 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        wgt_offset_in_0_i_reg_1252 <= select_ln259_2_reg_14085;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        wgt_offset_in_0_i_reg_1252 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_fu_4548_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        wgt_offset_in_V_reg_1208 <= select_ln253_2_fu_4638_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        wgt_offset_in_V_reg_1208 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_reg_14044_pp1_iter5_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        a_tensor_0_0_V_1_reg_15787 <= a_tensor_0_0_V_1_fu_10396_p3;
        a_tensor_0_11_V_1_reg_15897 <= a_tensor_0_11_V_1_fu_11045_p3;
        a_tensor_0_12_V_1_reg_15907 <= a_tensor_0_12_V_1_fu_11104_p3;
        a_tensor_0_13_V_1_reg_15917 <= a_tensor_0_13_V_1_fu_11163_p3;
        a_tensor_0_14_V_1_reg_15927 <= a_tensor_0_14_V_1_fu_11222_p3;
        a_tensor_0_15_V_1_reg_15937 <= a_tensor_0_15_V_1_fu_11281_p3;
        a_tensor_0_1_V_1_reg_15797 <= a_tensor_0_1_V_1_fu_10455_p3;
        a_tensor_0_2_V_1_reg_15807 <= a_tensor_0_2_V_1_fu_10514_p3;
        a_tensor_0_3_V_1_reg_15817 <= a_tensor_0_3_V_1_fu_10573_p3;
        a_tensor_0_4_V_1_reg_15827 <= a_tensor_0_4_V_1_fu_10632_p3;
        o_tensor_0_0_V_1_reg_15792 <= o_tensor_0_0_V_1_fu_10403_p1;
        o_tensor_0_1_V_1_reg_15802 <= o_tensor_0_1_V_1_fu_10462_p1;
        o_tensor_0_2_V_1_reg_15812 <= o_tensor_0_2_V_1_fu_10521_p1;
        o_tensor_0_3_V_1_reg_15822 <= o_tensor_0_3_V_1_fu_10580_p1;
        o_tensor_0_4_V_1_reg_15832 <= o_tensor_0_4_V_1_fu_10639_p1;
        select_ln304_1_reg_15847 <= select_ln304_1_fu_10750_p3;
        select_ln304_2_reg_15857 <= select_ln304_2_fu_10809_p3;
        select_ln304_3_reg_15867 <= select_ln304_3_fu_10868_p3;
        select_ln304_4_reg_15877 <= select_ln304_4_fu_10927_p3;
        select_ln304_5_reg_15887 <= select_ln304_5_fu_10986_p3;
        select_ln304_reg_15837 <= select_ln304_fu_10691_p3;
        trunc_ln647_10_reg_15842 <= trunc_ln647_10_fu_10698_p1;
        trunc_ln647_11_reg_15852 <= trunc_ln647_11_fu_10757_p1;
        trunc_ln647_12_reg_15862 <= trunc_ln647_12_fu_10816_p1;
        trunc_ln647_13_reg_15872 <= trunc_ln647_13_fu_10875_p1;
        trunc_ln647_14_reg_15882 <= trunc_ln647_14_fu_10934_p1;
        trunc_ln647_15_reg_15892 <= trunc_ln647_15_fu_10993_p1;
        trunc_ln647_16_reg_15902 <= trunc_ln647_16_fu_11052_p1;
        trunc_ln647_17_reg_15912 <= trunc_ln647_17_fu_11111_p1;
        trunc_ln647_18_reg_15922 <= trunc_ln647_18_fu_11170_p1;
        trunc_ln647_19_reg_15932 <= trunc_ln647_19_fu_11229_p1;
        trunc_ln647_20_reg_15942 <= trunc_ln647_20_fu_11288_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_reg_14044_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        acc_mem_V_addr_1_reg_15461 <= zext_ln544_2_fu_8780_p1;
        add_ln700_101_reg_15592 <= add_ln700_101_fu_9450_p2;
        add_ln700_105_reg_15597 <= add_ln700_105_fu_9462_p2;
        add_ln700_108_reg_15602 <= add_ln700_108_fu_9474_p2;
        add_ln700_114_reg_15607 <= add_ln700_114_fu_9534_p2;
        add_ln700_117_reg_15612 <= add_ln700_117_fu_9546_p2;
        add_ln700_121_reg_15617 <= add_ln700_121_fu_9558_p2;
        add_ln700_124_reg_15622 <= add_ln700_124_fu_9570_p2;
        add_ln700_12_reg_15482 <= add_ln700_12_fu_8898_p2;
        add_ln700_130_reg_15627 <= add_ln700_130_fu_9630_p2;
        add_ln700_133_reg_15632 <= add_ln700_133_fu_9642_p2;
        add_ln700_137_reg_15637 <= add_ln700_137_fu_9654_p2;
        add_ln700_140_reg_15642 <= add_ln700_140_fu_9666_p2;
        add_ln700_146_reg_15647 <= add_ln700_146_fu_9726_p2;
        add_ln700_149_reg_15652 <= add_ln700_149_fu_9738_p2;
        add_ln700_153_reg_15657 <= add_ln700_153_fu_9750_p2;
        add_ln700_156_reg_15662 <= add_ln700_156_fu_9762_p2;
        add_ln700_162_reg_15667 <= add_ln700_162_fu_9822_p2;
        add_ln700_165_reg_15672 <= add_ln700_165_fu_9834_p2;
        add_ln700_169_reg_15677 <= add_ln700_169_fu_9846_p2;
        add_ln700_172_reg_15682 <= add_ln700_172_fu_9858_p2;
        add_ln700_178_reg_15687 <= add_ln700_178_fu_9918_p2;
        add_ln700_181_reg_15692 <= add_ln700_181_fu_9930_p2;
        add_ln700_185_reg_15697 <= add_ln700_185_fu_9942_p2;
        add_ln700_188_reg_15702 <= add_ln700_188_fu_9954_p2;
        add_ln700_18_reg_15487 <= add_ln700_18_fu_8958_p2;
        add_ln700_194_reg_15707 <= add_ln700_194_fu_10014_p2;
        add_ln700_197_reg_15712 <= add_ln700_197_fu_10026_p2;
        add_ln700_201_reg_15717 <= add_ln700_201_fu_10038_p2;
        add_ln700_204_reg_15722 <= add_ln700_204_fu_10050_p2;
        add_ln700_210_reg_15727 <= add_ln700_210_fu_10110_p2;
        add_ln700_213_reg_15732 <= add_ln700_213_fu_10122_p2;
        add_ln700_217_reg_15737 <= add_ln700_217_fu_10134_p2;
        add_ln700_21_reg_15492 <= add_ln700_21_fu_8970_p2;
        add_ln700_220_reg_15742 <= add_ln700_220_fu_10146_p2;
        add_ln700_226_reg_15747 <= add_ln700_226_fu_10206_p2;
        add_ln700_229_reg_15752 <= add_ln700_229_fu_10218_p2;
        add_ln700_233_reg_15757 <= add_ln700_233_fu_10230_p2;
        add_ln700_236_reg_15762 <= add_ln700_236_fu_10242_p2;
        add_ln700_242_reg_15767 <= add_ln700_242_fu_10302_p2;
        add_ln700_245_reg_15772 <= add_ln700_245_fu_10314_p2;
        add_ln700_249_reg_15777 <= add_ln700_249_fu_10326_p2;
        add_ln700_252_reg_15782 <= add_ln700_252_fu_10338_p2;
        add_ln700_25_reg_15497 <= add_ln700_25_fu_8982_p2;
        add_ln700_28_reg_15502 <= add_ln700_28_fu_8994_p2;
        add_ln700_2_reg_15467 <= add_ln700_2_fu_8862_p2;
        add_ln700_34_reg_15507 <= add_ln700_34_fu_9054_p2;
        add_ln700_37_reg_15512 <= add_ln700_37_fu_9066_p2;
        add_ln700_41_reg_15517 <= add_ln700_41_fu_9078_p2;
        add_ln700_44_reg_15522 <= add_ln700_44_fu_9090_p2;
        add_ln700_50_reg_15527 <= add_ln700_50_fu_9150_p2;
        add_ln700_53_reg_15532 <= add_ln700_53_fu_9162_p2;
        add_ln700_57_reg_15537 <= add_ln700_57_fu_9174_p2;
        add_ln700_5_reg_15472 <= add_ln700_5_fu_8874_p2;
        add_ln700_60_reg_15542 <= add_ln700_60_fu_9186_p2;
        add_ln700_66_reg_15547 <= add_ln700_66_fu_9246_p2;
        add_ln700_69_reg_15552 <= add_ln700_69_fu_9258_p2;
        add_ln700_73_reg_15557 <= add_ln700_73_fu_9270_p2;
        add_ln700_76_reg_15562 <= add_ln700_76_fu_9282_p2;
        add_ln700_82_reg_15567 <= add_ln700_82_fu_9342_p2;
        add_ln700_85_reg_15572 <= add_ln700_85_fu_9354_p2;
        add_ln700_89_reg_15577 <= add_ln700_89_fu_9366_p2;
        add_ln700_92_reg_15582 <= add_ln700_92_fu_9378_p2;
        add_ln700_98_reg_15587 <= add_ln700_98_fu_9438_p2;
        add_ln700_9_reg_15477 <= add_ln700_9_fu_8886_p2;
        zext_ln544_2_reg_15456[11 : 0] <= zext_ln544_2_fu_8780_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        acc_mem_V_addr_1_reg_15461_pp1_iter6_reg <= acc_mem_V_addr_1_reg_15461;
        dst_idx_V_reg_14106_pp1_iter3_reg <= dst_idx_V_reg_14106;
        dst_idx_V_reg_14106_pp1_iter4_reg <= dst_idx_V_reg_14106_pp1_iter3_reg;
        icmp_ln253_reg_14044_pp1_iter2_reg <= icmp_ln253_reg_14044_pp1_iter1_reg;
        icmp_ln253_reg_14044_pp1_iter3_reg <= icmp_ln253_reg_14044_pp1_iter2_reg;
        icmp_ln253_reg_14044_pp1_iter4_reg <= icmp_ln253_reg_14044_pp1_iter3_reg;
        icmp_ln253_reg_14044_pp1_iter5_reg <= icmp_ln253_reg_14044_pp1_iter4_reg;
        icmp_ln253_reg_14044_pp1_iter6_reg <= icmp_ln253_reg_14044_pp1_iter5_reg;
        zext_ln544_2_reg_15456_pp1_iter6_reg[11 : 0] <= zext_ln544_2_reg_15456[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln343_reg_13345_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        acc_mem_V_addr_3_reg_13417 <= zext_ln544_4_fu_2065_p1;
        zext_ln544_4_reg_13412[11 : 0] <= zext_ln544_4_fu_2065_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        acc_mem_V_addr_3_reg_13417_pp0_iter2_reg <= acc_mem_V_addr_3_reg_13417;
        acc_mem_V_addr_3_reg_13417_pp0_iter3_reg <= acc_mem_V_addr_3_reg_13417_pp0_iter2_reg;
        dst_tensor_0_0_V_6_reg_13684_pp0_iter3_reg <= dst_tensor_0_0_V_6_reg_13684;
        dst_tensor_0_1_V_6_reg_13694_pp0_iter3_reg <= dst_tensor_0_1_V_6_reg_13694;
        dst_tensor_0_2_V_6_reg_13704_pp0_iter3_reg <= dst_tensor_0_2_V_6_reg_13704;
        dst_tensor_0_3_V_6_reg_13714_pp0_iter3_reg <= dst_tensor_0_3_V_6_reg_13714;
        dst_tensor_0_4_V_6_reg_13724_pp0_iter3_reg <= dst_tensor_0_4_V_6_reg_13724;
        dst_tensor_0_5_V_6_reg_13734_pp0_iter3_reg <= dst_tensor_0_5_V_6_reg_13734;
        dst_tensor_0_6_V_6_reg_13744_pp0_iter3_reg <= dst_tensor_0_6_V_6_reg_13744;
        dst_tensor_0_7_V_6_reg_13754_pp0_iter3_reg <= dst_tensor_0_7_V_6_reg_13754;
        zext_ln544_4_reg_13412_pp0_iter2_reg[11 : 0] <= zext_ln544_4_reg_13412[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln343_reg_13349 <= add_ln343_fu_1911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln485_fu_11709_p2 == 1'd0))) begin
        add_ln485_2_reg_16128 <= add_ln485_2_fu_11724_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln485_2_reg_16128_pp3_iter1_reg <= add_ln485_2_reg_16128;
        icmp_ln485_reg_16119 <= icmp_ln485_fu_11709_p2;
        icmp_ln485_reg_16119_pp3_iter1_reg <= icmp_ln485_reg_16119;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln62_fu_11467_p2 == 1'd0))) begin
        add_ln66_reg_16024 <= add_ln66_fu_11490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        add_ln700_266_reg_16094 <= add_ln700_266_fu_11686_p2;
        add_ln700_267_reg_16099 <= add_ln700_267_fu_11691_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        and_ln385_reg_13304 <= and_ln385_fu_1900_p2;
        icmp_ln378_1_reg_13268 <= icmp_ln378_1_fu_1888_p2;
        icmp_ln378_reg_13156 <= icmp_ln378_fu_1841_p2;
        icmp_ln391_reg_13192 <= icmp_ln391_fu_1853_p2;
        mul_ln331_1_reg_13340 <= grp_fu_1802_p2;
        src_1_V_reg_13228 <= src_1_V_fu_1859_p1;
        tmp_12_reg_13136 <= tmp_V_reg_12909[32'd111];
        zext_ln350_1_reg_13131[13 : 0] <= zext_ln350_1_fu_1821_p1[13 : 0];
        zext_ln350_reg_13124[12 : 0] <= zext_ln350_fu_1817_p1[12 : 0];
        zext_ln700_10_reg_13263[10 : 0] <= zext_ln700_10_fu_1875_p1[10 : 0];
        zext_ln700_7_reg_13248[10 : 0] <= zext_ln700_7_fu_1863_p1[10 : 0];
        zext_ln700_8_reg_13253[10 : 0] <= zext_ln700_8_fu_1867_p1[10 : 0];
        zext_ln700_9_reg_13258[10 : 0] <= zext_ln700_9_fu_1871_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln67_reg_16046_pp2_iter1_reg == 1'd0))) begin
        and_ln67_1_reg_16089 <= and_ln67_1_fu_11658_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln67_reg_16046 == 1'd0))) begin
        data_port_addr_read_reg_16066 <= data_port_RDATA;
        empty_18_reg_16076[8 : 6] <= empty_18_fu_11551_p2[8 : 6];
        icmp_ln67_1_reg_16081 <= icmp_ln67_1_fu_11557_p2;
        shl_ln67_2_reg_16071[8 : 6] <= shl_ln67_2_fu_11544_p3[8 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        dram_idx_V_reg_15952 <= {{tmp_V_reg_12909[57:26]}};
        sram_idx_V_reg_15947 <= {{tmp_V_reg_12909[25:10]}};
        y_offset_0_V_reg_15962 <= y_offset_0_V_fu_11368_p2;
        y_offset_1_V_reg_15967 <= y_offset_1_V_fu_11386_p2;
        zext_ln478_1_reg_15957[3 : 0] <= zext_ln478_1_fu_11352_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln343_reg_13345 == 1'd0))) begin
        dst_idx_V_1_reg_13397 <= dst_idx_V_1_fu_2047_p2;
        src_idx_V_1_reg_13402 <= src_idx_V_1_fu_2056_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_reg_14044_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        dst_idx_V_reg_14106 <= dst_idx_V_fu_4724_p2;
        src_idx_V_reg_14111 <= src_idx_V_fu_4733_p2;
        wgt_idx_V_reg_14116 <= wgt_idx_V_fu_4752_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln343_reg_13345_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        dst_tensor_0_0_V_6_reg_13684 <= dst_tensor_0_0_V_6_fu_2376_p3;
        dst_tensor_0_1_V_6_reg_13694 <= dst_tensor_0_1_V_6_fu_2508_p3;
        dst_tensor_0_2_V_6_reg_13704 <= dst_tensor_0_2_V_6_fu_2640_p3;
        dst_tensor_0_3_V_6_reg_13714 <= dst_tensor_0_3_V_6_fu_2772_p3;
        dst_tensor_0_4_V_6_reg_13724 <= dst_tensor_0_4_V_6_fu_2904_p3;
        dst_tensor_0_5_V_6_reg_13734 <= dst_tensor_0_5_V_6_fu_3036_p3;
        dst_tensor_0_6_V_6_reg_13744 <= dst_tensor_0_6_V_6_fu_3168_p3;
        dst_tensor_0_7_V_6_reg_13754 <= dst_tensor_0_7_V_6_fu_3300_p3;
        o_tensor_0_0_V_10_reg_13679 <= o_tensor_0_0_V_10_fu_2356_p3;
        o_tensor_0_1_V_10_reg_13689 <= o_tensor_0_1_V_10_fu_2488_p3;
        o_tensor_0_2_V_10_reg_13699 <= o_tensor_0_2_V_10_fu_2620_p3;
        o_tensor_0_3_V_10_reg_13709 <= o_tensor_0_3_V_10_fu_2752_p3;
        o_tensor_0_4_V_10_reg_13719 <= o_tensor_0_4_V_10_fu_2884_p3;
        o_tensor_0_5_V_9_reg_13729 <= o_tensor_0_5_V_9_fu_3016_p3;
        o_tensor_0_6_V_9_reg_13739 <= o_tensor_0_6_V_9_fu_3148_p3;
        o_tensor_0_7_V_9_reg_13749 <= o_tensor_0_7_V_9_fu_3280_p3;
        src_1_V_10_reg_13797 <= src_1_V_10_fu_3337_p3;
        src_1_V_11_reg_13816 <= src_1_V_11_fu_3352_p3;
        src_1_V_12_reg_13835 <= src_1_V_12_fu_3367_p3;
        src_1_V_13_reg_13854 <= src_1_V_13_fu_3382_p3;
        src_1_V_14_reg_13873 <= src_1_V_14_fu_3397_p3;
        src_1_V_15_reg_13892 <= src_1_V_15_fu_3412_p3;
        src_1_V_8_reg_13759 <= src_1_V_8_fu_3307_p3;
        src_1_V_9_reg_13778 <= src_1_V_9_fu_3322_p3;
        sub_ln461_10_reg_13811 <= sub_ln461_10_fu_3346_p2;
        sub_ln461_11_reg_13830 <= sub_ln461_11_fu_3361_p2;
        sub_ln461_12_reg_13849 <= sub_ln461_12_fu_3376_p2;
        sub_ln461_13_reg_13868 <= sub_ln461_13_fu_3391_p2;
        sub_ln461_14_reg_13887 <= sub_ln461_14_fu_3406_p2;
        sub_ln461_15_reg_13906 <= sub_ln461_15_fu_3421_p2;
        sub_ln461_8_reg_13773 <= sub_ln461_8_fu_3316_p2;
        sub_ln461_9_reg_13792 <= sub_ln461_9_fu_3331_p2;
        trunc_ln647_56_reg_13768 <= trunc_ln647_56_fu_3312_p1;
        trunc_ln647_60_reg_13787 <= trunc_ln647_60_fu_3327_p1;
        trunc_ln647_64_reg_13806 <= trunc_ln647_64_fu_3342_p1;
        trunc_ln647_68_reg_13825 <= trunc_ln647_68_fu_3357_p1;
        trunc_ln647_72_reg_13844 <= trunc_ln647_72_fu_3372_p1;
        trunc_ln647_76_reg_13863 <= trunc_ln647_76_fu_3387_p1;
        trunc_ln647_80_reg_13882 <= trunc_ln647_80_fu_3402_p1;
        trunc_ln647_84_reg_13901 <= trunc_ln647_84_fu_3417_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln343_reg_13345_pp0_iter1_reg == 1'd0))) begin
        dst_tensor_0_0_V_reg_13503 <= dst_tensor_0_0_V_fu_2223_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln343_reg_13345_pp0_iter2_reg == 1'd0))) begin
        dst_tensor_0_10_V_6_reg_13921 <= dst_tensor_0_10_V_6_fu_3814_p3;
        dst_tensor_0_11_V_6_reg_13926 <= dst_tensor_0_11_V_6_fu_3924_p3;
        dst_tensor_0_12_V_6_reg_13931 <= dst_tensor_0_12_V_6_fu_4034_p3;
        dst_tensor_0_13_V_6_reg_13936 <= dst_tensor_0_13_V_6_fu_4144_p3;
        dst_tensor_0_14_V_6_reg_13941 <= dst_tensor_0_14_V_6_fu_4254_p3;
        dst_tensor_0_15_V_6_reg_13946 <= dst_tensor_0_15_V_6_fu_4364_p3;
        dst_tensor_0_8_V_6_reg_13911 <= dst_tensor_0_8_V_6_fu_3594_p3;
        dst_tensor_0_9_V_6_reg_13916 <= dst_tensor_0_9_V_6_fu_3704_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln343_reg_13345_pp0_iter1_reg == 1'd0))) begin
        dst_tensor_0_10_V_reg_13613 <= {{acc_mem_V_q1[351:320]}};
        dst_tensor_0_11_V_reg_13624 <= {{acc_mem_V_q1[383:352]}};
        dst_tensor_0_12_V_reg_13635 <= {{acc_mem_V_q1[415:384]}};
        dst_tensor_0_13_V_reg_13646 <= {{acc_mem_V_q1[447:416]}};
        dst_tensor_0_14_V_reg_13657 <= {{acc_mem_V_q1[479:448]}};
        dst_tensor_0_15_V_reg_13668 <= {{acc_mem_V_q1[511:480]}};
        dst_tensor_0_1_V_reg_13514 <= {{acc_mem_V_q1[63:32]}};
        dst_tensor_0_2_V_reg_13525 <= {{acc_mem_V_q1[95:64]}};
        dst_tensor_0_3_V_reg_13536 <= {{acc_mem_V_q1[127:96]}};
        dst_tensor_0_4_V_reg_13547 <= {{acc_mem_V_q1[159:128]}};
        dst_tensor_0_5_V_reg_13558 <= {{acc_mem_V_q1[191:160]}};
        dst_tensor_0_6_V_reg_13569 <= {{acc_mem_V_q1[223:192]}};
        dst_tensor_0_7_V_reg_13580 <= {{acc_mem_V_q1[255:224]}};
        dst_tensor_0_8_V_reg_13591 <= {{acc_mem_V_q1[287:256]}};
        dst_tensor_0_9_V_reg_13602 <= {{acc_mem_V_q1[319:288]}};
    end
end

always @ (posedge ap_clk) begin
    if ((gemm_queue_V_V_0_load_A == 1'b1)) begin
        gemm_queue_V_V_0_payload_A <= gemm_queue_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((gemm_queue_V_V_0_load_B == 1'b1)) begin
        gemm_queue_V_V_0_payload_B <= gemm_queue_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln253_reg_14044_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_tensor_i_0_11_reg_14806 <= {{inp_mem_V_Dout_A[103:96]}};
        i_tensor_i_0_13_reg_14811 <= {{inp_mem_V_Dout_A[119:112]}};
        i_tensor_i_0_2_reg_14781 <= {{inp_mem_V_Dout_A[23:16]}};
        i_tensor_i_0_4_reg_14786 <= {{inp_mem_V_Dout_A[39:32]}};
        i_tensor_i_0_6_reg_14791 <= {{inp_mem_V_Dout_A[55:48]}};
        i_tensor_i_0_8_reg_14796 <= {{inp_mem_V_Dout_A[71:64]}};
        i_tensor_i_0_s_reg_14801 <= {{inp_mem_V_Dout_A[87:80]}};
        mul_ln1352_101_reg_15066 <= mul_ln1352_101_fu_8004_p2;
        mul_ln1352_103_reg_15071 <= mul_ln1352_103_fu_8014_p2;
        mul_ln1352_105_reg_15076 <= mul_ln1352_105_fu_8024_p2;
        mul_ln1352_107_reg_15081 <= mul_ln1352_107_fu_8034_p2;
        mul_ln1352_109_reg_15086 <= mul_ln1352_109_fu_8044_p2;
        mul_ln1352_111_reg_15091 <= mul_ln1352_111_fu_8054_p2;
        mul_ln1352_113_reg_15096 <= mul_ln1352_113_fu_8064_p2;
        mul_ln1352_115_reg_15101 <= mul_ln1352_115_fu_8074_p2;
        mul_ln1352_117_reg_15106 <= mul_ln1352_117_fu_8084_p2;
        mul_ln1352_119_reg_15111 <= mul_ln1352_119_fu_8094_p2;
        mul_ln1352_11_reg_14841 <= mul_ln1352_11_fu_7546_p2;
        mul_ln1352_121_reg_15116 <= mul_ln1352_121_fu_8104_p2;
        mul_ln1352_123_reg_15121 <= mul_ln1352_123_fu_8114_p2;
        mul_ln1352_125_reg_15126 <= mul_ln1352_125_fu_8124_p2;
        mul_ln1352_127_reg_15131 <= mul_ln1352_127_fu_8134_p2;
        mul_ln1352_129_reg_15136 <= mul_ln1352_129_fu_8144_p2;
        mul_ln1352_131_reg_15141 <= mul_ln1352_131_fu_8154_p2;
        mul_ln1352_133_reg_15146 <= mul_ln1352_133_fu_8164_p2;
        mul_ln1352_135_reg_15151 <= mul_ln1352_135_fu_8174_p2;
        mul_ln1352_137_reg_15156 <= mul_ln1352_137_fu_8184_p2;
        mul_ln1352_139_reg_15161 <= mul_ln1352_139_fu_8194_p2;
        mul_ln1352_13_reg_14846 <= mul_ln1352_13_fu_7560_p2;
        mul_ln1352_141_reg_15166 <= mul_ln1352_141_fu_8204_p2;
        mul_ln1352_143_reg_15171 <= mul_ln1352_143_fu_8214_p2;
        mul_ln1352_145_reg_15176 <= mul_ln1352_145_fu_8224_p2;
        mul_ln1352_147_reg_15181 <= mul_ln1352_147_fu_8234_p2;
        mul_ln1352_149_reg_15186 <= mul_ln1352_149_fu_8244_p2;
        mul_ln1352_151_reg_15191 <= mul_ln1352_151_fu_8254_p2;
        mul_ln1352_153_reg_15196 <= mul_ln1352_153_fu_8264_p2;
        mul_ln1352_155_reg_15201 <= mul_ln1352_155_fu_8274_p2;
        mul_ln1352_157_reg_15206 <= mul_ln1352_157_fu_8284_p2;
        mul_ln1352_159_reg_15211 <= mul_ln1352_159_fu_8294_p2;
        mul_ln1352_15_reg_14851 <= mul_ln1352_15_fu_7574_p2;
        mul_ln1352_161_reg_15216 <= mul_ln1352_161_fu_8304_p2;
        mul_ln1352_163_reg_15221 <= mul_ln1352_163_fu_8314_p2;
        mul_ln1352_165_reg_15226 <= mul_ln1352_165_fu_8324_p2;
        mul_ln1352_167_reg_15231 <= mul_ln1352_167_fu_8334_p2;
        mul_ln1352_169_reg_15236 <= mul_ln1352_169_fu_8344_p2;
        mul_ln1352_171_reg_15241 <= mul_ln1352_171_fu_8354_p2;
        mul_ln1352_173_reg_15246 <= mul_ln1352_173_fu_8364_p2;
        mul_ln1352_175_reg_15251 <= mul_ln1352_175_fu_8374_p2;
        mul_ln1352_177_reg_15256 <= mul_ln1352_177_fu_8384_p2;
        mul_ln1352_179_reg_15261 <= mul_ln1352_179_fu_8394_p2;
        mul_ln1352_17_reg_14856 <= mul_ln1352_17_fu_7584_p2;
        mul_ln1352_181_reg_15266 <= mul_ln1352_181_fu_8404_p2;
        mul_ln1352_183_reg_15271 <= mul_ln1352_183_fu_8414_p2;
        mul_ln1352_185_reg_15276 <= mul_ln1352_185_fu_8424_p2;
        mul_ln1352_187_reg_15281 <= mul_ln1352_187_fu_8434_p2;
        mul_ln1352_189_reg_15286 <= mul_ln1352_189_fu_8444_p2;
        mul_ln1352_191_reg_15291 <= mul_ln1352_191_fu_8454_p2;
        mul_ln1352_193_reg_15296 <= mul_ln1352_193_fu_8464_p2;
        mul_ln1352_195_reg_15301 <= mul_ln1352_195_fu_8474_p2;
        mul_ln1352_197_reg_15306 <= mul_ln1352_197_fu_8484_p2;
        mul_ln1352_199_reg_15311 <= mul_ln1352_199_fu_8494_p2;
        mul_ln1352_19_reg_14861 <= mul_ln1352_19_fu_7594_p2;
        mul_ln1352_1_reg_14816 <= mul_ln1352_1_fu_7476_p2;
        mul_ln1352_201_reg_15316 <= mul_ln1352_201_fu_8504_p2;
        mul_ln1352_203_reg_15321 <= mul_ln1352_203_fu_8514_p2;
        mul_ln1352_205_reg_15326 <= mul_ln1352_205_fu_8524_p2;
        mul_ln1352_207_reg_15331 <= mul_ln1352_207_fu_8534_p2;
        mul_ln1352_209_reg_15336 <= mul_ln1352_209_fu_8544_p2;
        mul_ln1352_211_reg_15341 <= mul_ln1352_211_fu_8554_p2;
        mul_ln1352_213_reg_15346 <= mul_ln1352_213_fu_8564_p2;
        mul_ln1352_215_reg_15351 <= mul_ln1352_215_fu_8574_p2;
        mul_ln1352_217_reg_15356 <= mul_ln1352_217_fu_8584_p2;
        mul_ln1352_219_reg_15361 <= mul_ln1352_219_fu_8594_p2;
        mul_ln1352_21_reg_14866 <= mul_ln1352_21_fu_7604_p2;
        mul_ln1352_221_reg_15366 <= mul_ln1352_221_fu_8604_p2;
        mul_ln1352_223_reg_15371 <= mul_ln1352_223_fu_8614_p2;
        mul_ln1352_225_reg_15376 <= mul_ln1352_225_fu_8624_p2;
        mul_ln1352_227_reg_15381 <= mul_ln1352_227_fu_8634_p2;
        mul_ln1352_229_reg_15386 <= mul_ln1352_229_fu_8644_p2;
        mul_ln1352_231_reg_15391 <= mul_ln1352_231_fu_8654_p2;
        mul_ln1352_233_reg_15396 <= mul_ln1352_233_fu_8664_p2;
        mul_ln1352_235_reg_15401 <= mul_ln1352_235_fu_8674_p2;
        mul_ln1352_237_reg_15406 <= mul_ln1352_237_fu_8684_p2;
        mul_ln1352_239_reg_15411 <= mul_ln1352_239_fu_8694_p2;
        mul_ln1352_23_reg_14871 <= mul_ln1352_23_fu_7614_p2;
        mul_ln1352_241_reg_15416 <= mul_ln1352_241_fu_8704_p2;
        mul_ln1352_243_reg_15421 <= mul_ln1352_243_fu_8714_p2;
        mul_ln1352_245_reg_15426 <= mul_ln1352_245_fu_8724_p2;
        mul_ln1352_247_reg_15431 <= mul_ln1352_247_fu_8734_p2;
        mul_ln1352_249_reg_15436 <= mul_ln1352_249_fu_8744_p2;
        mul_ln1352_251_reg_15441 <= mul_ln1352_251_fu_8754_p2;
        mul_ln1352_253_reg_15446 <= mul_ln1352_253_fu_8764_p2;
        mul_ln1352_255_reg_15451 <= mul_ln1352_255_fu_8774_p2;
        mul_ln1352_25_reg_14876 <= mul_ln1352_25_fu_7624_p2;
        mul_ln1352_27_reg_14881 <= mul_ln1352_27_fu_7634_p2;
        mul_ln1352_29_reg_14886 <= mul_ln1352_29_fu_7644_p2;
        mul_ln1352_31_reg_14891 <= mul_ln1352_31_fu_7654_p2;
        mul_ln1352_33_reg_14896 <= mul_ln1352_33_fu_7664_p2;
        mul_ln1352_35_reg_14901 <= mul_ln1352_35_fu_7674_p2;
        mul_ln1352_37_reg_14906 <= mul_ln1352_37_fu_7684_p2;
        mul_ln1352_39_reg_14911 <= mul_ln1352_39_fu_7694_p2;
        mul_ln1352_3_reg_14821 <= mul_ln1352_3_fu_7490_p2;
        mul_ln1352_41_reg_14916 <= mul_ln1352_41_fu_7704_p2;
        mul_ln1352_43_reg_14921 <= mul_ln1352_43_fu_7714_p2;
        mul_ln1352_45_reg_14926 <= mul_ln1352_45_fu_7724_p2;
        mul_ln1352_47_reg_14931 <= mul_ln1352_47_fu_7734_p2;
        mul_ln1352_49_reg_14936 <= mul_ln1352_49_fu_7744_p2;
        mul_ln1352_51_reg_14941 <= mul_ln1352_51_fu_7754_p2;
        mul_ln1352_53_reg_14946 <= mul_ln1352_53_fu_7764_p2;
        mul_ln1352_55_reg_14951 <= mul_ln1352_55_fu_7774_p2;
        mul_ln1352_57_reg_14956 <= mul_ln1352_57_fu_7784_p2;
        mul_ln1352_59_reg_14961 <= mul_ln1352_59_fu_7794_p2;
        mul_ln1352_5_reg_14826 <= mul_ln1352_5_fu_7504_p2;
        mul_ln1352_61_reg_14966 <= mul_ln1352_61_fu_7804_p2;
        mul_ln1352_63_reg_14971 <= mul_ln1352_63_fu_7814_p2;
        mul_ln1352_65_reg_14976 <= mul_ln1352_65_fu_7824_p2;
        mul_ln1352_67_reg_14981 <= mul_ln1352_67_fu_7834_p2;
        mul_ln1352_69_reg_14986 <= mul_ln1352_69_fu_7844_p2;
        mul_ln1352_71_reg_14991 <= mul_ln1352_71_fu_7854_p2;
        mul_ln1352_73_reg_14996 <= mul_ln1352_73_fu_7864_p2;
        mul_ln1352_75_reg_15001 <= mul_ln1352_75_fu_7874_p2;
        mul_ln1352_77_reg_15006 <= mul_ln1352_77_fu_7884_p2;
        mul_ln1352_79_reg_15011 <= mul_ln1352_79_fu_7894_p2;
        mul_ln1352_7_reg_14831 <= mul_ln1352_7_fu_7518_p2;
        mul_ln1352_81_reg_15016 <= mul_ln1352_81_fu_7904_p2;
        mul_ln1352_83_reg_15021 <= mul_ln1352_83_fu_7914_p2;
        mul_ln1352_85_reg_15026 <= mul_ln1352_85_fu_7924_p2;
        mul_ln1352_87_reg_15031 <= mul_ln1352_87_fu_7934_p2;
        mul_ln1352_89_reg_15036 <= mul_ln1352_89_fu_7944_p2;
        mul_ln1352_91_reg_15041 <= mul_ln1352_91_fu_7954_p2;
        mul_ln1352_93_reg_15046 <= mul_ln1352_93_fu_7964_p2;
        mul_ln1352_95_reg_15051 <= mul_ln1352_95_fu_7974_p2;
        mul_ln1352_97_reg_15056 <= mul_ln1352_97_fu_7984_p2;
        mul_ln1352_99_reg_15061 <= mul_ln1352_99_fu_7994_p2;
        mul_ln1352_9_reg_14836 <= mul_ln1352_9_fu_7532_p2;
        trunc_ln647_1_reg_14136 <= trunc_ln647_1_fu_4766_p1;
        trunc_ln647_2_reg_14156 <= trunc_ln647_2_fu_4840_p1;
        trunc_ln647_3_reg_14776 <= trunc_ln647_3_fu_7314_p1;
        w_tensor_i_0_10_reg_14166 <= {{wgt_mem_1_V_Dout_A[39:32]}};
        w_tensor_i_0_12_reg_14171 <= {{wgt_mem_1_V_Dout_A[55:48]}};
        w_tensor_i_0_2_reg_14141 <= {{wgt_mem_0_V_Dout_A[23:16]}};
        w_tensor_i_0_4_reg_14146 <= {{wgt_mem_0_V_Dout_A[39:32]}};
        w_tensor_i_0_6_reg_14151 <= {{wgt_mem_0_V_Dout_A[55:48]}};
        w_tensor_i_0_s_reg_14161 <= {{wgt_mem_1_V_Dout_A[23:16]}};
        w_tensor_i_10_11_reg_14566 <= {{wgt_mem_1_V_Dout_A[679:672]}};
        w_tensor_i_10_13_reg_14571 <= {{wgt_mem_1_V_Dout_A[695:688]}};
        w_tensor_i_10_2_reg_14541 <= {{wgt_mem_0_V_Dout_A[663:656]}};
        w_tensor_i_10_4_reg_14546 <= {{wgt_mem_0_V_Dout_A[679:672]}};
        w_tensor_i_10_6_reg_14551 <= {{wgt_mem_0_V_Dout_A[695:688]}};
        w_tensor_i_10_8_reg_14556 <= {{wgt_mem_1_V_Dout_A[647:640]}};
        w_tensor_i_10_reg_14576 <= {{wgt_mem_0_V_Dout_A[711:704]}};
        w_tensor_i_10_s_reg_14561 <= {{wgt_mem_1_V_Dout_A[663:656]}};
        w_tensor_i_11_11_reg_14606 <= {{wgt_mem_1_V_Dout_A[743:736]}};
        w_tensor_i_11_13_reg_14611 <= {{wgt_mem_1_V_Dout_A[759:752]}};
        w_tensor_i_11_2_reg_14581 <= {{wgt_mem_0_V_Dout_A[727:720]}};
        w_tensor_i_11_4_reg_14586 <= {{wgt_mem_0_V_Dout_A[743:736]}};
        w_tensor_i_11_6_reg_14591 <= {{wgt_mem_0_V_Dout_A[759:752]}};
        w_tensor_i_11_8_reg_14596 <= {{wgt_mem_1_V_Dout_A[711:704]}};
        w_tensor_i_11_reg_14616 <= {{wgt_mem_0_V_Dout_A[775:768]}};
        w_tensor_i_11_s_reg_14601 <= {{wgt_mem_1_V_Dout_A[727:720]}};
        w_tensor_i_12_11_reg_14646 <= {{wgt_mem_1_V_Dout_A[807:800]}};
        w_tensor_i_12_13_reg_14651 <= {{wgt_mem_1_V_Dout_A[823:816]}};
        w_tensor_i_12_2_reg_14621 <= {{wgt_mem_0_V_Dout_A[791:784]}};
        w_tensor_i_12_4_reg_14626 <= {{wgt_mem_0_V_Dout_A[807:800]}};
        w_tensor_i_12_6_reg_14631 <= {{wgt_mem_0_V_Dout_A[823:816]}};
        w_tensor_i_12_8_reg_14636 <= {{wgt_mem_1_V_Dout_A[775:768]}};
        w_tensor_i_12_reg_14656 <= {{wgt_mem_0_V_Dout_A[839:832]}};
        w_tensor_i_12_s_reg_14641 <= {{wgt_mem_1_V_Dout_A[791:784]}};
        w_tensor_i_13_11_reg_14686 <= {{wgt_mem_1_V_Dout_A[871:864]}};
        w_tensor_i_13_13_reg_14691 <= {{wgt_mem_1_V_Dout_A[887:880]}};
        w_tensor_i_13_2_reg_14661 <= {{wgt_mem_0_V_Dout_A[855:848]}};
        w_tensor_i_13_4_reg_14666 <= {{wgt_mem_0_V_Dout_A[871:864]}};
        w_tensor_i_13_6_reg_14671 <= {{wgt_mem_0_V_Dout_A[887:880]}};
        w_tensor_i_13_8_reg_14676 <= {{wgt_mem_1_V_Dout_A[839:832]}};
        w_tensor_i_13_reg_14696 <= {{wgt_mem_0_V_Dout_A[903:896]}};
        w_tensor_i_13_s_reg_14681 <= {{wgt_mem_1_V_Dout_A[855:848]}};
        w_tensor_i_14_11_reg_14726 <= {{wgt_mem_1_V_Dout_A[935:928]}};
        w_tensor_i_14_13_reg_14731 <= {{wgt_mem_1_V_Dout_A[951:944]}};
        w_tensor_i_14_2_reg_14701 <= {{wgt_mem_0_V_Dout_A[919:912]}};
        w_tensor_i_14_4_reg_14706 <= {{wgt_mem_0_V_Dout_A[935:928]}};
        w_tensor_i_14_6_reg_14711 <= {{wgt_mem_0_V_Dout_A[951:944]}};
        w_tensor_i_14_8_reg_14716 <= {{wgt_mem_1_V_Dout_A[903:896]}};
        w_tensor_i_14_reg_14736 <= {{wgt_mem_0_V_Dout_A[967:960]}};
        w_tensor_i_14_s_reg_14721 <= {{wgt_mem_1_V_Dout_A[919:912]}};
        w_tensor_i_15_11_reg_14766 <= {{wgt_mem_1_V_Dout_A[999:992]}};
        w_tensor_i_15_13_reg_14771 <= {{wgt_mem_1_V_Dout_A[1015:1008]}};
        w_tensor_i_15_2_reg_14741 <= {{wgt_mem_0_V_Dout_A[983:976]}};
        w_tensor_i_15_4_reg_14746 <= {{wgt_mem_0_V_Dout_A[999:992]}};
        w_tensor_i_15_6_reg_14751 <= {{wgt_mem_0_V_Dout_A[1015:1008]}};
        w_tensor_i_15_8_reg_14756 <= {{wgt_mem_1_V_Dout_A[967:960]}};
        w_tensor_i_15_s_reg_14761 <= {{wgt_mem_1_V_Dout_A[983:976]}};
        w_tensor_i_1_11_reg_14206 <= {{wgt_mem_1_V_Dout_A[103:96]}};
        w_tensor_i_1_13_reg_14211 <= {{wgt_mem_1_V_Dout_A[119:112]}};
        w_tensor_i_1_2_reg_14181 <= {{wgt_mem_0_V_Dout_A[87:80]}};
        w_tensor_i_1_4_reg_14186 <= {{wgt_mem_0_V_Dout_A[103:96]}};
        w_tensor_i_1_6_reg_14191 <= {{wgt_mem_0_V_Dout_A[119:112]}};
        w_tensor_i_1_8_reg_14196 <= {{wgt_mem_1_V_Dout_A[71:64]}};
        w_tensor_i_1_reg_14176 <= {{wgt_mem_0_V_Dout_A[71:64]}};
        w_tensor_i_1_s_reg_14201 <= {{wgt_mem_1_V_Dout_A[87:80]}};
        w_tensor_i_2_11_reg_14246 <= {{wgt_mem_1_V_Dout_A[167:160]}};
        w_tensor_i_2_13_reg_14251 <= {{wgt_mem_1_V_Dout_A[183:176]}};
        w_tensor_i_2_2_reg_14221 <= {{wgt_mem_0_V_Dout_A[151:144]}};
        w_tensor_i_2_4_reg_14226 <= {{wgt_mem_0_V_Dout_A[167:160]}};
        w_tensor_i_2_6_reg_14231 <= {{wgt_mem_0_V_Dout_A[183:176]}};
        w_tensor_i_2_8_reg_14236 <= {{wgt_mem_1_V_Dout_A[135:128]}};
        w_tensor_i_2_reg_14216 <= {{wgt_mem_0_V_Dout_A[135:128]}};
        w_tensor_i_2_s_reg_14241 <= {{wgt_mem_1_V_Dout_A[151:144]}};
        w_tensor_i_3_11_reg_14286 <= {{wgt_mem_1_V_Dout_A[231:224]}};
        w_tensor_i_3_13_reg_14291 <= {{wgt_mem_1_V_Dout_A[247:240]}};
        w_tensor_i_3_2_reg_14261 <= {{wgt_mem_0_V_Dout_A[215:208]}};
        w_tensor_i_3_4_reg_14266 <= {{wgt_mem_0_V_Dout_A[231:224]}};
        w_tensor_i_3_6_reg_14271 <= {{wgt_mem_0_V_Dout_A[247:240]}};
        w_tensor_i_3_8_reg_14276 <= {{wgt_mem_1_V_Dout_A[199:192]}};
        w_tensor_i_3_reg_14256 <= {{wgt_mem_0_V_Dout_A[199:192]}};
        w_tensor_i_3_s_reg_14281 <= {{wgt_mem_1_V_Dout_A[215:208]}};
        w_tensor_i_4_11_reg_14326 <= {{wgt_mem_1_V_Dout_A[295:288]}};
        w_tensor_i_4_13_reg_14331 <= {{wgt_mem_1_V_Dout_A[311:304]}};
        w_tensor_i_4_2_reg_14301 <= {{wgt_mem_0_V_Dout_A[279:272]}};
        w_tensor_i_4_4_reg_14306 <= {{wgt_mem_0_V_Dout_A[295:288]}};
        w_tensor_i_4_6_reg_14311 <= {{wgt_mem_0_V_Dout_A[311:304]}};
        w_tensor_i_4_8_reg_14316 <= {{wgt_mem_1_V_Dout_A[263:256]}};
        w_tensor_i_4_reg_14296 <= {{wgt_mem_0_V_Dout_A[263:256]}};
        w_tensor_i_4_s_reg_14321 <= {{wgt_mem_1_V_Dout_A[279:272]}};
        w_tensor_i_5_11_reg_14366 <= {{wgt_mem_1_V_Dout_A[359:352]}};
        w_tensor_i_5_13_reg_14371 <= {{wgt_mem_1_V_Dout_A[375:368]}};
        w_tensor_i_5_2_reg_14341 <= {{wgt_mem_0_V_Dout_A[343:336]}};
        w_tensor_i_5_4_reg_14346 <= {{wgt_mem_0_V_Dout_A[359:352]}};
        w_tensor_i_5_6_reg_14351 <= {{wgt_mem_0_V_Dout_A[375:368]}};
        w_tensor_i_5_8_reg_14356 <= {{wgt_mem_1_V_Dout_A[327:320]}};
        w_tensor_i_5_reg_14336 <= {{wgt_mem_0_V_Dout_A[327:320]}};
        w_tensor_i_5_s_reg_14361 <= {{wgt_mem_1_V_Dout_A[343:336]}};
        w_tensor_i_6_11_reg_14406 <= {{wgt_mem_1_V_Dout_A[423:416]}};
        w_tensor_i_6_13_reg_14411 <= {{wgt_mem_1_V_Dout_A[439:432]}};
        w_tensor_i_6_2_reg_14381 <= {{wgt_mem_0_V_Dout_A[407:400]}};
        w_tensor_i_6_4_reg_14386 <= {{wgt_mem_0_V_Dout_A[423:416]}};
        w_tensor_i_6_6_reg_14391 <= {{wgt_mem_0_V_Dout_A[439:432]}};
        w_tensor_i_6_8_reg_14396 <= {{wgt_mem_1_V_Dout_A[391:384]}};
        w_tensor_i_6_reg_14376 <= {{wgt_mem_0_V_Dout_A[391:384]}};
        w_tensor_i_6_s_reg_14401 <= {{wgt_mem_1_V_Dout_A[407:400]}};
        w_tensor_i_7_11_reg_14446 <= {{wgt_mem_1_V_Dout_A[487:480]}};
        w_tensor_i_7_13_reg_14451 <= {{wgt_mem_1_V_Dout_A[503:496]}};
        w_tensor_i_7_2_reg_14421 <= {{wgt_mem_0_V_Dout_A[471:464]}};
        w_tensor_i_7_4_reg_14426 <= {{wgt_mem_0_V_Dout_A[487:480]}};
        w_tensor_i_7_6_reg_14431 <= {{wgt_mem_0_V_Dout_A[503:496]}};
        w_tensor_i_7_8_reg_14436 <= {{wgt_mem_1_V_Dout_A[455:448]}};
        w_tensor_i_7_reg_14416 <= {{wgt_mem_0_V_Dout_A[455:448]}};
        w_tensor_i_7_s_reg_14441 <= {{wgt_mem_1_V_Dout_A[471:464]}};
        w_tensor_i_8_11_reg_14486 <= {{wgt_mem_1_V_Dout_A[551:544]}};
        w_tensor_i_8_13_reg_14491 <= {{wgt_mem_1_V_Dout_A[567:560]}};
        w_tensor_i_8_2_reg_14461 <= {{wgt_mem_0_V_Dout_A[535:528]}};
        w_tensor_i_8_4_reg_14466 <= {{wgt_mem_0_V_Dout_A[551:544]}};
        w_tensor_i_8_6_reg_14471 <= {{wgt_mem_0_V_Dout_A[567:560]}};
        w_tensor_i_8_8_reg_14476 <= {{wgt_mem_1_V_Dout_A[519:512]}};
        w_tensor_i_8_reg_14456 <= {{wgt_mem_0_V_Dout_A[519:512]}};
        w_tensor_i_8_s_reg_14481 <= {{wgt_mem_1_V_Dout_A[535:528]}};
        w_tensor_i_9_11_reg_14526 <= {{wgt_mem_1_V_Dout_A[615:608]}};
        w_tensor_i_9_13_reg_14531 <= {{wgt_mem_1_V_Dout_A[631:624]}};
        w_tensor_i_9_2_reg_14501 <= {{wgt_mem_0_V_Dout_A[599:592]}};
        w_tensor_i_9_4_reg_14506 <= {{wgt_mem_0_V_Dout_A[615:608]}};
        w_tensor_i_9_6_reg_14511 <= {{wgt_mem_0_V_Dout_A[631:624]}};
        w_tensor_i_9_8_reg_14516 <= {{wgt_mem_1_V_Dout_A[583:576]}};
        w_tensor_i_9_reg_14496 <= {{wgt_mem_0_V_Dout_A[583:576]}};
        w_tensor_i_9_s_reg_14521 <= {{wgt_mem_1_V_Dout_A[599:592]}};
        w_tensor_i_s_reg_14536 <= {{wgt_mem_0_V_Dout_A[647:640]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln253_reg_14044 <= icmp_ln253_fu_4548_p2;
        icmp_ln253_reg_14044_pp1_iter1_reg <= icmp_ln253_reg_14044;
        select_ln259_1_reg_14079_pp1_iter1_reg <= select_ln259_1_reg_14079;
        select_ln259_2_reg_14085_pp1_iter1_reg <= select_ln259_2_reg_14085;
        select_ln259_reg_14073_pp1_iter1_reg <= select_ln259_reg_14073;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln502_fu_1636_p2 == 1'd1) & (icmp_ln473_fu_1630_p2 == 1'd0) & (icmp_ln470_fu_1624_p2 == 1'd0))) begin
        icmp_ln262_reg_13069 <= icmp_ln262_fu_1718_p2;
        sub_ln253_reg_13064 <= sub_ln253_fu_1712_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln343_reg_13345 <= icmp_ln343_fu_1906_p2;
        icmp_ln343_reg_13345_pp0_iter1_reg <= icmp_ln343_reg_13345;
        icmp_ln343_reg_13345_pp0_iter2_reg <= icmp_ln343_reg_13345_pp0_iter1_reg;
        icmp_ln343_reg_13345_pp0_iter3_reg <= icmp_ln343_reg_13345_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln504_fu_1642_p2 == 1'd1) & (icmp_ln502_fu_1636_p2 == 1'd0) & (icmp_ln473_fu_1630_p2 == 1'd0) & (icmp_ln470_fu_1624_p2 == 1'd0))) begin
        icmp_ln350_reg_13059 <= icmp_ln350_fu_1680_p2;
        sub_ln343_reg_13054 <= sub_ln343_fu_1674_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln482_fu_11400_p2 == 1'd0))) begin
        icmp_ln487_reg_15976 <= icmp_ln487_fu_11406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln67_reg_16046 <= icmp_ln67_fu_11510_p2;
        icmp_ln67_reg_16046_pp2_iter1_reg <= icmp_ln67_reg_16046;
        lshr_ln2_reg_16055_pp2_iter1_reg <= lshr_ln2_reg_16055;
        trunc_ln67_1_reg_16060_pp2_iter1_reg <= trunc_ln67_1_reg_16060;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln67_reg_16046_pp2_iter2_reg <= icmp_ln67_reg_16046_pp2_iter1_reg;
        lshr_ln2_reg_16055_pp2_iter2_reg <= lshr_ln2_reg_16055_pp2_iter1_reg;
        trunc_ln67_1_reg_16060_pp2_iter2_reg <= trunc_ln67_1_reg_16060_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln67_fu_11510_p2 == 1'd0))) begin
        lshr_ln2_reg_16055 <= {{add_ln67_1_fu_11525_p2[15:3]}};
        trunc_ln67_1_reg_16060 <= trunc_ln67_1_fu_11540_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        mul_ln240_1_reg_14039 <= grp_fu_4485_p2;
        tmp_10_reg_13989 <= tmp_V_reg_12909[32'd7];
        zext_ln262_1_reg_13984[13 : 0] <= zext_ln262_1_fu_4495_p1[13 : 0];
        zext_ln262_reg_13977[12 : 0] <= zext_ln262_fu_4491_p1[12 : 0];
        zext_ln700_2_reg_14009[10 : 0] <= zext_ln700_2_fu_4506_p1[10 : 0];
        zext_ln700_3_reg_14014[10 : 0] <= zext_ln700_3_fu_4510_p1[10 : 0];
        zext_ln700_4_reg_14024[10 : 0] <= zext_ln700_4_fu_4527_p1[10 : 0];
        zext_ln700_5_reg_14029[10 : 0] <= zext_ln700_5_fu_4531_p1[10 : 0];
        zext_ln700_6_reg_14034[9 : 0] <= zext_ln700_6_fu_4544_p1[9 : 0];
        zext_ln700_reg_14019[9 : 0] <= zext_ln700_fu_4523_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        mul_ln240_reg_13961 <= grp_fu_4472_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln331_reg_13108 <= grp_fu_1789_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln343_reg_13345_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        o_tensor_0_0_V_fu_824 <= o_tensor_0_0_V_10_fu_2356_p3;
        o_tensor_0_1_V_fu_828 <= o_tensor_0_1_V_10_fu_2488_p3;
        o_tensor_0_2_V_fu_832 <= o_tensor_0_2_V_10_fu_2620_p3;
        o_tensor_0_3_V_fu_836 <= o_tensor_0_3_V_10_fu_2752_p3;
        o_tensor_0_4_V_fu_840 <= o_tensor_0_4_V_10_fu_2884_p3;
        o_tensor_0_5_V_fu_844 <= o_tensor_0_5_V_9_fu_3016_p3;
        o_tensor_0_6_V_fu_848 <= o_tensor_0_6_V_9_fu_3148_p3;
        o_tensor_0_7_V_fu_852 <= o_tensor_0_7_V_9_fu_3280_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln343_reg_13345_pp0_iter2_reg == 1'd0))) begin
        o_tensor_0_10_V_fu_864 <= o_tensor_0_10_V_9_fu_3794_p3;
        o_tensor_0_11_V_fu_868 <= o_tensor_0_11_V_9_fu_3904_p3;
        o_tensor_0_12_V_fu_872 <= o_tensor_0_12_V_9_fu_4014_p3;
        o_tensor_0_13_V_fu_876 <= o_tensor_0_13_V_9_fu_4124_p3;
        o_tensor_0_14_V_fu_880 <= o_tensor_0_14_V_9_fu_4234_p3;
        o_tensor_0_15_V_fu_884 <= o_tensor_0_15_V_9_fu_4344_p3;
        o_tensor_0_8_V_fu_856 <= o_tensor_0_8_V_9_fu_3574_p3;
        o_tensor_0_9_V_fu_860 <= o_tensor_0_9_V_9_fu_3684_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln343_reg_13345_pp0_iter1_reg == 1'd0) & (tmp_12_reg_13136 == 1'd0))) begin
        p_Result_11_0_1_reg_13428 <= {{acc_mem_V_q0[63:32]}};
        p_Result_11_1_1_reg_13438 <= {{acc_mem_V_q0[127:96]}};
        p_Result_11_1_reg_13433 <= {{acc_mem_V_q0[95:64]}};
        p_Result_11_2_1_reg_13448 <= {{acc_mem_V_q0[191:160]}};
        p_Result_11_2_reg_13443 <= {{acc_mem_V_q0[159:128]}};
        p_Result_11_3_1_reg_13458 <= {{acc_mem_V_q0[255:224]}};
        p_Result_11_3_reg_13453 <= {{acc_mem_V_q0[223:192]}};
        p_Result_11_4_1_reg_13468 <= {{acc_mem_V_q0[319:288]}};
        p_Result_11_4_reg_13463 <= {{acc_mem_V_q0[287:256]}};
        p_Result_11_5_1_reg_13478 <= {{acc_mem_V_q0[383:352]}};
        p_Result_11_5_reg_13473 <= {{acc_mem_V_q0[351:320]}};
        p_Result_11_6_1_reg_13488 <= {{acc_mem_V_q0[447:416]}};
        p_Result_11_6_reg_13483 <= {{acc_mem_V_q0[415:384]}};
        p_Result_11_7_1_reg_13498 <= {{acc_mem_V_q0[511:480]}};
        p_Result_11_7_reg_13493 <= {{acc_mem_V_q0[479:448]}};
        trunc_ln647_22_reg_13423 <= trunc_ln647_22_fu_2069_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1))) begin
        p_cast37_reg_12899[28 : 0] <= p_cast37_fu_1586_p1[28 : 0];
        p_cast_reg_12904[29 : 0] <= p_cast_fu_1600_p1[29 : 0];
        tmp_V_reg_12909 <= gemm_queue_V_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln502_fu_1636_p2 == 1'd1) & (icmp_ln473_fu_1630_p2 == 1'd0) & (icmp_ln470_fu_1624_p2 == 1'd0)) | (~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln504_fu_1642_p2 == 1'd1) & (icmp_ln502_fu_1636_p2 == 1'd0) & (icmp_ln473_fu_1630_p2 == 1'd0) & (icmp_ln470_fu_1624_p2 == 1'd0)))) begin
        reg_1568 <= {{gemm_queue_V_V_0_data_out[20:8]}};
        reg_1572 <= {{gemm_queue_V_V_0_data_out[34:21]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_fu_4548_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln259_1_reg_14079 <= select_ln259_1_fu_4676_p3;
        select_ln259_2_reg_14085 <= select_ln259_2_fu_4684_p3;
        select_ln259_reg_14073 <= select_ln259_fu_4668_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_fu_4548_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln262_reg_14068 <= select_ln262_fu_4661_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln343_fu_1906_p2 == 1'd0))) begin
        select_ln343_1_reg_13359 <= select_ln343_1_fu_1975_p3;
        select_ln343_reg_13354 <= select_ln343_fu_1967_p3;
        select_ln348_1_reg_13376 <= select_ln348_1_fu_2008_p3;
        select_ln348_2_reg_13382 <= select_ln348_2_fu_2022_p3;
        select_ln348_reg_13370 <= select_ln348_fu_2000_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln343_fu_1906_p2 == 1'd0))) begin
        select_ln350_reg_13364 <= select_ln350_fu_1993_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        shl_ln67_reg_16041[15 : 3] <= shl_ln67_fu_11505_p2[15 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_reset_mem_fu_1325_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
        shl_ln_reg_16006[18 : 3] <= shl_ln_fu_11456_p3[18 : 3];
        trunc_ln304_1_reg_15986 <= {{tmp_V_reg_12909[79:64]}};
        zext_ln209_1_reg_15996[3 : 0] <= zext_ln209_1_fu_11449_p1[3 : 0];
        zext_ln67_reg_16011[18 : 3] <= zext_ln67_fu_11463_p1[18 : 3];
        zext_ln700_1_reg_16001[15 : 0] <= zext_ln700_1_fu_11452_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_reset_mem_fu_1325_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state50)) | ((grp_reset_mem_fu_1325_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36)))) begin
        sram_idx_V_assign_0_reg_1272 <= grp_reset_mem_fu_1325_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_port_ARREADY == 1'b0) | (grp_reset_mem_fu_1325_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state38))) begin
        sram_idx_V_assign_2_reg_16029 <= grp_reset_mem_fu_1325_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state62_io) & (1'b1 == ap_CS_fsm_state62))) begin
        tmp_35_reg_16138 <= tmp_V_reg_12909[32'd5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state64_io) & (1'b1 == ap_CS_fsm_state64))) begin
        tmp_36_reg_16142 <= tmp_V_reg_12909[32'd6];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln473_fu_1630_p2 == 1'd1) & (icmp_ln470_fu_1624_p2 == 1'd0))) begin
        trunc_ln3_reg_13074 <= {{gemm_queue_V_V_0_data_out[123:120]}};
        trunc_ln478_1_reg_13079 <= {{gemm_queue_V_V_0_data_out[95:80]}};
        trunc_ln478_2_reg_13087 <= {{gemm_queue_V_V_0_data_out[127:124]}};
        x_width_V_reg_13092 <= x_width_V_fu_1772_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        trunc_ln6_reg_16114 <= {{tmp_V_reg_12909[24:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln485_reg_16119 == 1'd0))) begin
        uop_port_addr_read_reg_16133 <= uop_port_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln482_fu_11400_p2 == 1'd1))) begin
        uop_port_addr_reg_15980 <= zext_ln485_2_fu_11421_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln343_reg_13345 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        upc_3_reg_13392 <= upc_3_fu_2034_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        y_reg_16019 <= y_fu_11472_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter7 == 1'b1))) begin
        acc_mem_V_address0 = acc_mem_V_addr_1_reg_15461_pp1_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc_mem_V_address0 = acc_mem_V_addr_3_reg_13417_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        acc_mem_V_address0 = zext_ln544_3_fu_2061_p1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state51) & (icmp_ln487_reg_15976 == 1'd1)))) begin
        acc_mem_V_address0 = grp_reset_mem_fu_1325_mem_V_address0;
    end else begin
        acc_mem_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        acc_mem_V_address1 = zext_ln67_1_fu_11664_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        acc_mem_V_address1 = zext_ln544_2_fu_8780_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        acc_mem_V_address1 = zext_ln544_4_fu_2065_p1;
    end else begin
        acc_mem_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        acc_mem_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state51) & (icmp_ln487_reg_15976 == 1'd1)))) begin
        acc_mem_V_ce0 = grp_reset_mem_fu_1325_mem_V_ce0;
    end else begin
        acc_mem_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        acc_mem_V_ce1 = 1'b1;
    end else begin
        acc_mem_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter7 == 1'b1))) begin
        acc_mem_V_d0 = tmp_9_fu_11292_p17;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc_mem_V_d0 = tmp_14_fu_4440_p17;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state51) & (icmp_ln487_reg_15976 == 1'd1)))) begin
        acc_mem_V_d0 = grp_reset_mem_fu_1325_mem_V_d0;
    end else begin
        acc_mem_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln343_reg_13345_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp1_iter7 == 1'b1) & (icmp_ln253_reg_14044_pp1_iter6_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        acc_mem_V_we0 = 64'd18446744073709551615;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state51) & (icmp_ln487_reg_15976 == 1'd1)))) begin
        acc_mem_V_we0 = grp_reset_mem_fu_1325_mem_V_we0;
    end else begin
        acc_mem_V_we0 = 64'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln67_reg_16046_pp2_iter2_reg == 1'd0))) begin
        acc_mem_V_we1 = shl_ln67_4_fu_11679_p2;
    end else begin
        acc_mem_V_we1 = 64'd0;
    end
end

always @ (*) begin
    if ((icmp_ln343_fu_1906_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln253_fu_4548_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln67_fu_11510_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state45 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state45 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln485_fu_11709_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state59 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state59 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state65_io) | (g2s_dep_queue_V_1_state == 2'd1) | (g2l_dep_queue_V_1_state == 2'd1) | ((g2s_dep_queue_V_TREADY == 1'b0) & (g2s_dep_queue_V_1_state == 2'd3)) | ((g2l_dep_queue_V_TREADY == 1'b0) & (g2l_dep_queue_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state65))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        ap_phi_mux_dst_offset_in_0_i317_phi_fu_1148_p4 = select_ln348_reg_13370;
    end else begin
        ap_phi_mux_dst_offset_in_0_i317_phi_fu_1148_p4 = dst_offset_in_0_i317_reg_1144;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_reg_14044 == 1'd0))) begin
        ap_phi_mux_dst_offset_in_0_i_phi_fu_1234_p4 = select_ln259_reg_14073;
    end else begin
        ap_phi_mux_dst_offset_in_0_i_phi_fu_1234_p4 = dst_offset_in_0_i_reg_1230;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        ap_phi_mux_dst_offset_in_V_1_phi_fu_1115_p4 = select_ln343_reg_13354;
    end else begin
        ap_phi_mux_dst_offset_in_V_1_phi_fu_1115_p4 = dst_offset_in_V_1_reg_1111;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        ap_phi_mux_indvar_flatten25_phi_fu_1137_p4 = select_ln348_2_reg_13382;
    end else begin
        ap_phi_mux_indvar_flatten25_phi_fu_1137_p4 = indvar_flatten25_reg_1133;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        ap_phi_mux_indvar_flatten71_phi_fu_1104_p4 = add_ln343_reg_13349;
    end else begin
        ap_phi_mux_indvar_flatten71_phi_fu_1104_p4 = indvar_flatten71_reg_1100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        ap_phi_mux_src_offset_in_0_i318_phi_fu_1159_p4 = select_ln348_1_reg_13376;
    end else begin
        ap_phi_mux_src_offset_in_0_i318_phi_fu_1159_p4 = src_offset_in_0_i318_reg_1155;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_reg_14044 == 1'd0))) begin
        ap_phi_mux_src_offset_in_0_i_phi_fu_1245_p4 = select_ln259_1_reg_14079;
    end else begin
        ap_phi_mux_src_offset_in_0_i_phi_fu_1245_p4 = src_offset_in_0_i_reg_1241;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        ap_phi_mux_src_offset_in_V_1_phi_fu_1126_p4 = select_ln343_1_reg_13359;
    end else begin
        ap_phi_mux_src_offset_in_V_1_phi_fu_1126_p4 = src_offset_in_V_1_reg_1122;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln343_reg_13345 == 1'd0))) begin
        ap_phi_mux_upc_0_i322_phi_fu_1169_p4 = upc_3_reg_13392;
    end else begin
        ap_phi_mux_upc_0_i322_phi_fu_1169_p4 = upc_0_i322_reg_1166;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln253_reg_14044 == 1'd0))) begin
        ap_phi_mux_wgt_offset_in_0_i_phi_fu_1256_p4 = select_ln259_2_reg_14085;
    end else begin
        ap_phi_mux_wgt_offset_in_0_i_phi_fu_1256_p4 = wgt_offset_in_0_i_reg_1252;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state65_io) | (g2s_dep_queue_V_1_state == 2'd1) | (g2l_dep_queue_V_1_state == 2'd1) | ((g2s_dep_queue_V_TREADY == 1'b0) & (g2s_dep_queue_V_1_state == 2'd3)) | ((g2l_dep_queue_V_TREADY == 1'b0) & (g2l_dep_queue_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state65))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((data_port_ARREADY == 1'b0) | (grp_reset_mem_fu_1325_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state38))) begin
        data_port_ARVALID = 1'b1;
    end else begin
        data_port_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln67_reg_16046 == 1'd0))) begin
        data_port_RREADY = 1'b1;
    end else begin
        data_port_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        data_port_blk_n_AR = m_axi_data_port_ARREADY;
    end else begin
        data_port_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln67_reg_16046 == 1'd0))) begin
        data_port_blk_n_R = m_axi_data_port_RVALID;
    end else begin
        data_port_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        done_o = 32'd1;
    end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1))) begin
        done_o = 32'd0;
    end else begin
        done_o = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1)))) begin
        done_o_ap_vld = 1'b1;
    end else begin
        done_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state62_io) & (1'b1 == ap_CS_fsm_state62) & (tmp_35_fu_11733_p3 == 1'd1))) begin
        g2l_dep_queue_V_1_vld_in = 1'b1;
    end else begin
        g2l_dep_queue_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state64) & (tmp_35_reg_16138 == 1'd1)) | ((1'b1 == ap_CS_fsm_state62) & (tmp_35_fu_11733_p3 == 1'd1)))) begin
        g2l_dep_queue_V_TDATA_blk_n = g2l_dep_queue_V_1_state[1'd1];
    end else begin
        g2l_dep_queue_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state64_io) & (1'b1 == ap_CS_fsm_state64) & (tmp_36_fu_11740_p3 == 1'd1))) begin
        g2s_dep_queue_V_1_vld_in = 1'b1;
    end else begin
        g2s_dep_queue_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state65) & (tmp_36_reg_16142 == 1'd1)) | ((1'b1 == ap_CS_fsm_state64) & (tmp_36_fu_11740_p3 == 1'd1)))) begin
        g2s_dep_queue_V_TDATA_blk_n = g2s_dep_queue_V_1_state[1'd1];
    end else begin
        g2s_dep_queue_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1))) begin
        gemm_queue_V_V_0_ack_out = 1'b1;
    end else begin
        gemm_queue_V_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((gemm_queue_V_V_0_sel == 1'b1)) begin
        gemm_queue_V_V_0_data_out = gemm_queue_V_V_0_payload_B;
    end else begin
        gemm_queue_V_V_0_data_out = gemm_queue_V_V_0_payload_A;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        gemm_queue_V_V_TDATA_blk_n = gemm_queue_V_V_0_state[1'd0];
    end else begin
        gemm_queue_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_reset_mem_fu_1325_range_V = zext_ln478_1_reg_15957;
    end else if (((1'b1 == ap_CS_fsm_state51) & (icmp_ln487_reg_15976 == 1'd1))) begin
        grp_reset_mem_fu_1325_range_V = y_offset_1_V_reg_15967;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_reset_mem_fu_1325_range_V = zext_ln209_1_reg_15996;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_reset_mem_fu_1325_range_V = y_offset_0_V_reg_15962;
    end else begin
        grp_reset_mem_fu_1325_range_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_reset_mem_fu_1325_sram_idx_V_read = add_ln700_266_reg_16094;
    end else if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state51) & (icmp_ln487_reg_15976 == 1'd1)))) begin
        grp_reset_mem_fu_1325_sram_idx_V_read = sram_idx_V_assign_0_reg_1272;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_reset_mem_fu_1325_sram_idx_V_read = sram_idx_V_reg_15947;
    end else begin
        grp_reset_mem_fu_1325_sram_idx_V_read = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        inp_mem_V_EN_A = 1'b1;
    end else begin
        inp_mem_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (tmp_4_fu_1604_p3 == 1'd1))) begin
        l2g_dep_queue_V_0_ack_out = 1'b1;
    end else begin
        l2g_dep_queue_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_4_fu_1604_p3 == 1'd1))) begin
        l2g_dep_queue_V_TDATA_blk_n = l2g_dep_queue_V_0_state[1'd0];
    end else begin
        l2g_dep_queue_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter7 == 1'b1))) begin
        out_mem_V_Addr_A_orig = zext_ln544_2_reg_15456_pp1_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_mem_V_Addr_A_orig = zext_ln544_4_reg_13412_pp0_iter2_reg;
    end else begin
        out_mem_V_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter7 == 1'b1))) begin
        out_mem_V_Din_A = tmp_11_fu_11313_p17;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_mem_V_Din_A = tmp_15_fu_4371_p17;
    end else begin
        out_mem_V_Din_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        out_mem_V_EN_A = 1'b1;
    end else begin
        out_mem_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln343_reg_13345_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp1_iter7 == 1'b1) & (icmp_ln253_reg_14044_pp1_iter6_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        out_mem_V_WEN_A = 16'd65535;
    end else begin
        out_mem_V_WEN_A = 16'd0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (tmp_6_fu_1612_p3 == 1'd1))) begin
        s2g_dep_queue_V_0_ack_out = 1'b1;
    end else begin
        s2g_dep_queue_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_6_fu_1612_p3 == 1'd1))) begin
        s2g_dep_queue_V_TDATA_blk_n = s2g_dep_queue_V_0_state[1'd0];
    end else begin
        s2g_dep_queue_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        uop_mem_V_address0 = zext_ln485_3_fu_11729_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        uop_mem_V_address0 = sext_ln265_fu_4712_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        uop_mem_V_address0 = sext_ln353_fu_2030_p1;
    end else begin
        uop_mem_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        uop_mem_V_ce0 = 1'b1;
    end else begin
        uop_mem_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln485_reg_16119_pp3_iter1_reg == 1'd0))) begin
        uop_mem_V_we0 = 1'b1;
    end else begin
        uop_mem_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((uop_port_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
        uop_port_ARVALID = 1'b1;
    end else begin
        uop_port_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln485_reg_16119 == 1'd0))) begin
        uop_port_RREADY = 1'b1;
    end else begin
        uop_port_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        uop_port_blk_n_AR = m_axi_uop_port_ARREADY;
    end else begin
        uop_port_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln485_reg_16119 == 1'd0))) begin
        uop_port_blk_n_R = m_axi_uop_port_RVALID;
    end else begin
        uop_port_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        wgt_mem_0_V_EN_A = 1'b1;
    end else begin
        wgt_mem_0_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        wgt_mem_1_V_EN_A = 1'b1;
    end else begin
        wgt_mem_1_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln504_fu_1642_p2 == 1'd0) & (icmp_ln502_fu_1636_p2 == 1'd0) & (icmp_ln473_fu_1630_p2 == 1'd0) & (icmp_ln470_fu_1624_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln504_fu_1642_p2 == 1'd1) & (icmp_ln502_fu_1636_p2 == 1'd0) & (icmp_ln473_fu_1630_p2 == 1'd0) & (icmp_ln470_fu_1624_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln502_fu_1636_p2 == 1'd1) & (icmp_ln473_fu_1630_p2 == 1'd0) & (icmp_ln470_fu_1624_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln473_fu_1630_p2 == 1'd1) & (icmp_ln470_fu_1624_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else if ((~((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1))) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln470_fu_1624_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln343_fu_1906_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln343_fu_1906_p2 == 1'd1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln253_fu_4548_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter6 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter7 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter6 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln253_fu_4548_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln487_fu_11406_p2 == 1'd0) & (icmp_ln482_fu_11400_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln487_fu_11406_p2 == 1'd1) & (icmp_ln482_fu_11400_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_reset_mem_fu_1325_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln62_fu_11467_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            if ((~((data_port_ARREADY == 1'b0) | (grp_reset_mem_fu_1325_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln67_fu_11510_p2 == 1'd1)) & ~((ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln67_fu_11510_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((grp_reset_mem_fu_1325_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (1'b0 == ap_block_state51_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((uop_port_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln485_fu_11709_p2 == 1'd1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (icmp_ln485_fu_11709_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((1'b0 == ap_block_state62_io) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state64 : begin
            if (((1'b0 == ap_block_state64_io) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if ((~((1'b1 == ap_block_state65_io) | (g2s_dep_queue_V_1_state == 2'd1) | (g2l_dep_queue_V_1_state == 2'd1) | ((g2s_dep_queue_V_TREADY == 1'b0) & (g2s_dep_queue_V_1_state == 2'd3)) | ((g2l_dep_queue_V_TREADY == 1'b0) & (g2l_dep_queue_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_tensor_0_0_V_1_fu_10396_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_15_fu_10390_p2);

assign a_tensor_0_0_V_fu_10344_p1 = acc_mem_V_q1[31:0];

assign a_tensor_0_11_V_1_fu_11045_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_191_fu_11039_p2);

assign a_tensor_0_12_V_1_fu_11104_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_207_fu_11098_p2);

assign a_tensor_0_13_V_1_fu_11163_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_223_fu_11157_p2);

assign a_tensor_0_14_V_1_fu_11222_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_239_fu_11216_p2);

assign a_tensor_0_15_V_1_fu_11281_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_255_fu_11275_p2);

assign a_tensor_0_1_V_1_fu_10455_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_31_fu_10449_p2);

assign a_tensor_0_2_V_1_fu_10514_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_47_fu_10508_p2);

assign a_tensor_0_3_V_1_fu_10573_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_63_fu_10567_p2);

assign a_tensor_0_4_V_1_fu_10632_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_79_fu_10626_p2);

assign add_ln253_fu_4553_p2 = (indvar_flatten15_reg_1175 + 60'd1);

assign add_ln259_fu_4698_p2 = (46'd1 + indvar_flatten_reg_1219);

assign add_ln301_fu_1762_p2 = (zext_ln478_fu_1734_p1 + zext_ln301_fu_1758_p1);

assign add_ln343_fu_1911_p2 = (ap_phi_mux_indvar_flatten71_phi_fu_1104_p4 + 60'd1);

assign add_ln348_fu_2016_p2 = (46'd1 + ap_phi_mux_indvar_flatten25_phi_fu_1137_p4);

assign add_ln485_1_fu_11416_p2 = (zext_ln485_fu_11412_p1 + p_cast_reg_12904);

assign add_ln485_2_fu_11724_p2 = (trunc_ln485_fu_11720_p1 + trunc_ln6_reg_16114);

assign add_ln485_fu_11714_p2 = (phi_ln485_reg_1314 + 16'd1);

assign add_ln66_fu_11490_p2 = (p_cast37_reg_12899 + zext_ln1352_fu_11486_p1);

assign add_ln67_1_fu_11525_p2 = (shl_ln67_reg_16041 + trunc_ln67_fu_11521_p1);

assign add_ln67_fu_11515_p2 = (phi_ln67_reg_1303 + 19'd1);

assign add_ln700_101_fu_9450_p2 = ($signed(sext_ln700_94_fu_9444_p1) + $signed(sext_ln700_95_fu_9447_p1));

assign add_ln700_102_fu_10708_p2 = ($signed(sext_ln700_93_fu_10702_p1) + $signed(sext_ln700_96_fu_10705_p1));

assign add_ln700_105_fu_9462_p2 = ($signed(sext_ln700_98_fu_9456_p1) + $signed(sext_ln700_99_fu_9459_p1));

assign add_ln700_108_fu_9474_p2 = ($signed(sext_ln700_101_fu_9468_p1) + $signed(sext_ln700_102_fu_9471_p1));

assign add_ln700_109_fu_10724_p2 = ($signed(sext_ln700_100_fu_10718_p1) + $signed(sext_ln700_103_fu_10721_p1));

assign add_ln700_110_fu_10734_p2 = ($signed(sext_ln700_97_fu_10714_p1) + $signed(sext_ln700_104_fu_10730_p1));

assign add_ln700_111_fu_10744_p2 = ($signed(sext_ln68_6_fu_10740_p1) + $signed(grp_fu_1468_p4));

assign add_ln700_114_fu_9534_p2 = ($signed(sext_ln700_106_fu_9528_p1) + $signed(sext_ln700_107_fu_9531_p1));

assign add_ln700_117_fu_9546_p2 = ($signed(sext_ln700_109_fu_9540_p1) + $signed(sext_ln700_110_fu_9543_p1));

assign add_ln700_118_fu_10767_p2 = ($signed(sext_ln700_108_fu_10761_p1) + $signed(sext_ln700_111_fu_10764_p1));

assign add_ln700_121_fu_9558_p2 = ($signed(sext_ln700_113_fu_9552_p1) + $signed(sext_ln700_114_fu_9555_p1));

assign add_ln700_124_fu_9570_p2 = ($signed(sext_ln700_116_fu_9564_p1) + $signed(sext_ln700_117_fu_9567_p1));

assign add_ln700_125_fu_10783_p2 = ($signed(sext_ln700_115_fu_10777_p1) + $signed(sext_ln700_118_fu_10780_p1));

assign add_ln700_126_fu_10793_p2 = ($signed(sext_ln700_112_fu_10773_p1) + $signed(sext_ln700_119_fu_10789_p1));

assign add_ln700_127_fu_10803_p2 = ($signed(sext_ln68_7_fu_10799_p1) + $signed(grp_fu_1478_p4));

assign add_ln700_12_fu_8898_p2 = ($signed(sext_ln700_11_fu_8892_p1) + $signed(sext_ln700_12_fu_8895_p1));

assign add_ln700_130_fu_9630_p2 = ($signed(sext_ln700_121_fu_9624_p1) + $signed(sext_ln700_122_fu_9627_p1));

assign add_ln700_133_fu_9642_p2 = ($signed(sext_ln700_124_fu_9636_p1) + $signed(sext_ln700_125_fu_9639_p1));

assign add_ln700_134_fu_10826_p2 = ($signed(sext_ln700_123_fu_10820_p1) + $signed(sext_ln700_126_fu_10823_p1));

assign add_ln700_137_fu_9654_p2 = ($signed(sext_ln700_128_fu_9648_p1) + $signed(sext_ln700_129_fu_9651_p1));

assign add_ln700_13_fu_10370_p2 = ($signed(sext_ln700_10_fu_10364_p1) + $signed(sext_ln700_13_fu_10367_p1));

assign add_ln700_140_fu_9666_p2 = ($signed(sext_ln700_131_fu_9660_p1) + $signed(sext_ln700_132_fu_9663_p1));

assign add_ln700_141_fu_10842_p2 = ($signed(sext_ln700_130_fu_10836_p1) + $signed(sext_ln700_133_fu_10839_p1));

assign add_ln700_142_fu_10852_p2 = ($signed(sext_ln700_127_fu_10832_p1) + $signed(sext_ln700_134_fu_10848_p1));

assign add_ln700_143_fu_10862_p2 = ($signed(sext_ln68_8_fu_10858_p1) + $signed(grp_fu_1488_p4));

assign add_ln700_146_fu_9726_p2 = ($signed(sext_ln700_136_fu_9720_p1) + $signed(sext_ln700_137_fu_9723_p1));

assign add_ln700_149_fu_9738_p2 = ($signed(sext_ln700_139_fu_9732_p1) + $signed(sext_ln700_140_fu_9735_p1));

assign add_ln700_14_fu_10380_p2 = ($signed(sext_ln700_7_fu_10360_p1) + $signed(sext_ln700_14_fu_10376_p1));

assign add_ln700_150_fu_10885_p2 = ($signed(sext_ln700_138_fu_10879_p1) + $signed(sext_ln700_141_fu_10882_p1));

assign add_ln700_153_fu_9750_p2 = ($signed(sext_ln700_143_fu_9744_p1) + $signed(sext_ln700_144_fu_9747_p1));

assign add_ln700_156_fu_9762_p2 = ($signed(sext_ln700_146_fu_9756_p1) + $signed(sext_ln700_147_fu_9759_p1));

assign add_ln700_157_fu_10901_p2 = ($signed(sext_ln700_145_fu_10895_p1) + $signed(sext_ln700_148_fu_10898_p1));

assign add_ln700_158_fu_10911_p2 = ($signed(sext_ln700_142_fu_10891_p1) + $signed(sext_ln700_149_fu_10907_p1));

assign add_ln700_159_fu_10921_p2 = ($signed(sext_ln68_9_fu_10917_p1) + $signed(grp_fu_1498_p4));

assign add_ln700_15_fu_10390_p2 = ($signed(sext_ln68_fu_10386_p1) + $signed(a_tensor_0_0_V_fu_10344_p1));

assign add_ln700_162_fu_9822_p2 = ($signed(sext_ln700_151_fu_9816_p1) + $signed(sext_ln700_152_fu_9819_p1));

assign add_ln700_165_fu_9834_p2 = ($signed(sext_ln700_154_fu_9828_p1) + $signed(sext_ln700_155_fu_9831_p1));

assign add_ln700_166_fu_10944_p2 = ($signed(sext_ln700_153_fu_10938_p1) + $signed(sext_ln700_156_fu_10941_p1));

assign add_ln700_169_fu_9846_p2 = ($signed(sext_ln700_158_fu_9840_p1) + $signed(sext_ln700_159_fu_9843_p1));

assign add_ln700_172_fu_9858_p2 = ($signed(sext_ln700_161_fu_9852_p1) + $signed(sext_ln700_162_fu_9855_p1));

assign add_ln700_173_fu_10960_p2 = ($signed(sext_ln700_160_fu_10954_p1) + $signed(sext_ln700_163_fu_10957_p1));

assign add_ln700_174_fu_10970_p2 = ($signed(sext_ln700_157_fu_10950_p1) + $signed(sext_ln700_164_fu_10966_p1));

assign add_ln700_175_fu_10980_p2 = ($signed(sext_ln68_10_fu_10976_p1) + $signed(grp_fu_1508_p4));

assign add_ln700_178_fu_9918_p2 = ($signed(sext_ln700_166_fu_9912_p1) + $signed(sext_ln700_167_fu_9915_p1));

assign add_ln700_181_fu_9930_p2 = ($signed(sext_ln700_169_fu_9924_p1) + $signed(sext_ln700_170_fu_9927_p1));

assign add_ln700_182_fu_11003_p2 = ($signed(sext_ln700_168_fu_10997_p1) + $signed(sext_ln700_171_fu_11000_p1));

assign add_ln700_185_fu_9942_p2 = ($signed(sext_ln700_173_fu_9936_p1) + $signed(sext_ln700_174_fu_9939_p1));

assign add_ln700_188_fu_9954_p2 = ($signed(sext_ln700_176_fu_9948_p1) + $signed(sext_ln700_177_fu_9951_p1));

assign add_ln700_189_fu_11019_p2 = ($signed(sext_ln700_175_fu_11013_p1) + $signed(sext_ln700_178_fu_11016_p1));

assign add_ln700_18_fu_8958_p2 = ($signed(sext_ln700_16_fu_8952_p1) + $signed(sext_ln700_17_fu_8955_p1));

assign add_ln700_190_fu_11029_p2 = ($signed(sext_ln700_172_fu_11009_p1) + $signed(sext_ln700_179_fu_11025_p1));

assign add_ln700_191_fu_11039_p2 = ($signed(sext_ln68_11_fu_11035_p1) + $signed(grp_fu_1518_p4));

assign add_ln700_194_fu_10014_p2 = ($signed(sext_ln700_181_fu_10008_p1) + $signed(sext_ln700_182_fu_10011_p1));

assign add_ln700_197_fu_10026_p2 = ($signed(sext_ln700_184_fu_10020_p1) + $signed(sext_ln700_185_fu_10023_p1));

assign add_ln700_198_fu_11062_p2 = ($signed(sext_ln700_183_fu_11056_p1) + $signed(sext_ln700_186_fu_11059_p1));

assign add_ln700_201_fu_10038_p2 = ($signed(sext_ln700_188_fu_10032_p1) + $signed(sext_ln700_189_fu_10035_p1));

assign add_ln700_204_fu_10050_p2 = ($signed(sext_ln700_191_fu_10044_p1) + $signed(sext_ln700_192_fu_10047_p1));

assign add_ln700_205_fu_11078_p2 = ($signed(sext_ln700_190_fu_11072_p1) + $signed(sext_ln700_193_fu_11075_p1));

assign add_ln700_206_fu_11088_p2 = ($signed(sext_ln700_187_fu_11068_p1) + $signed(sext_ln700_194_fu_11084_p1));

assign add_ln700_207_fu_11098_p2 = ($signed(sext_ln68_12_fu_11094_p1) + $signed(grp_fu_1528_p4));

assign add_ln700_210_fu_10110_p2 = ($signed(sext_ln700_196_fu_10104_p1) + $signed(sext_ln700_197_fu_10107_p1));

assign add_ln700_213_fu_10122_p2 = ($signed(sext_ln700_199_fu_10116_p1) + $signed(sext_ln700_200_fu_10119_p1));

assign add_ln700_214_fu_11121_p2 = ($signed(sext_ln700_198_fu_11115_p1) + $signed(sext_ln700_201_fu_11118_p1));

assign add_ln700_217_fu_10134_p2 = ($signed(sext_ln700_203_fu_10128_p1) + $signed(sext_ln700_204_fu_10131_p1));

assign add_ln700_21_fu_8970_p2 = ($signed(sext_ln700_19_fu_8964_p1) + $signed(sext_ln700_20_fu_8967_p1));

assign add_ln700_220_fu_10146_p2 = ($signed(sext_ln700_206_fu_10140_p1) + $signed(sext_ln700_207_fu_10143_p1));

assign add_ln700_221_fu_11137_p2 = ($signed(sext_ln700_205_fu_11131_p1) + $signed(sext_ln700_208_fu_11134_p1));

assign add_ln700_222_fu_11147_p2 = ($signed(sext_ln700_202_fu_11127_p1) + $signed(sext_ln700_209_fu_11143_p1));

assign add_ln700_223_fu_11157_p2 = ($signed(sext_ln68_13_fu_11153_p1) + $signed(grp_fu_1538_p4));

assign add_ln700_226_fu_10206_p2 = ($signed(sext_ln700_211_fu_10200_p1) + $signed(sext_ln700_212_fu_10203_p1));

assign add_ln700_229_fu_10218_p2 = ($signed(sext_ln700_214_fu_10212_p1) + $signed(sext_ln700_215_fu_10215_p1));

assign add_ln700_22_fu_10413_p2 = ($signed(sext_ln700_18_fu_10407_p1) + $signed(sext_ln700_21_fu_10410_p1));

assign add_ln700_230_fu_11180_p2 = ($signed(sext_ln700_213_fu_11174_p1) + $signed(sext_ln700_216_fu_11177_p1));

assign add_ln700_233_fu_10230_p2 = ($signed(sext_ln700_218_fu_10224_p1) + $signed(sext_ln700_219_fu_10227_p1));

assign add_ln700_236_fu_10242_p2 = ($signed(sext_ln700_221_fu_10236_p1) + $signed(sext_ln700_222_fu_10239_p1));

assign add_ln700_237_fu_11196_p2 = ($signed(sext_ln700_220_fu_11190_p1) + $signed(sext_ln700_223_fu_11193_p1));

assign add_ln700_238_fu_11206_p2 = ($signed(sext_ln700_217_fu_11186_p1) + $signed(sext_ln700_224_fu_11202_p1));

assign add_ln700_239_fu_11216_p2 = ($signed(sext_ln68_14_fu_11212_p1) + $signed(grp_fu_1548_p4));

assign add_ln700_242_fu_10302_p2 = ($signed(sext_ln700_226_fu_10296_p1) + $signed(sext_ln700_227_fu_10299_p1));

assign add_ln700_245_fu_10314_p2 = ($signed(sext_ln700_229_fu_10308_p1) + $signed(sext_ln700_230_fu_10311_p1));

assign add_ln700_246_fu_11239_p2 = ($signed(sext_ln700_228_fu_11233_p1) + $signed(sext_ln700_231_fu_11236_p1));

assign add_ln700_249_fu_10326_p2 = ($signed(sext_ln700_233_fu_10320_p1) + $signed(sext_ln700_234_fu_10323_p1));

assign add_ln700_252_fu_10338_p2 = ($signed(sext_ln700_236_fu_10332_p1) + $signed(sext_ln700_237_fu_10335_p1));

assign add_ln700_253_fu_11255_p2 = ($signed(sext_ln700_235_fu_11249_p1) + $signed(sext_ln700_238_fu_11252_p1));

assign add_ln700_254_fu_11265_p2 = ($signed(sext_ln700_232_fu_11245_p1) + $signed(sext_ln700_239_fu_11261_p1));

assign add_ln700_255_fu_11275_p2 = ($signed(sext_ln68_15_fu_11271_p1) + $signed(grp_fu_1558_p4));

assign add_ln700_256_fu_4559_p2 = (dst_offset_in_V_reg_1186 + zext_ln700_4_reg_14024);

assign add_ln700_257_fu_4577_p2 = (src_offset_in_V_reg_1197 + zext_ln700_5_reg_14029);

assign add_ln700_258_fu_4590_p2 = (wgt_offset_in_V_reg_1208 + zext_ln700_6_reg_14034);

assign add_ln700_25_fu_8982_p2 = ($signed(sext_ln700_23_fu_8976_p1) + $signed(sext_ln700_24_fu_8979_p1));

assign add_ln700_262_fu_1917_p2 = (ap_phi_mux_dst_offset_in_V_1_phi_fu_1115_p4 + zext_ln700_9_reg_13258);

assign add_ln700_263_fu_1935_p2 = (ap_phi_mux_src_offset_in_V_1_phi_fu_1126_p4 + zext_ln700_10_reg_13263);

assign add_ln700_266_fu_11686_p2 = (sram_idx_V_assign_2_reg_16029 + trunc_ln478_1_reg_13079);

assign add_ln700_267_fu_11691_p2 = (zext_ln700_1_reg_16001 + dram_idx_assign_0_reg_1282);

assign add_ln700_28_fu_8994_p2 = ($signed(sext_ln700_26_fu_8988_p1) + $signed(sext_ln700_27_fu_8991_p1));

assign add_ln700_29_fu_10429_p2 = ($signed(sext_ln700_25_fu_10423_p1) + $signed(sext_ln700_28_fu_10426_p1));

assign add_ln700_2_fu_8862_p2 = ($signed(sext_ln700_1_fu_8856_p1) + $signed(sext_ln700_2_fu_8859_p1));

assign add_ln700_30_fu_10439_p2 = ($signed(sext_ln700_22_fu_10419_p1) + $signed(sext_ln700_29_fu_10435_p1));

assign add_ln700_31_fu_10449_p2 = ($signed(sext_ln68_1_fu_10445_p1) + $signed(grp_fu_1418_p4));

assign add_ln700_34_fu_9054_p2 = ($signed(sext_ln700_31_fu_9048_p1) + $signed(sext_ln700_32_fu_9051_p1));

assign add_ln700_37_fu_9066_p2 = ($signed(sext_ln700_34_fu_9060_p1) + $signed(sext_ln700_35_fu_9063_p1));

assign add_ln700_38_fu_10472_p2 = ($signed(sext_ln700_33_fu_10466_p1) + $signed(sext_ln700_36_fu_10469_p1));

assign add_ln700_41_fu_9078_p2 = ($signed(sext_ln700_38_fu_9072_p1) + $signed(sext_ln700_39_fu_9075_p1));

assign add_ln700_44_fu_9090_p2 = ($signed(sext_ln700_41_fu_9084_p1) + $signed(sext_ln700_42_fu_9087_p1));

assign add_ln700_45_fu_10488_p2 = ($signed(sext_ln700_40_fu_10482_p1) + $signed(sext_ln700_43_fu_10485_p1));

assign add_ln700_46_fu_10498_p2 = ($signed(sext_ln700_37_fu_10478_p1) + $signed(sext_ln700_44_fu_10494_p1));

assign add_ln700_47_fu_10508_p2 = ($signed(sext_ln68_2_fu_10504_p1) + $signed(grp_fu_1428_p4));

assign add_ln700_50_fu_9150_p2 = ($signed(sext_ln700_46_fu_9144_p1) + $signed(sext_ln700_47_fu_9147_p1));

assign add_ln700_53_fu_9162_p2 = ($signed(sext_ln700_49_fu_9156_p1) + $signed(sext_ln700_50_fu_9159_p1));

assign add_ln700_54_fu_10531_p2 = ($signed(sext_ln700_48_fu_10525_p1) + $signed(sext_ln700_51_fu_10528_p1));

assign add_ln700_57_fu_9174_p2 = ($signed(sext_ln700_53_fu_9168_p1) + $signed(sext_ln700_54_fu_9171_p1));

assign add_ln700_5_fu_8874_p2 = ($signed(sext_ln700_4_fu_8868_p1) + $signed(sext_ln700_5_fu_8871_p1));

assign add_ln700_60_fu_9186_p2 = ($signed(sext_ln700_56_fu_9180_p1) + $signed(sext_ln700_57_fu_9183_p1));

assign add_ln700_61_fu_10547_p2 = ($signed(sext_ln700_55_fu_10541_p1) + $signed(sext_ln700_58_fu_10544_p1));

assign add_ln700_62_fu_10557_p2 = ($signed(sext_ln700_52_fu_10537_p1) + $signed(sext_ln700_59_fu_10553_p1));

assign add_ln700_63_fu_10567_p2 = ($signed(sext_ln68_3_fu_10563_p1) + $signed(grp_fu_1438_p4));

assign add_ln700_66_fu_9246_p2 = ($signed(sext_ln700_61_fu_9240_p1) + $signed(sext_ln700_62_fu_9243_p1));

assign add_ln700_69_fu_9258_p2 = ($signed(sext_ln700_64_fu_9252_p1) + $signed(sext_ln700_65_fu_9255_p1));

assign add_ln700_6_fu_10354_p2 = ($signed(sext_ln700_3_fu_10348_p1) + $signed(sext_ln700_6_fu_10351_p1));

assign add_ln700_70_fu_10590_p2 = ($signed(sext_ln700_63_fu_10584_p1) + $signed(sext_ln700_66_fu_10587_p1));

assign add_ln700_73_fu_9270_p2 = ($signed(sext_ln700_68_fu_9264_p1) + $signed(sext_ln700_69_fu_9267_p1));

assign add_ln700_76_fu_9282_p2 = ($signed(sext_ln700_71_fu_9276_p1) + $signed(sext_ln700_72_fu_9279_p1));

assign add_ln700_77_fu_10606_p2 = ($signed(sext_ln700_70_fu_10600_p1) + $signed(sext_ln700_73_fu_10603_p1));

assign add_ln700_78_fu_10616_p2 = ($signed(sext_ln700_67_fu_10596_p1) + $signed(sext_ln700_74_fu_10612_p1));

assign add_ln700_79_fu_10626_p2 = ($signed(sext_ln68_4_fu_10622_p1) + $signed(grp_fu_1448_p4));

assign add_ln700_82_fu_9342_p2 = ($signed(sext_ln700_76_fu_9336_p1) + $signed(sext_ln700_77_fu_9339_p1));

assign add_ln700_85_fu_9354_p2 = ($signed(sext_ln700_79_fu_9348_p1) + $signed(sext_ln700_80_fu_9351_p1));

assign add_ln700_86_fu_10649_p2 = ($signed(sext_ln700_78_fu_10643_p1) + $signed(sext_ln700_81_fu_10646_p1));

assign add_ln700_89_fu_9366_p2 = ($signed(sext_ln700_83_fu_9360_p1) + $signed(sext_ln700_84_fu_9363_p1));

assign add_ln700_92_fu_9378_p2 = ($signed(sext_ln700_86_fu_9372_p1) + $signed(sext_ln700_87_fu_9375_p1));

assign add_ln700_93_fu_10665_p2 = ($signed(sext_ln700_85_fu_10659_p1) + $signed(sext_ln700_88_fu_10662_p1));

assign add_ln700_94_fu_10675_p2 = ($signed(sext_ln700_82_fu_10655_p1) + $signed(sext_ln700_89_fu_10671_p1));

assign add_ln700_95_fu_10685_p2 = ($signed(sext_ln68_5_fu_10681_p1) + $signed(grp_fu_1458_p4));

assign add_ln700_98_fu_9438_p2 = ($signed(sext_ln700_91_fu_9432_p1) + $signed(sext_ln700_92_fu_9435_p1));

assign add_ln700_9_fu_8886_p2 = ($signed(sext_ln700_8_fu_8880_p1) + $signed(sext_ln700_9_fu_8883_p1));

assign and_ln385_fu_1900_p2 = (xor_ln378_fu_1894_p2 & icmp_ln385_fu_1847_p2);

assign and_ln67_1_fu_11658_p2 = (select_ln67_3_fu_11633_p3 & and_ln67_fu_11652_p2);

assign and_ln67_fu_11652_p2 = (shl_ln67_3_fu_11640_p2 & lshr_ln67_fu_11646_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_pp0 = (((1'b1 == ap_block_pp0_stage0_subdone) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm)) | ((1'b1 == ap_block_pp0_stage1_subdone) & (ap_ST_fsm_pp0_stage1 == ap_CS_fsm)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1 = ((1'b1 == ap_block_pp1_stage0_subdone) & (ap_ST_fsm_pp1_stage0 == ap_CS_fsm));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2 = ((1'b1 == ap_block_pp2_stage0_subdone) & (ap_ST_fsm_pp2_stage0 == ap_CS_fsm));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((data_port_RVALID == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln67_reg_16046 == 1'd0));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((data_port_RVALID == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln67_reg_16046 == 1'd0));
end

always @ (*) begin
    ap_block_pp3 = ((1'b1 == ap_block_pp3_stage0_subdone) & (ap_ST_fsm_pp3_stage0 == ap_CS_fsm));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((uop_port_RVALID == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln485_reg_16119 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((uop_port_RVALID == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (icmp_ln485_reg_16119 == 1'd0));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (gemm_queue_V_V_0_vld_out == 1'b0) | ((s2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_6_fu_1612_p3 == 1'd1)) | ((l2g_dep_queue_V_0_vld_out == 1'b0) & (tmp_4_fu_1604_p3 == 1'd1)));
end

assign ap_block_state10_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state46_pp2_stage0_iter1 = ((data_port_RVALID == 1'b0) & (icmp_ln67_reg_16046 == 1'd0));
end

assign ap_block_state47_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state51_on_subcall_done = ((grp_reset_mem_fu_1325_ap_done == 1'b0) & (icmp_ln487_reg_15976 == 1'd1));
end

assign ap_block_state59_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state60_pp3_stage0_iter1 = ((uop_port_RVALID == 1'b0) & (icmp_ln485_reg_16119 == 1'd0));
end

assign ap_block_state61_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state62_io = ((g2l_dep_queue_V_1_ack_in == 1'b0) & (tmp_35_fu_11733_p3 == 1'd1));
end

always @ (*) begin
    ap_block_state64_io = (((g2s_dep_queue_V_1_ack_in == 1'b0) & (tmp_36_fu_11740_p3 == 1'd1)) | ((g2l_dep_queue_V_1_ack_in == 1'b0) & (tmp_35_reg_16138 == 1'd1)));
end

always @ (*) begin
    ap_block_state65 = ((g2s_dep_queue_V_1_state == 2'd1) | (g2l_dep_queue_V_1_state == 2'd1) | ((g2s_dep_queue_V_TREADY == 1'b0) & (g2s_dep_queue_V_1_state == 2'd3)) | ((g2l_dep_queue_V_TREADY == 1'b0) & (g2l_dep_queue_V_1_state == 2'd3)));
end

always @ (*) begin
    ap_block_state65_io = ((g2s_dep_queue_V_1_ack_in == 1'b0) & (tmp_36_reg_16142 == 1'd1));
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_1321 = (icmp_ln253_reg_14044_pp1_iter4_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_2162 = (icmp_ln253_reg_14044_pp1_iter5_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_2393 = (icmp_ln253_reg_14044_pp1_iter6_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_240 = (icmp_ln343_reg_13345_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_243 = (icmp_ln343_reg_13345_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_244 = (icmp_ln343_reg_13345_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_261 = (icmp_ln343_reg_13345_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_687 = (icmp_ln343_reg_13345_pp0_iter3_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_enable_state12_pp0_iter1_stage1 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state13_pp0_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_state17_pp0_iter4_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_enable_state31_pp1_iter5_stage0 = ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_enable_state32_pp1_iter6_stage0 = ((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_enable_state33_pp1_iter7_stage0 = ((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln808_10_fu_3763_p2 = $signed(dst_tensor_0_10_V_reg_13613) >>> zext_ln556_21_fu_3760_p1;

assign ashr_ln808_11_fu_3873_p2 = $signed(dst_tensor_0_11_V_reg_13624) >>> zext_ln556_23_fu_3870_p1;

assign ashr_ln808_12_fu_3983_p2 = $signed(dst_tensor_0_12_V_reg_13635) >>> zext_ln556_25_fu_3980_p1;

assign ashr_ln808_13_fu_4093_p2 = $signed(dst_tensor_0_13_V_reg_13646) >>> zext_ln556_27_fu_4090_p1;

assign ashr_ln808_14_fu_4203_p2 = $signed(dst_tensor_0_14_V_reg_13657) >>> zext_ln556_29_fu_4200_p1;

assign ashr_ln808_15_fu_4313_p2 = $signed(dst_tensor_0_15_V_reg_13668) >>> zext_ln556_31_fu_4310_p1;

assign ashr_ln808_1_fu_2457_p2 = $signed(dst_tensor_0_1_V_reg_13514) >>> zext_ln556_3_fu_2453_p1;

assign ashr_ln808_2_fu_2589_p2 = $signed(dst_tensor_0_2_V_reg_13525) >>> zext_ln556_5_fu_2585_p1;

assign ashr_ln808_3_fu_2721_p2 = $signed(dst_tensor_0_3_V_reg_13536) >>> zext_ln556_7_fu_2717_p1;

assign ashr_ln808_4_fu_2853_p2 = $signed(dst_tensor_0_4_V_reg_13547) >>> zext_ln556_9_fu_2849_p1;

assign ashr_ln808_5_fu_2985_p2 = $signed(dst_tensor_0_5_V_reg_13558) >>> zext_ln556_11_fu_2981_p1;

assign ashr_ln808_6_fu_3117_p2 = $signed(dst_tensor_0_6_V_reg_13569) >>> zext_ln556_13_fu_3113_p1;

assign ashr_ln808_7_fu_3249_p2 = $signed(dst_tensor_0_7_V_reg_13580) >>> zext_ln556_15_fu_3245_p1;

assign ashr_ln808_8_fu_3543_p2 = $signed(dst_tensor_0_8_V_reg_13591) >>> zext_ln556_17_fu_3540_p1;

assign ashr_ln808_9_fu_3653_p2 = $signed(dst_tensor_0_9_V_reg_13602) >>> zext_ln556_19_fu_3650_p1;

assign ashr_ln808_fu_2325_p2 = $signed(dst_tensor_0_0_V_reg_13503) >>> zext_ln556_1_fu_2321_p1;

assign data_port_ARADDR = zext_ln66_fu_11495_p1;

assign dram_idx_V_fu_11343_p4 = {{tmp_V_reg_12909[57:26]}};

assign dst_idx_V_1_fu_2047_p2 = (zext_ln209_5_fu_2043_p1 + select_ln348_reg_13370);

assign dst_idx_V_fu_4724_p2 = (zext_ln209_2_fu_4720_p1 + select_ln259_reg_14073_pp1_iter1_reg);

assign dst_offset_in_V_4_fu_4646_p2 = (select_ln254_fu_4569_p3 + zext_ln700_2_reg_14009);

assign dst_offset_in_V_5_fu_1983_p2 = (select_ln344_fu_1927_p3 + zext_ln700_7_reg_13248);

assign dst_tensor_0_0_V_1_fu_2277_p3 = ((icmp_ln887_fu_2260_p2[0:0] === 1'b1) ? select_ln380_fu_2265_p3 : select_ln380_1_fu_2271_p3);

assign dst_tensor_0_0_V_2_fu_2289_p2 = (dst_tensor_0_0_V_reg_13503 + select_ln375_fu_2251_p3);

assign dst_tensor_0_0_V_3_fu_2330_p3 = ((tmp_17_fu_2298_p3[0:0] === 1'b1) ? shl_ln790_fu_2316_p2 : ashr_ln808_fu_2325_p2);

assign dst_tensor_0_0_V_4_fu_2363_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_0_V_1_fu_2277_p3 : dst_tensor_0_0_V_reg_13503);

assign dst_tensor_0_0_V_5_fu_2369_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_0_V_2_fu_2289_p2 : dst_tensor_0_0_V_4_fu_2363_p3);

assign dst_tensor_0_0_V_6_fu_2376_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_0_V_3_fu_2330_p3 : dst_tensor_0_0_V_5_fu_2369_p3);

assign dst_tensor_0_0_V_fu_2223_p1 = acc_mem_V_q1[31:0];

assign dst_tensor_0_10_V_1_fu_3725_p3 = ((icmp_ln887_10_fu_3711_p2[0:0] === 1'b1) ? select_ln380_30_fu_3715_p3 : select_ln380_31_fu_3720_p3);

assign dst_tensor_0_10_V_2_fu_3737_p2 = (dst_tensor_0_10_V_reg_13613 + src_1_V_10_reg_13797);

assign dst_tensor_0_10_V_3_fu_3768_p3 = ((tmp_27_fu_3745_p3[0:0] === 1'b1) ? shl_ln790_10_fu_3755_p2 : ashr_ln808_10_fu_3763_p2);

assign dst_tensor_0_10_V_4_fu_3801_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_10_V_1_fu_3725_p3 : dst_tensor_0_10_V_reg_13613);

assign dst_tensor_0_10_V_5_fu_3807_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_10_V_2_fu_3737_p2 : dst_tensor_0_10_V_4_fu_3801_p3);

assign dst_tensor_0_10_V_6_fu_3814_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_10_V_3_fu_3768_p3 : dst_tensor_0_10_V_5_fu_3807_p3);

assign dst_tensor_0_11_V_1_fu_3835_p3 = ((icmp_ln887_11_fu_3821_p2[0:0] === 1'b1) ? select_ln380_33_fu_3825_p3 : select_ln380_34_fu_3830_p3);

assign dst_tensor_0_11_V_2_fu_3847_p2 = (dst_tensor_0_11_V_reg_13624 + src_1_V_11_reg_13816);

assign dst_tensor_0_11_V_3_fu_3878_p3 = ((tmp_28_fu_3855_p3[0:0] === 1'b1) ? shl_ln790_11_fu_3865_p2 : ashr_ln808_11_fu_3873_p2);

assign dst_tensor_0_11_V_4_fu_3911_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_11_V_1_fu_3835_p3 : dst_tensor_0_11_V_reg_13624);

assign dst_tensor_0_11_V_5_fu_3917_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_11_V_2_fu_3847_p2 : dst_tensor_0_11_V_4_fu_3911_p3);

assign dst_tensor_0_11_V_6_fu_3924_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_11_V_3_fu_3878_p3 : dst_tensor_0_11_V_5_fu_3917_p3);

assign dst_tensor_0_12_V_1_fu_3945_p3 = ((icmp_ln887_12_fu_3931_p2[0:0] === 1'b1) ? select_ln380_36_fu_3935_p3 : select_ln380_37_fu_3940_p3);

assign dst_tensor_0_12_V_2_fu_3957_p2 = (dst_tensor_0_12_V_reg_13635 + src_1_V_12_reg_13835);

assign dst_tensor_0_12_V_3_fu_3988_p3 = ((tmp_29_fu_3965_p3[0:0] === 1'b1) ? shl_ln790_12_fu_3975_p2 : ashr_ln808_12_fu_3983_p2);

assign dst_tensor_0_12_V_4_fu_4021_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_12_V_1_fu_3945_p3 : dst_tensor_0_12_V_reg_13635);

assign dst_tensor_0_12_V_5_fu_4027_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_12_V_2_fu_3957_p2 : dst_tensor_0_12_V_4_fu_4021_p3);

assign dst_tensor_0_12_V_6_fu_4034_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_12_V_3_fu_3988_p3 : dst_tensor_0_12_V_5_fu_4027_p3);

assign dst_tensor_0_13_V_1_fu_4055_p3 = ((icmp_ln887_13_fu_4041_p2[0:0] === 1'b1) ? select_ln380_39_fu_4045_p3 : select_ln380_40_fu_4050_p3);

assign dst_tensor_0_13_V_2_fu_4067_p2 = (dst_tensor_0_13_V_reg_13646 + src_1_V_13_reg_13854);

assign dst_tensor_0_13_V_3_fu_4098_p3 = ((tmp_30_fu_4075_p3[0:0] === 1'b1) ? shl_ln790_13_fu_4085_p2 : ashr_ln808_13_fu_4093_p2);

assign dst_tensor_0_13_V_4_fu_4131_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_13_V_1_fu_4055_p3 : dst_tensor_0_13_V_reg_13646);

assign dst_tensor_0_13_V_5_fu_4137_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_13_V_2_fu_4067_p2 : dst_tensor_0_13_V_4_fu_4131_p3);

assign dst_tensor_0_13_V_6_fu_4144_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_13_V_3_fu_4098_p3 : dst_tensor_0_13_V_5_fu_4137_p3);

assign dst_tensor_0_14_V_1_fu_4165_p3 = ((icmp_ln887_14_fu_4151_p2[0:0] === 1'b1) ? select_ln380_42_fu_4155_p3 : select_ln380_43_fu_4160_p3);

assign dst_tensor_0_14_V_2_fu_4177_p2 = (dst_tensor_0_14_V_reg_13657 + src_1_V_14_reg_13873);

assign dst_tensor_0_14_V_3_fu_4208_p3 = ((tmp_31_fu_4185_p3[0:0] === 1'b1) ? shl_ln790_14_fu_4195_p2 : ashr_ln808_14_fu_4203_p2);

assign dst_tensor_0_14_V_4_fu_4241_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_14_V_1_fu_4165_p3 : dst_tensor_0_14_V_reg_13657);

assign dst_tensor_0_14_V_5_fu_4247_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_14_V_2_fu_4177_p2 : dst_tensor_0_14_V_4_fu_4241_p3);

assign dst_tensor_0_14_V_6_fu_4254_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_14_V_3_fu_4208_p3 : dst_tensor_0_14_V_5_fu_4247_p3);

assign dst_tensor_0_15_V_1_fu_4275_p3 = ((icmp_ln887_15_fu_4261_p2[0:0] === 1'b1) ? select_ln380_45_fu_4265_p3 : select_ln380_46_fu_4270_p3);

assign dst_tensor_0_15_V_2_fu_4287_p2 = (dst_tensor_0_15_V_reg_13668 + src_1_V_15_reg_13892);

assign dst_tensor_0_15_V_3_fu_4318_p3 = ((tmp_32_fu_4295_p3[0:0] === 1'b1) ? shl_ln790_15_fu_4305_p2 : ashr_ln808_15_fu_4313_p2);

assign dst_tensor_0_15_V_4_fu_4351_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_15_V_1_fu_4275_p3 : dst_tensor_0_15_V_reg_13668);

assign dst_tensor_0_15_V_5_fu_4357_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_15_V_2_fu_4287_p2 : dst_tensor_0_15_V_4_fu_4351_p3);

assign dst_tensor_0_15_V_6_fu_4364_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_15_V_3_fu_4318_p3 : dst_tensor_0_15_V_5_fu_4357_p3);

assign dst_tensor_0_1_V_1_fu_2409_p3 = ((icmp_ln887_1_fu_2392_p2[0:0] === 1'b1) ? select_ln380_3_fu_2397_p3 : select_ln380_4_fu_2403_p3);

assign dst_tensor_0_1_V_2_fu_2421_p2 = (dst_tensor_0_1_V_reg_13514 + src_1_V_1_fu_2383_p3);

assign dst_tensor_0_1_V_3_fu_2462_p3 = ((tmp_18_fu_2430_p3[0:0] === 1'b1) ? shl_ln790_1_fu_2448_p2 : ashr_ln808_1_fu_2457_p2);

assign dst_tensor_0_1_V_4_fu_2495_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_1_V_1_fu_2409_p3 : dst_tensor_0_1_V_reg_13514);

assign dst_tensor_0_1_V_5_fu_2501_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_1_V_2_fu_2421_p2 : dst_tensor_0_1_V_4_fu_2495_p3);

assign dst_tensor_0_1_V_6_fu_2508_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_1_V_3_fu_2462_p3 : dst_tensor_0_1_V_5_fu_2501_p3);

assign dst_tensor_0_2_V_1_fu_2541_p3 = ((icmp_ln887_2_fu_2524_p2[0:0] === 1'b1) ? select_ln380_6_fu_2529_p3 : select_ln380_7_fu_2535_p3);

assign dst_tensor_0_2_V_2_fu_2553_p2 = (dst_tensor_0_2_V_reg_13525 + src_1_V_2_fu_2515_p3);

assign dst_tensor_0_2_V_3_fu_2594_p3 = ((tmp_19_fu_2562_p3[0:0] === 1'b1) ? shl_ln790_2_fu_2580_p2 : ashr_ln808_2_fu_2589_p2);

assign dst_tensor_0_2_V_4_fu_2627_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_2_V_1_fu_2541_p3 : dst_tensor_0_2_V_reg_13525);

assign dst_tensor_0_2_V_5_fu_2633_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_2_V_2_fu_2553_p2 : dst_tensor_0_2_V_4_fu_2627_p3);

assign dst_tensor_0_2_V_6_fu_2640_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_2_V_3_fu_2594_p3 : dst_tensor_0_2_V_5_fu_2633_p3);

assign dst_tensor_0_3_V_1_fu_2673_p3 = ((icmp_ln887_3_fu_2656_p2[0:0] === 1'b1) ? select_ln380_9_fu_2661_p3 : select_ln380_10_fu_2667_p3);

assign dst_tensor_0_3_V_2_fu_2685_p2 = (dst_tensor_0_3_V_reg_13536 + src_1_V_3_fu_2647_p3);

assign dst_tensor_0_3_V_3_fu_2726_p3 = ((tmp_20_fu_2694_p3[0:0] === 1'b1) ? shl_ln790_3_fu_2712_p2 : ashr_ln808_3_fu_2721_p2);

assign dst_tensor_0_3_V_4_fu_2759_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_3_V_1_fu_2673_p3 : dst_tensor_0_3_V_reg_13536);

assign dst_tensor_0_3_V_5_fu_2765_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_3_V_2_fu_2685_p2 : dst_tensor_0_3_V_4_fu_2759_p3);

assign dst_tensor_0_3_V_6_fu_2772_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_3_V_3_fu_2726_p3 : dst_tensor_0_3_V_5_fu_2765_p3);

assign dst_tensor_0_4_V_1_fu_2805_p3 = ((icmp_ln887_4_fu_2788_p2[0:0] === 1'b1) ? select_ln380_12_fu_2793_p3 : select_ln380_13_fu_2799_p3);

assign dst_tensor_0_4_V_2_fu_2817_p2 = (dst_tensor_0_4_V_reg_13547 + src_1_V_4_fu_2779_p3);

assign dst_tensor_0_4_V_3_fu_2858_p3 = ((tmp_21_fu_2826_p3[0:0] === 1'b1) ? shl_ln790_4_fu_2844_p2 : ashr_ln808_4_fu_2853_p2);

assign dst_tensor_0_4_V_4_fu_2891_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_4_V_1_fu_2805_p3 : dst_tensor_0_4_V_reg_13547);

assign dst_tensor_0_4_V_5_fu_2897_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_4_V_2_fu_2817_p2 : dst_tensor_0_4_V_4_fu_2891_p3);

assign dst_tensor_0_4_V_6_fu_2904_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_4_V_3_fu_2858_p3 : dst_tensor_0_4_V_5_fu_2897_p3);

assign dst_tensor_0_5_V_1_fu_2937_p3 = ((icmp_ln887_5_fu_2920_p2[0:0] === 1'b1) ? select_ln380_15_fu_2925_p3 : select_ln380_16_fu_2931_p3);

assign dst_tensor_0_5_V_2_fu_2949_p2 = (dst_tensor_0_5_V_reg_13558 + src_1_V_5_fu_2911_p3);

assign dst_tensor_0_5_V_3_fu_2990_p3 = ((tmp_22_fu_2958_p3[0:0] === 1'b1) ? shl_ln790_5_fu_2976_p2 : ashr_ln808_5_fu_2985_p2);

assign dst_tensor_0_5_V_4_fu_3023_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_5_V_1_fu_2937_p3 : dst_tensor_0_5_V_reg_13558);

assign dst_tensor_0_5_V_5_fu_3029_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_5_V_2_fu_2949_p2 : dst_tensor_0_5_V_4_fu_3023_p3);

assign dst_tensor_0_5_V_6_fu_3036_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_5_V_3_fu_2990_p3 : dst_tensor_0_5_V_5_fu_3029_p3);

assign dst_tensor_0_6_V_1_fu_3069_p3 = ((icmp_ln887_6_fu_3052_p2[0:0] === 1'b1) ? select_ln380_18_fu_3057_p3 : select_ln380_19_fu_3063_p3);

assign dst_tensor_0_6_V_2_fu_3081_p2 = (dst_tensor_0_6_V_reg_13569 + src_1_V_6_fu_3043_p3);

assign dst_tensor_0_6_V_3_fu_3122_p3 = ((tmp_23_fu_3090_p3[0:0] === 1'b1) ? shl_ln790_6_fu_3108_p2 : ashr_ln808_6_fu_3117_p2);

assign dst_tensor_0_6_V_4_fu_3155_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_6_V_1_fu_3069_p3 : dst_tensor_0_6_V_reg_13569);

assign dst_tensor_0_6_V_5_fu_3161_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_6_V_2_fu_3081_p2 : dst_tensor_0_6_V_4_fu_3155_p3);

assign dst_tensor_0_6_V_6_fu_3168_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_6_V_3_fu_3122_p3 : dst_tensor_0_6_V_5_fu_3161_p3);

assign dst_tensor_0_7_V_1_fu_3201_p3 = ((icmp_ln887_7_fu_3184_p2[0:0] === 1'b1) ? select_ln380_21_fu_3189_p3 : select_ln380_22_fu_3195_p3);

assign dst_tensor_0_7_V_2_fu_3213_p2 = (dst_tensor_0_7_V_reg_13580 + src_1_V_7_fu_3175_p3);

assign dst_tensor_0_7_V_3_fu_3254_p3 = ((tmp_24_fu_3222_p3[0:0] === 1'b1) ? shl_ln790_7_fu_3240_p2 : ashr_ln808_7_fu_3249_p2);

assign dst_tensor_0_7_V_4_fu_3287_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_7_V_1_fu_3201_p3 : dst_tensor_0_7_V_reg_13580);

assign dst_tensor_0_7_V_5_fu_3293_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_7_V_2_fu_3213_p2 : dst_tensor_0_7_V_4_fu_3287_p3);

assign dst_tensor_0_7_V_6_fu_3300_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_7_V_3_fu_3254_p3 : dst_tensor_0_7_V_5_fu_3293_p3);

assign dst_tensor_0_8_V_1_fu_3505_p3 = ((icmp_ln887_8_fu_3491_p2[0:0] === 1'b1) ? select_ln380_24_fu_3495_p3 : select_ln380_25_fu_3500_p3);

assign dst_tensor_0_8_V_2_fu_3517_p2 = (dst_tensor_0_8_V_reg_13591 + src_1_V_8_reg_13759);

assign dst_tensor_0_8_V_3_fu_3548_p3 = ((tmp_25_fu_3525_p3[0:0] === 1'b1) ? shl_ln790_8_fu_3535_p2 : ashr_ln808_8_fu_3543_p2);

assign dst_tensor_0_8_V_4_fu_3581_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_8_V_1_fu_3505_p3 : dst_tensor_0_8_V_reg_13591);

assign dst_tensor_0_8_V_5_fu_3587_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_8_V_2_fu_3517_p2 : dst_tensor_0_8_V_4_fu_3581_p3);

assign dst_tensor_0_8_V_6_fu_3594_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_8_V_3_fu_3548_p3 : dst_tensor_0_8_V_5_fu_3587_p3);

assign dst_tensor_0_9_V_1_fu_3615_p3 = ((icmp_ln887_9_fu_3601_p2[0:0] === 1'b1) ? select_ln380_27_fu_3605_p3 : select_ln380_28_fu_3610_p3);

assign dst_tensor_0_9_V_2_fu_3627_p2 = (dst_tensor_0_9_V_reg_13602 + src_1_V_9_reg_13778);

assign dst_tensor_0_9_V_3_fu_3658_p3 = ((tmp_26_fu_3635_p3[0:0] === 1'b1) ? shl_ln790_9_fu_3645_p2 : ashr_ln808_9_fu_3653_p2);

assign dst_tensor_0_9_V_4_fu_3691_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? dst_tensor_0_9_V_1_fu_3615_p3 : dst_tensor_0_9_V_reg_13602);

assign dst_tensor_0_9_V_5_fu_3697_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? dst_tensor_0_9_V_2_fu_3627_p2 : dst_tensor_0_9_V_4_fu_3691_p3);

assign dst_tensor_0_9_V_6_fu_3704_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? dst_tensor_0_9_V_3_fu_3658_p3 : dst_tensor_0_9_V_5_fu_3697_p3);

assign empty_18_fu_11551_p2 = (shl_ln67_2_fu_11544_p3 | 9'd63);

assign empty_20_fu_1694_p2 = ((zext_ln262_3_fu_1690_p1 > grp_fu_1344_p4) ? 1'b1 : 1'b0);

assign empty_22_fu_1656_p2 = ((zext_ln350_3_fu_1652_p1 > grp_fu_1344_p4) ? 1'b1 : 1'b0);

assign g2l_dep_queue_V_1_ack_in = g2l_dep_queue_V_1_state[1'd1];

assign g2l_dep_queue_V_1_ack_out = g2l_dep_queue_V_TREADY;

assign g2l_dep_queue_V_1_data_out = 8'd1;

assign g2l_dep_queue_V_1_sel = g2l_dep_queue_V_1_sel_rd;

assign g2l_dep_queue_V_1_vld_out = g2l_dep_queue_V_1_state[1'd0];

assign g2l_dep_queue_V_TDATA = g2l_dep_queue_V_1_data_out;

assign g2l_dep_queue_V_TVALID = g2l_dep_queue_V_1_state[1'd0];

assign g2s_dep_queue_V_1_ack_in = g2s_dep_queue_V_1_state[1'd1];

assign g2s_dep_queue_V_1_ack_out = g2s_dep_queue_V_TREADY;

assign g2s_dep_queue_V_1_data_out = 8'd1;

assign g2s_dep_queue_V_1_sel = g2s_dep_queue_V_1_sel_rd;

assign g2s_dep_queue_V_1_vld_out = g2s_dep_queue_V_1_state[1'd0];

assign g2s_dep_queue_V_TDATA = g2s_dep_queue_V_1_data_out;

assign g2s_dep_queue_V_TVALID = g2s_dep_queue_V_1_state[1'd0];

assign gemm_queue_V_V_0_ack_in = gemm_queue_V_V_0_state[1'd1];

assign gemm_queue_V_V_0_load_A = (gemm_queue_V_V_0_state_cmp_full & ~gemm_queue_V_V_0_sel_wr);

assign gemm_queue_V_V_0_load_B = (gemm_queue_V_V_0_state_cmp_full & gemm_queue_V_V_0_sel_wr);

assign gemm_queue_V_V_0_sel = gemm_queue_V_V_0_sel_rd;

assign gemm_queue_V_V_0_state_cmp_full = ((gemm_queue_V_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign gemm_queue_V_V_0_vld_in = gemm_queue_V_V_TVALID;

assign gemm_queue_V_V_0_vld_out = gemm_queue_V_V_0_state[1'd0];

assign gemm_queue_V_V_TREADY = gemm_queue_V_V_0_state[1'd1];

assign grp_fu_11747_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_11756_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_11765_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_11774_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_11783_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_11792_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_11801_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_11810_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_11819_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_11828_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_11837_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_11846_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_11855_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_11864_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_11873_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_11882_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_11891_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_11900_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_11909_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_11918_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_11927_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_11936_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_11945_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_11954_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_11963_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_11972_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_11981_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_11990_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_11999_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12008_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12017_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12026_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12035_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12044_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12053_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12062_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12071_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12080_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12089_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12098_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12107_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12116_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12125_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12134_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12143_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12152_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12161_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12170_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12179_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12188_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12197_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12206_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12215_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12224_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12233_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12242_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12251_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12260_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12269_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12278_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12287_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12296_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12305_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12314_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12323_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12332_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12341_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12350_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12359_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12368_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12377_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12386_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12395_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12404_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12413_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12422_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12431_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12440_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12449_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12458_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12467_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12476_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12485_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12494_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12503_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12512_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12521_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12530_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12539_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12548_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12557_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12566_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12575_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12584_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12593_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12602_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12611_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12620_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12629_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12638_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12647_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12656_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12665_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12674_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12683_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12692_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12701_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12710_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12719_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12728_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12737_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12746_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12755_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12764_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12773_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12782_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12791_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12800_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12809_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12818_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_12827_p0 = sext_ln215_fu_8784_p1;

assign grp_fu_12836_p0 = sext_ln215_4_fu_8793_p1;

assign grp_fu_12845_p0 = sext_ln215_8_fu_8802_p1;

assign grp_fu_12854_p0 = sext_ln215_12_fu_8811_p1;

assign grp_fu_12863_p0 = sext_ln215_16_fu_8820_p1;

assign grp_fu_12872_p0 = sext_ln215_20_fu_8829_p1;

assign grp_fu_12881_p0 = sext_ln215_24_fu_8838_p1;

assign grp_fu_12890_p0 = sext_ln215_28_fu_8847_p1;

assign grp_fu_1334_p4 = {{gemm_queue_V_V_0_data_out[20:8]}};

assign grp_fu_1344_p4 = {{gemm_queue_V_V_0_data_out[34:21]}};

assign grp_fu_1354_p4 = {{tmp_V_reg_12909[62:49]}};

assign grp_fu_1363_p4 = {{tmp_V_reg_12909[48:35]}};

assign grp_fu_1372_p4 = {{tmp_V_reg_12909[85:75]}};

assign grp_fu_1381_p4 = {{tmp_V_reg_12909[107:97]}};

assign grp_fu_1390_p4 = {{tmp_V_reg_12909[74:64]}};

assign grp_fu_1399_p4 = {{tmp_V_reg_12909[96:86]}};

assign grp_fu_1408_p4 = {{uop_mem_V_q0[21:11]}};

assign grp_fu_1418_p4 = {{acc_mem_V_q1[63:32]}};

assign grp_fu_1428_p4 = {{acc_mem_V_q1[95:64]}};

assign grp_fu_1438_p4 = {{acc_mem_V_q1[127:96]}};

assign grp_fu_1448_p4 = {{acc_mem_V_q1[159:128]}};

assign grp_fu_1458_p4 = {{acc_mem_V_q1[191:160]}};

assign grp_fu_1468_p4 = {{acc_mem_V_q1[223:192]}};

assign grp_fu_1478_p4 = {{acc_mem_V_q1[255:224]}};

assign grp_fu_1488_p4 = {{acc_mem_V_q1[287:256]}};

assign grp_fu_1498_p4 = {{acc_mem_V_q1[319:288]}};

assign grp_fu_1508_p4 = {{acc_mem_V_q1[351:320]}};

assign grp_fu_1518_p4 = {{acc_mem_V_q1[383:352]}};

assign grp_fu_1528_p4 = {{acc_mem_V_q1[415:384]}};

assign grp_fu_1538_p4 = {{acc_mem_V_q1[447:416]}};

assign grp_fu_1548_p4 = {{acc_mem_V_q1[479:448]}};

assign grp_fu_1558_p4 = {{acc_mem_V_q1[511:480]}};

assign grp_fu_1789_p0 = grp_fu_1789_p00;

assign grp_fu_1789_p00 = $unsigned(sext_ln343_fu_1778_p1);

assign grp_fu_1789_p1 = grp_fu_1789_p10;

assign grp_fu_1789_p10 = grp_fu_1354_p4;

assign grp_fu_1802_p0 = grp_fu_1802_p00;

assign grp_fu_1802_p00 = mul_ln331_reg_13108;

assign grp_fu_1802_p1 = grp_fu_1802_p10;

assign grp_fu_1802_p10 = grp_fu_1363_p4;

assign grp_fu_4472_p0 = grp_fu_4472_p00;

assign grp_fu_4472_p00 = grp_fu_1354_p4;

assign grp_fu_4472_p1 = grp_fu_4472_p10;

assign grp_fu_4472_p10 = $unsigned(sext_ln253_fu_4461_p1);

assign grp_fu_4485_p0 = grp_fu_4485_p00;

assign grp_fu_4485_p00 = grp_fu_1363_p4;

assign grp_fu_4485_p1 = grp_fu_4485_p10;

assign grp_fu_4485_p10 = mul_ln240_reg_13961;

assign grp_reset_mem_fu_1325_ap_start = grp_reset_mem_fu_1325_ap_start_reg;

assign i_tensor_i_0_10_fu_7418_p4 = {{inp_mem_V_Dout_A[95:88]}};

assign i_tensor_i_0_12_fu_7438_p4 = {{inp_mem_V_Dout_A[111:104]}};

assign i_tensor_i_0_14_fu_7458_p4 = {{inp_mem_V_Dout_A[127:120]}};

assign i_tensor_i_0_1_fu_7318_p4 = {{inp_mem_V_Dout_A[15:8]}};

assign i_tensor_i_0_3_fu_7338_p4 = {{inp_mem_V_Dout_A[31:24]}};

assign i_tensor_i_0_5_fu_7358_p4 = {{inp_mem_V_Dout_A[47:40]}};

assign i_tensor_i_0_7_fu_7378_p4 = {{inp_mem_V_Dout_A[63:56]}};

assign i_tensor_i_0_9_fu_7398_p4 = {{inp_mem_V_Dout_A[79:72]}};

assign icmp_ln253_fu_4548_p2 = ((indvar_flatten15_reg_1175 == mul_ln240_1_reg_14039) ? 1'b1 : 1'b0);

assign icmp_ln259_fu_4564_p2 = ((indvar_flatten_reg_1219 == mul_ln240_reg_13961) ? 1'b1 : 1'b0);

assign icmp_ln262_1_fu_4610_p2 = (($signed(upc_0_i_reg_1263) < $signed(zext_ln262_1_reg_13984)) ? 1'b1 : 1'b0);

assign icmp_ln262_fu_1718_p2 = ((zext_ln262_3_fu_1690_p1 < grp_fu_1344_p4) ? 1'b1 : 1'b0);

assign icmp_ln343_fu_1906_p2 = ((ap_phi_mux_indvar_flatten71_phi_fu_1104_p4 == mul_ln331_1_reg_13340) ? 1'b1 : 1'b0);

assign icmp_ln348_fu_1922_p2 = ((ap_phi_mux_indvar_flatten25_phi_fu_1137_p4 == mul_ln331_reg_13108) ? 1'b1 : 1'b0);

assign icmp_ln350_1_fu_1955_p2 = (($signed(ap_phi_mux_upc_0_i322_phi_fu_1169_p4) < $signed(zext_ln350_1_reg_13131)) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_1680_p2 = ((zext_ln350_3_fu_1652_p1 < grp_fu_1344_p4) ? 1'b1 : 1'b0);

assign icmp_ln378_1_fu_1888_p2 = ((tmp_16_fu_1879_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln378_fu_1841_p2 = ((trunc_ln_fu_1832_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln385_fu_1847_p2 = ((trunc_ln_fu_1832_p4 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln391_fu_1853_p2 = ((trunc_ln_fu_1832_p4 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln470_fu_1624_p2 = ((trunc_ln470_fu_1620_p1 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln473_fu_1630_p2 = ((trunc_ln470_fu_1620_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln482_fu_11400_p2 = ((trunc_ln5_fu_11391_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln485_fu_11709_p2 = ((phi_ln485_reg_1314 == trunc_ln478_1_reg_13079) ? 1'b1 : 1'b0);

assign icmp_ln487_fu_11406_p2 = ((trunc_ln5_fu_11391_p4 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln502_fu_1636_p2 = ((trunc_ln470_fu_1620_p1 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln504_fu_1642_p2 = ((trunc_ln470_fu_1620_p1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_11467_p2 = ((i_op_assign_reg_1292 == trunc_ln304_1_reg_15986) ? 1'b1 : 1'b0);

assign icmp_ln67_1_fu_11557_p2 = ((shl_ln67_2_fu_11544_p3 > empty_18_fu_11551_p2) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_11510_p2 = ((phi_ln67_reg_1303 == shl_ln_reg_16006) ? 1'b1 : 1'b0);

assign icmp_ln887_10_fu_3711_p2 = (($signed(dst_tensor_0_10_V_reg_13613) < $signed(src_1_V_10_reg_13797)) ? 1'b1 : 1'b0);

assign icmp_ln887_11_fu_3821_p2 = (($signed(dst_tensor_0_11_V_reg_13624) < $signed(src_1_V_11_reg_13816)) ? 1'b1 : 1'b0);

assign icmp_ln887_12_fu_3931_p2 = (($signed(dst_tensor_0_12_V_reg_13635) < $signed(src_1_V_12_reg_13835)) ? 1'b1 : 1'b0);

assign icmp_ln887_13_fu_4041_p2 = (($signed(dst_tensor_0_13_V_reg_13646) < $signed(src_1_V_13_reg_13854)) ? 1'b1 : 1'b0);

assign icmp_ln887_14_fu_4151_p2 = (($signed(dst_tensor_0_14_V_reg_13657) < $signed(src_1_V_14_reg_13873)) ? 1'b1 : 1'b0);

assign icmp_ln887_15_fu_4261_p2 = (($signed(dst_tensor_0_15_V_reg_13668) < $signed(src_1_V_15_reg_13892)) ? 1'b1 : 1'b0);

assign icmp_ln887_1_fu_2392_p2 = (($signed(dst_tensor_0_1_V_reg_13514) < $signed(src_1_V_1_fu_2383_p3)) ? 1'b1 : 1'b0);

assign icmp_ln887_2_fu_2524_p2 = (($signed(dst_tensor_0_2_V_reg_13525) < $signed(src_1_V_2_fu_2515_p3)) ? 1'b1 : 1'b0);

assign icmp_ln887_3_fu_2656_p2 = (($signed(dst_tensor_0_3_V_reg_13536) < $signed(src_1_V_3_fu_2647_p3)) ? 1'b1 : 1'b0);

assign icmp_ln887_4_fu_2788_p2 = (($signed(dst_tensor_0_4_V_reg_13547) < $signed(src_1_V_4_fu_2779_p3)) ? 1'b1 : 1'b0);

assign icmp_ln887_5_fu_2920_p2 = (($signed(dst_tensor_0_5_V_reg_13558) < $signed(src_1_V_5_fu_2911_p3)) ? 1'b1 : 1'b0);

assign icmp_ln887_6_fu_3052_p2 = (($signed(dst_tensor_0_6_V_reg_13569) < $signed(src_1_V_6_fu_3043_p3)) ? 1'b1 : 1'b0);

assign icmp_ln887_7_fu_3184_p2 = (($signed(dst_tensor_0_7_V_reg_13580) < $signed(src_1_V_7_fu_3175_p3)) ? 1'b1 : 1'b0);

assign icmp_ln887_8_fu_3491_p2 = (($signed(dst_tensor_0_8_V_reg_13591) < $signed(src_1_V_8_reg_13759)) ? 1'b1 : 1'b0);

assign icmp_ln887_9_fu_3601_p2 = (($signed(dst_tensor_0_9_V_reg_13602) < $signed(src_1_V_9_reg_13778)) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_2260_p2 = (($signed(dst_tensor_0_0_V_reg_13503) < $signed(select_ln375_fu_2251_p3)) ? 1'b1 : 1'b0);

assign inp_mem_V_Addr_A = inp_mem_V_Addr_A_orig << 32'd4;

assign inp_mem_V_Addr_A_orig = zext_ln544_1_fu_4762_p1;

assign inp_mem_V_Clk_A = ap_clk;

assign inp_mem_V_Din_A = 128'd0;

assign inp_mem_V_Rst_A = ap_rst_n_inv;

assign inp_mem_V_WEN_A = 16'd0;

assign ins_i_fu_1808_p4 = {{tmp_V_reg_12909[127:112]}};

assign l2g_dep_queue_V_0_vld_in = l2g_dep_queue_V_TVALID;

assign l2g_dep_queue_V_0_vld_out = l2g_dep_queue_V_0_state[1'd0];

assign l2g_dep_queue_V_TREADY = l2g_dep_queue_V_0_state[1'd1];

assign lshr_ln67_fu_11646_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> zext_ln67_7_fu_11613_p1;

assign mul_ln1352_101_fu_8004_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_101_fu_8004_p1 = w_tensor_i_6_5_fu_5764_p4;

assign mul_ln1352_101_fu_8004_p2 = ($signed(mul_ln1352_101_fu_8004_p0) * $signed(mul_ln1352_101_fu_8004_p1));

assign mul_ln1352_103_fu_8014_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_103_fu_8014_p1 = w_tensor_i_6_7_fu_5784_p4;

assign mul_ln1352_103_fu_8014_p2 = ($signed(mul_ln1352_103_fu_8014_p0) * $signed(mul_ln1352_103_fu_8014_p1));

assign mul_ln1352_105_fu_8024_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_105_fu_8024_p1 = w_tensor_i_6_9_fu_5804_p4;

assign mul_ln1352_105_fu_8024_p2 = ($signed(mul_ln1352_105_fu_8024_p0) * $signed(mul_ln1352_105_fu_8024_p1));

assign mul_ln1352_107_fu_8034_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_107_fu_8034_p1 = w_tensor_i_6_10_fu_5824_p4;

assign mul_ln1352_107_fu_8034_p2 = ($signed(mul_ln1352_107_fu_8034_p0) * $signed(mul_ln1352_107_fu_8034_p1));

assign mul_ln1352_109_fu_8044_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_109_fu_8044_p1 = w_tensor_i_6_12_fu_5844_p4;

assign mul_ln1352_109_fu_8044_p2 = ($signed(mul_ln1352_109_fu_8044_p0) * $signed(mul_ln1352_109_fu_8044_p1));

assign mul_ln1352_111_fu_8054_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_111_fu_8054_p1 = w_tensor_i_6_14_fu_5864_p4;

assign mul_ln1352_111_fu_8054_p2 = ($signed(mul_ln1352_111_fu_8054_p0) * $signed(mul_ln1352_111_fu_8054_p1));

assign mul_ln1352_113_fu_8064_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_113_fu_8064_p1 = w_tensor_i_7_1_fu_5884_p4;

assign mul_ln1352_113_fu_8064_p2 = ($signed(mul_ln1352_113_fu_8064_p0) * $signed(mul_ln1352_113_fu_8064_p1));

assign mul_ln1352_115_fu_8074_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_115_fu_8074_p1 = w_tensor_i_7_3_fu_5904_p4;

assign mul_ln1352_115_fu_8074_p2 = ($signed(mul_ln1352_115_fu_8074_p0) * $signed(mul_ln1352_115_fu_8074_p1));

assign mul_ln1352_117_fu_8084_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_117_fu_8084_p1 = w_tensor_i_7_5_fu_5924_p4;

assign mul_ln1352_117_fu_8084_p2 = ($signed(mul_ln1352_117_fu_8084_p0) * $signed(mul_ln1352_117_fu_8084_p1));

assign mul_ln1352_119_fu_8094_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_119_fu_8094_p1 = w_tensor_i_7_7_fu_5944_p4;

assign mul_ln1352_119_fu_8094_p2 = ($signed(mul_ln1352_119_fu_8094_p0) * $signed(mul_ln1352_119_fu_8094_p1));

assign mul_ln1352_11_fu_7546_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_11_fu_7546_p1 = w_tensor_i_0_8_fu_4864_p4;

assign mul_ln1352_11_fu_7546_p2 = ($signed(mul_ln1352_11_fu_7546_p0) * $signed(mul_ln1352_11_fu_7546_p1));

assign mul_ln1352_121_fu_8104_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_121_fu_8104_p1 = w_tensor_i_7_9_fu_5964_p4;

assign mul_ln1352_121_fu_8104_p2 = ($signed(mul_ln1352_121_fu_8104_p0) * $signed(mul_ln1352_121_fu_8104_p1));

assign mul_ln1352_123_fu_8114_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_123_fu_8114_p1 = w_tensor_i_7_10_fu_5984_p4;

assign mul_ln1352_123_fu_8114_p2 = ($signed(mul_ln1352_123_fu_8114_p0) * $signed(mul_ln1352_123_fu_8114_p1));

assign mul_ln1352_125_fu_8124_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_125_fu_8124_p1 = w_tensor_i_7_12_fu_6004_p4;

assign mul_ln1352_125_fu_8124_p2 = ($signed(mul_ln1352_125_fu_8124_p0) * $signed(mul_ln1352_125_fu_8124_p1));

assign mul_ln1352_127_fu_8134_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_127_fu_8134_p1 = w_tensor_i_7_14_fu_6024_p4;

assign mul_ln1352_127_fu_8134_p2 = ($signed(mul_ln1352_127_fu_8134_p0) * $signed(mul_ln1352_127_fu_8134_p1));

assign mul_ln1352_129_fu_8144_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_129_fu_8144_p1 = w_tensor_i_8_1_fu_6044_p4;

assign mul_ln1352_129_fu_8144_p2 = ($signed(mul_ln1352_129_fu_8144_p0) * $signed(mul_ln1352_129_fu_8144_p1));

assign mul_ln1352_131_fu_8154_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_131_fu_8154_p1 = w_tensor_i_8_3_fu_6064_p4;

assign mul_ln1352_131_fu_8154_p2 = ($signed(mul_ln1352_131_fu_8154_p0) * $signed(mul_ln1352_131_fu_8154_p1));

assign mul_ln1352_133_fu_8164_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_133_fu_8164_p1 = w_tensor_i_8_5_fu_6084_p4;

assign mul_ln1352_133_fu_8164_p2 = ($signed(mul_ln1352_133_fu_8164_p0) * $signed(mul_ln1352_133_fu_8164_p1));

assign mul_ln1352_135_fu_8174_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_135_fu_8174_p1 = w_tensor_i_8_7_fu_6104_p4;

assign mul_ln1352_135_fu_8174_p2 = ($signed(mul_ln1352_135_fu_8174_p0) * $signed(mul_ln1352_135_fu_8174_p1));

assign mul_ln1352_137_fu_8184_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_137_fu_8184_p1 = w_tensor_i_8_9_fu_6124_p4;

assign mul_ln1352_137_fu_8184_p2 = ($signed(mul_ln1352_137_fu_8184_p0) * $signed(mul_ln1352_137_fu_8184_p1));

assign mul_ln1352_139_fu_8194_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_139_fu_8194_p1 = w_tensor_i_8_10_fu_6144_p4;

assign mul_ln1352_139_fu_8194_p2 = ($signed(mul_ln1352_139_fu_8194_p0) * $signed(mul_ln1352_139_fu_8194_p1));

assign mul_ln1352_13_fu_7560_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_13_fu_7560_p1 = w_tensor_i_0_11_fu_4884_p4;

assign mul_ln1352_13_fu_7560_p2 = ($signed(mul_ln1352_13_fu_7560_p0) * $signed(mul_ln1352_13_fu_7560_p1));

assign mul_ln1352_141_fu_8204_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_141_fu_8204_p1 = w_tensor_i_8_12_fu_6164_p4;

assign mul_ln1352_141_fu_8204_p2 = ($signed(mul_ln1352_141_fu_8204_p0) * $signed(mul_ln1352_141_fu_8204_p1));

assign mul_ln1352_143_fu_8214_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_143_fu_8214_p1 = w_tensor_i_8_14_fu_6184_p4;

assign mul_ln1352_143_fu_8214_p2 = ($signed(mul_ln1352_143_fu_8214_p0) * $signed(mul_ln1352_143_fu_8214_p1));

assign mul_ln1352_145_fu_8224_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_145_fu_8224_p1 = w_tensor_i_9_1_fu_6204_p4;

assign mul_ln1352_145_fu_8224_p2 = ($signed(mul_ln1352_145_fu_8224_p0) * $signed(mul_ln1352_145_fu_8224_p1));

assign mul_ln1352_147_fu_8234_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_147_fu_8234_p1 = w_tensor_i_9_3_fu_6224_p4;

assign mul_ln1352_147_fu_8234_p2 = ($signed(mul_ln1352_147_fu_8234_p0) * $signed(mul_ln1352_147_fu_8234_p1));

assign mul_ln1352_149_fu_8244_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_149_fu_8244_p1 = w_tensor_i_9_5_fu_6244_p4;

assign mul_ln1352_149_fu_8244_p2 = ($signed(mul_ln1352_149_fu_8244_p0) * $signed(mul_ln1352_149_fu_8244_p1));

assign mul_ln1352_151_fu_8254_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_151_fu_8254_p1 = w_tensor_i_9_7_fu_6264_p4;

assign mul_ln1352_151_fu_8254_p2 = ($signed(mul_ln1352_151_fu_8254_p0) * $signed(mul_ln1352_151_fu_8254_p1));

assign mul_ln1352_153_fu_8264_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_153_fu_8264_p1 = w_tensor_i_9_9_fu_6284_p4;

assign mul_ln1352_153_fu_8264_p2 = ($signed(mul_ln1352_153_fu_8264_p0) * $signed(mul_ln1352_153_fu_8264_p1));

assign mul_ln1352_155_fu_8274_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_155_fu_8274_p1 = w_tensor_i_9_10_fu_6304_p4;

assign mul_ln1352_155_fu_8274_p2 = ($signed(mul_ln1352_155_fu_8274_p0) * $signed(mul_ln1352_155_fu_8274_p1));

assign mul_ln1352_157_fu_8284_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_157_fu_8284_p1 = w_tensor_i_9_12_fu_6324_p4;

assign mul_ln1352_157_fu_8284_p2 = ($signed(mul_ln1352_157_fu_8284_p0) * $signed(mul_ln1352_157_fu_8284_p1));

assign mul_ln1352_159_fu_8294_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_159_fu_8294_p1 = w_tensor_i_9_14_fu_6344_p4;

assign mul_ln1352_159_fu_8294_p2 = ($signed(mul_ln1352_159_fu_8294_p0) * $signed(mul_ln1352_159_fu_8294_p1));

assign mul_ln1352_15_fu_7574_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_15_fu_7574_p1 = w_tensor_i_0_13_fu_4904_p4;

assign mul_ln1352_15_fu_7574_p2 = ($signed(mul_ln1352_15_fu_7574_p0) * $signed(mul_ln1352_15_fu_7574_p1));

assign mul_ln1352_161_fu_8304_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_161_fu_8304_p1 = w_tensor_i_10_1_fu_6364_p4;

assign mul_ln1352_161_fu_8304_p2 = ($signed(mul_ln1352_161_fu_8304_p0) * $signed(mul_ln1352_161_fu_8304_p1));

assign mul_ln1352_163_fu_8314_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_163_fu_8314_p1 = w_tensor_i_10_3_fu_6384_p4;

assign mul_ln1352_163_fu_8314_p2 = ($signed(mul_ln1352_163_fu_8314_p0) * $signed(mul_ln1352_163_fu_8314_p1));

assign mul_ln1352_165_fu_8324_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_165_fu_8324_p1 = w_tensor_i_10_5_fu_6404_p4;

assign mul_ln1352_165_fu_8324_p2 = ($signed(mul_ln1352_165_fu_8324_p0) * $signed(mul_ln1352_165_fu_8324_p1));

assign mul_ln1352_167_fu_8334_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_167_fu_8334_p1 = w_tensor_i_10_7_fu_6424_p4;

assign mul_ln1352_167_fu_8334_p2 = ($signed(mul_ln1352_167_fu_8334_p0) * $signed(mul_ln1352_167_fu_8334_p1));

assign mul_ln1352_169_fu_8344_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_169_fu_8344_p1 = w_tensor_i_10_9_fu_6444_p4;

assign mul_ln1352_169_fu_8344_p2 = ($signed(mul_ln1352_169_fu_8344_p0) * $signed(mul_ln1352_169_fu_8344_p1));

assign mul_ln1352_171_fu_8354_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_171_fu_8354_p1 = w_tensor_i_10_10_fu_6464_p4;

assign mul_ln1352_171_fu_8354_p2 = ($signed(mul_ln1352_171_fu_8354_p0) * $signed(mul_ln1352_171_fu_8354_p1));

assign mul_ln1352_173_fu_8364_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_173_fu_8364_p1 = w_tensor_i_10_12_fu_6484_p4;

assign mul_ln1352_173_fu_8364_p2 = ($signed(mul_ln1352_173_fu_8364_p0) * $signed(mul_ln1352_173_fu_8364_p1));

assign mul_ln1352_175_fu_8374_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_175_fu_8374_p1 = w_tensor_i_10_14_fu_6504_p4;

assign mul_ln1352_175_fu_8374_p2 = ($signed(mul_ln1352_175_fu_8374_p0) * $signed(mul_ln1352_175_fu_8374_p1));

assign mul_ln1352_177_fu_8384_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_177_fu_8384_p1 = w_tensor_i_11_1_fu_6524_p4;

assign mul_ln1352_177_fu_8384_p2 = ($signed(mul_ln1352_177_fu_8384_p0) * $signed(mul_ln1352_177_fu_8384_p1));

assign mul_ln1352_179_fu_8394_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_179_fu_8394_p1 = w_tensor_i_11_3_fu_6544_p4;

assign mul_ln1352_179_fu_8394_p2 = ($signed(mul_ln1352_179_fu_8394_p0) * $signed(mul_ln1352_179_fu_8394_p1));

assign mul_ln1352_17_fu_7584_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_17_fu_7584_p1 = w_tensor_i_1_1_fu_4924_p4;

assign mul_ln1352_17_fu_7584_p2 = ($signed(mul_ln1352_17_fu_7584_p0) * $signed(mul_ln1352_17_fu_7584_p1));

assign mul_ln1352_181_fu_8404_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_181_fu_8404_p1 = w_tensor_i_11_5_fu_6564_p4;

assign mul_ln1352_181_fu_8404_p2 = ($signed(mul_ln1352_181_fu_8404_p0) * $signed(mul_ln1352_181_fu_8404_p1));

assign mul_ln1352_183_fu_8414_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_183_fu_8414_p1 = w_tensor_i_11_7_fu_6584_p4;

assign mul_ln1352_183_fu_8414_p2 = ($signed(mul_ln1352_183_fu_8414_p0) * $signed(mul_ln1352_183_fu_8414_p1));

assign mul_ln1352_185_fu_8424_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_185_fu_8424_p1 = w_tensor_i_11_9_fu_6604_p4;

assign mul_ln1352_185_fu_8424_p2 = ($signed(mul_ln1352_185_fu_8424_p0) * $signed(mul_ln1352_185_fu_8424_p1));

assign mul_ln1352_187_fu_8434_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_187_fu_8434_p1 = w_tensor_i_11_10_fu_6624_p4;

assign mul_ln1352_187_fu_8434_p2 = ($signed(mul_ln1352_187_fu_8434_p0) * $signed(mul_ln1352_187_fu_8434_p1));

assign mul_ln1352_189_fu_8444_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_189_fu_8444_p1 = w_tensor_i_11_12_fu_6644_p4;

assign mul_ln1352_189_fu_8444_p2 = ($signed(mul_ln1352_189_fu_8444_p0) * $signed(mul_ln1352_189_fu_8444_p1));

assign mul_ln1352_191_fu_8454_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_191_fu_8454_p1 = w_tensor_i_11_14_fu_6664_p4;

assign mul_ln1352_191_fu_8454_p2 = ($signed(mul_ln1352_191_fu_8454_p0) * $signed(mul_ln1352_191_fu_8454_p1));

assign mul_ln1352_193_fu_8464_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_193_fu_8464_p1 = w_tensor_i_12_1_fu_6684_p4;

assign mul_ln1352_193_fu_8464_p2 = ($signed(mul_ln1352_193_fu_8464_p0) * $signed(mul_ln1352_193_fu_8464_p1));

assign mul_ln1352_195_fu_8474_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_195_fu_8474_p1 = w_tensor_i_12_3_fu_6704_p4;

assign mul_ln1352_195_fu_8474_p2 = ($signed(mul_ln1352_195_fu_8474_p0) * $signed(mul_ln1352_195_fu_8474_p1));

assign mul_ln1352_197_fu_8484_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_197_fu_8484_p1 = w_tensor_i_12_5_fu_6724_p4;

assign mul_ln1352_197_fu_8484_p2 = ($signed(mul_ln1352_197_fu_8484_p0) * $signed(mul_ln1352_197_fu_8484_p1));

assign mul_ln1352_199_fu_8494_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_199_fu_8494_p1 = w_tensor_i_12_7_fu_6744_p4;

assign mul_ln1352_199_fu_8494_p2 = ($signed(mul_ln1352_199_fu_8494_p0) * $signed(mul_ln1352_199_fu_8494_p1));

assign mul_ln1352_19_fu_7594_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_19_fu_7594_p1 = w_tensor_i_1_3_fu_4944_p4;

assign mul_ln1352_19_fu_7594_p2 = ($signed(mul_ln1352_19_fu_7594_p0) * $signed(mul_ln1352_19_fu_7594_p1));

assign mul_ln1352_1_fu_7476_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_1_fu_7476_p1 = w_tensor_i_0_1_fu_4770_p4;

assign mul_ln1352_1_fu_7476_p2 = ($signed(mul_ln1352_1_fu_7476_p0) * $signed(mul_ln1352_1_fu_7476_p1));

assign mul_ln1352_201_fu_8504_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_201_fu_8504_p1 = w_tensor_i_12_9_fu_6764_p4;

assign mul_ln1352_201_fu_8504_p2 = ($signed(mul_ln1352_201_fu_8504_p0) * $signed(mul_ln1352_201_fu_8504_p1));

assign mul_ln1352_203_fu_8514_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_203_fu_8514_p1 = w_tensor_i_12_10_fu_6784_p4;

assign mul_ln1352_203_fu_8514_p2 = ($signed(mul_ln1352_203_fu_8514_p0) * $signed(mul_ln1352_203_fu_8514_p1));

assign mul_ln1352_205_fu_8524_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_205_fu_8524_p1 = w_tensor_i_12_12_fu_6804_p4;

assign mul_ln1352_205_fu_8524_p2 = ($signed(mul_ln1352_205_fu_8524_p0) * $signed(mul_ln1352_205_fu_8524_p1));

assign mul_ln1352_207_fu_8534_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_207_fu_8534_p1 = w_tensor_i_12_14_fu_6824_p4;

assign mul_ln1352_207_fu_8534_p2 = ($signed(mul_ln1352_207_fu_8534_p0) * $signed(mul_ln1352_207_fu_8534_p1));

assign mul_ln1352_209_fu_8544_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_209_fu_8544_p1 = w_tensor_i_13_1_fu_6844_p4;

assign mul_ln1352_209_fu_8544_p2 = ($signed(mul_ln1352_209_fu_8544_p0) * $signed(mul_ln1352_209_fu_8544_p1));

assign mul_ln1352_211_fu_8554_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_211_fu_8554_p1 = w_tensor_i_13_3_fu_6864_p4;

assign mul_ln1352_211_fu_8554_p2 = ($signed(mul_ln1352_211_fu_8554_p0) * $signed(mul_ln1352_211_fu_8554_p1));

assign mul_ln1352_213_fu_8564_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_213_fu_8564_p1 = w_tensor_i_13_5_fu_6884_p4;

assign mul_ln1352_213_fu_8564_p2 = ($signed(mul_ln1352_213_fu_8564_p0) * $signed(mul_ln1352_213_fu_8564_p1));

assign mul_ln1352_215_fu_8574_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_215_fu_8574_p1 = w_tensor_i_13_7_fu_6904_p4;

assign mul_ln1352_215_fu_8574_p2 = ($signed(mul_ln1352_215_fu_8574_p0) * $signed(mul_ln1352_215_fu_8574_p1));

assign mul_ln1352_217_fu_8584_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_217_fu_8584_p1 = w_tensor_i_13_9_fu_6924_p4;

assign mul_ln1352_217_fu_8584_p2 = ($signed(mul_ln1352_217_fu_8584_p0) * $signed(mul_ln1352_217_fu_8584_p1));

assign mul_ln1352_219_fu_8594_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_219_fu_8594_p1 = w_tensor_i_13_10_fu_6944_p4;

assign mul_ln1352_219_fu_8594_p2 = ($signed(mul_ln1352_219_fu_8594_p0) * $signed(mul_ln1352_219_fu_8594_p1));

assign mul_ln1352_21_fu_7604_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_21_fu_7604_p1 = w_tensor_i_1_5_fu_4964_p4;

assign mul_ln1352_21_fu_7604_p2 = ($signed(mul_ln1352_21_fu_7604_p0) * $signed(mul_ln1352_21_fu_7604_p1));

assign mul_ln1352_221_fu_8604_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_221_fu_8604_p1 = w_tensor_i_13_12_fu_6964_p4;

assign mul_ln1352_221_fu_8604_p2 = ($signed(mul_ln1352_221_fu_8604_p0) * $signed(mul_ln1352_221_fu_8604_p1));

assign mul_ln1352_223_fu_8614_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_223_fu_8614_p1 = w_tensor_i_13_14_fu_6984_p4;

assign mul_ln1352_223_fu_8614_p2 = ($signed(mul_ln1352_223_fu_8614_p0) * $signed(mul_ln1352_223_fu_8614_p1));

assign mul_ln1352_225_fu_8624_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_225_fu_8624_p1 = w_tensor_i_14_1_fu_7004_p4;

assign mul_ln1352_225_fu_8624_p2 = ($signed(mul_ln1352_225_fu_8624_p0) * $signed(mul_ln1352_225_fu_8624_p1));

assign mul_ln1352_227_fu_8634_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_227_fu_8634_p1 = w_tensor_i_14_3_fu_7024_p4;

assign mul_ln1352_227_fu_8634_p2 = ($signed(mul_ln1352_227_fu_8634_p0) * $signed(mul_ln1352_227_fu_8634_p1));

assign mul_ln1352_229_fu_8644_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_229_fu_8644_p1 = w_tensor_i_14_5_fu_7044_p4;

assign mul_ln1352_229_fu_8644_p2 = ($signed(mul_ln1352_229_fu_8644_p0) * $signed(mul_ln1352_229_fu_8644_p1));

assign mul_ln1352_231_fu_8654_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_231_fu_8654_p1 = w_tensor_i_14_7_fu_7064_p4;

assign mul_ln1352_231_fu_8654_p2 = ($signed(mul_ln1352_231_fu_8654_p0) * $signed(mul_ln1352_231_fu_8654_p1));

assign mul_ln1352_233_fu_8664_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_233_fu_8664_p1 = w_tensor_i_14_9_fu_7084_p4;

assign mul_ln1352_233_fu_8664_p2 = ($signed(mul_ln1352_233_fu_8664_p0) * $signed(mul_ln1352_233_fu_8664_p1));

assign mul_ln1352_235_fu_8674_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_235_fu_8674_p1 = w_tensor_i_14_10_fu_7104_p4;

assign mul_ln1352_235_fu_8674_p2 = ($signed(mul_ln1352_235_fu_8674_p0) * $signed(mul_ln1352_235_fu_8674_p1));

assign mul_ln1352_237_fu_8684_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_237_fu_8684_p1 = w_tensor_i_14_12_fu_7124_p4;

assign mul_ln1352_237_fu_8684_p2 = ($signed(mul_ln1352_237_fu_8684_p0) * $signed(mul_ln1352_237_fu_8684_p1));

assign mul_ln1352_239_fu_8694_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_239_fu_8694_p1 = w_tensor_i_14_14_fu_7144_p4;

assign mul_ln1352_239_fu_8694_p2 = ($signed(mul_ln1352_239_fu_8694_p0) * $signed(mul_ln1352_239_fu_8694_p1));

assign mul_ln1352_23_fu_7614_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_23_fu_7614_p1 = w_tensor_i_1_7_fu_4984_p4;

assign mul_ln1352_23_fu_7614_p2 = ($signed(mul_ln1352_23_fu_7614_p0) * $signed(mul_ln1352_23_fu_7614_p1));

assign mul_ln1352_241_fu_8704_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_241_fu_8704_p1 = w_tensor_i_15_1_fu_7164_p4;

assign mul_ln1352_241_fu_8704_p2 = ($signed(mul_ln1352_241_fu_8704_p0) * $signed(mul_ln1352_241_fu_8704_p1));

assign mul_ln1352_243_fu_8714_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_243_fu_8714_p1 = w_tensor_i_15_3_fu_7184_p4;

assign mul_ln1352_243_fu_8714_p2 = ($signed(mul_ln1352_243_fu_8714_p0) * $signed(mul_ln1352_243_fu_8714_p1));

assign mul_ln1352_245_fu_8724_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_245_fu_8724_p1 = w_tensor_i_15_5_fu_7204_p4;

assign mul_ln1352_245_fu_8724_p2 = ($signed(mul_ln1352_245_fu_8724_p0) * $signed(mul_ln1352_245_fu_8724_p1));

assign mul_ln1352_247_fu_8734_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_247_fu_8734_p1 = w_tensor_i_15_7_fu_7224_p4;

assign mul_ln1352_247_fu_8734_p2 = ($signed(mul_ln1352_247_fu_8734_p0) * $signed(mul_ln1352_247_fu_8734_p1));

assign mul_ln1352_249_fu_8744_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_249_fu_8744_p1 = w_tensor_i_15_9_fu_7244_p4;

assign mul_ln1352_249_fu_8744_p2 = ($signed(mul_ln1352_249_fu_8744_p0) * $signed(mul_ln1352_249_fu_8744_p1));

assign mul_ln1352_251_fu_8754_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_251_fu_8754_p1 = w_tensor_i_15_10_fu_7264_p4;

assign mul_ln1352_251_fu_8754_p2 = ($signed(mul_ln1352_251_fu_8754_p0) * $signed(mul_ln1352_251_fu_8754_p1));

assign mul_ln1352_253_fu_8764_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_253_fu_8764_p1 = w_tensor_i_15_12_fu_7284_p4;

assign mul_ln1352_253_fu_8764_p2 = ($signed(mul_ln1352_253_fu_8764_p0) * $signed(mul_ln1352_253_fu_8764_p1));

assign mul_ln1352_255_fu_8774_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_255_fu_8774_p1 = w_tensor_i_15_14_fu_7304_p4;

assign mul_ln1352_255_fu_8774_p2 = ($signed(mul_ln1352_255_fu_8774_p0) * $signed(mul_ln1352_255_fu_8774_p1));

assign mul_ln1352_25_fu_7624_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_25_fu_7624_p1 = w_tensor_i_1_9_fu_5004_p4;

assign mul_ln1352_25_fu_7624_p2 = ($signed(mul_ln1352_25_fu_7624_p0) * $signed(mul_ln1352_25_fu_7624_p1));

assign mul_ln1352_27_fu_7634_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_27_fu_7634_p1 = w_tensor_i_1_10_fu_5024_p4;

assign mul_ln1352_27_fu_7634_p2 = ($signed(mul_ln1352_27_fu_7634_p0) * $signed(mul_ln1352_27_fu_7634_p1));

assign mul_ln1352_29_fu_7644_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_29_fu_7644_p1 = w_tensor_i_1_12_fu_5044_p4;

assign mul_ln1352_29_fu_7644_p2 = ($signed(mul_ln1352_29_fu_7644_p0) * $signed(mul_ln1352_29_fu_7644_p1));

assign mul_ln1352_31_fu_7654_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_31_fu_7654_p1 = w_tensor_i_1_14_fu_5064_p4;

assign mul_ln1352_31_fu_7654_p2 = ($signed(mul_ln1352_31_fu_7654_p0) * $signed(mul_ln1352_31_fu_7654_p1));

assign mul_ln1352_33_fu_7664_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_33_fu_7664_p1 = w_tensor_i_2_1_fu_5084_p4;

assign mul_ln1352_33_fu_7664_p2 = ($signed(mul_ln1352_33_fu_7664_p0) * $signed(mul_ln1352_33_fu_7664_p1));

assign mul_ln1352_35_fu_7674_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_35_fu_7674_p1 = w_tensor_i_2_3_fu_5104_p4;

assign mul_ln1352_35_fu_7674_p2 = ($signed(mul_ln1352_35_fu_7674_p0) * $signed(mul_ln1352_35_fu_7674_p1));

assign mul_ln1352_37_fu_7684_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_37_fu_7684_p1 = w_tensor_i_2_5_fu_5124_p4;

assign mul_ln1352_37_fu_7684_p2 = ($signed(mul_ln1352_37_fu_7684_p0) * $signed(mul_ln1352_37_fu_7684_p1));

assign mul_ln1352_39_fu_7694_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_39_fu_7694_p1 = w_tensor_i_2_7_fu_5144_p4;

assign mul_ln1352_39_fu_7694_p2 = ($signed(mul_ln1352_39_fu_7694_p0) * $signed(mul_ln1352_39_fu_7694_p1));

assign mul_ln1352_3_fu_7490_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_3_fu_7490_p1 = w_tensor_i_0_3_fu_4790_p4;

assign mul_ln1352_3_fu_7490_p2 = ($signed(mul_ln1352_3_fu_7490_p0) * $signed(mul_ln1352_3_fu_7490_p1));

assign mul_ln1352_41_fu_7704_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_41_fu_7704_p1 = w_tensor_i_2_9_fu_5164_p4;

assign mul_ln1352_41_fu_7704_p2 = ($signed(mul_ln1352_41_fu_7704_p0) * $signed(mul_ln1352_41_fu_7704_p1));

assign mul_ln1352_43_fu_7714_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_43_fu_7714_p1 = w_tensor_i_2_10_fu_5184_p4;

assign mul_ln1352_43_fu_7714_p2 = ($signed(mul_ln1352_43_fu_7714_p0) * $signed(mul_ln1352_43_fu_7714_p1));

assign mul_ln1352_45_fu_7724_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_45_fu_7724_p1 = w_tensor_i_2_12_fu_5204_p4;

assign mul_ln1352_45_fu_7724_p2 = ($signed(mul_ln1352_45_fu_7724_p0) * $signed(mul_ln1352_45_fu_7724_p1));

assign mul_ln1352_47_fu_7734_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_47_fu_7734_p1 = w_tensor_i_2_14_fu_5224_p4;

assign mul_ln1352_47_fu_7734_p2 = ($signed(mul_ln1352_47_fu_7734_p0) * $signed(mul_ln1352_47_fu_7734_p1));

assign mul_ln1352_49_fu_7744_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_49_fu_7744_p1 = w_tensor_i_3_1_fu_5244_p4;

assign mul_ln1352_49_fu_7744_p2 = ($signed(mul_ln1352_49_fu_7744_p0) * $signed(mul_ln1352_49_fu_7744_p1));

assign mul_ln1352_51_fu_7754_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_51_fu_7754_p1 = w_tensor_i_3_3_fu_5264_p4;

assign mul_ln1352_51_fu_7754_p2 = ($signed(mul_ln1352_51_fu_7754_p0) * $signed(mul_ln1352_51_fu_7754_p1));

assign mul_ln1352_53_fu_7764_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_53_fu_7764_p1 = w_tensor_i_3_5_fu_5284_p4;

assign mul_ln1352_53_fu_7764_p2 = ($signed(mul_ln1352_53_fu_7764_p0) * $signed(mul_ln1352_53_fu_7764_p1));

assign mul_ln1352_55_fu_7774_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_55_fu_7774_p1 = w_tensor_i_3_7_fu_5304_p4;

assign mul_ln1352_55_fu_7774_p2 = ($signed(mul_ln1352_55_fu_7774_p0) * $signed(mul_ln1352_55_fu_7774_p1));

assign mul_ln1352_57_fu_7784_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_57_fu_7784_p1 = w_tensor_i_3_9_fu_5324_p4;

assign mul_ln1352_57_fu_7784_p2 = ($signed(mul_ln1352_57_fu_7784_p0) * $signed(mul_ln1352_57_fu_7784_p1));

assign mul_ln1352_59_fu_7794_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_59_fu_7794_p1 = w_tensor_i_3_10_fu_5344_p4;

assign mul_ln1352_59_fu_7794_p2 = ($signed(mul_ln1352_59_fu_7794_p0) * $signed(mul_ln1352_59_fu_7794_p1));

assign mul_ln1352_5_fu_7504_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_5_fu_7504_p1 = w_tensor_i_0_5_fu_4810_p4;

assign mul_ln1352_5_fu_7504_p2 = ($signed(mul_ln1352_5_fu_7504_p0) * $signed(mul_ln1352_5_fu_7504_p1));

assign mul_ln1352_61_fu_7804_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_61_fu_7804_p1 = w_tensor_i_3_12_fu_5364_p4;

assign mul_ln1352_61_fu_7804_p2 = ($signed(mul_ln1352_61_fu_7804_p0) * $signed(mul_ln1352_61_fu_7804_p1));

assign mul_ln1352_63_fu_7814_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_63_fu_7814_p1 = w_tensor_i_3_14_fu_5384_p4;

assign mul_ln1352_63_fu_7814_p2 = ($signed(mul_ln1352_63_fu_7814_p0) * $signed(mul_ln1352_63_fu_7814_p1));

assign mul_ln1352_65_fu_7824_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_65_fu_7824_p1 = w_tensor_i_4_1_fu_5404_p4;

assign mul_ln1352_65_fu_7824_p2 = ($signed(mul_ln1352_65_fu_7824_p0) * $signed(mul_ln1352_65_fu_7824_p1));

assign mul_ln1352_67_fu_7834_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_67_fu_7834_p1 = w_tensor_i_4_3_fu_5424_p4;

assign mul_ln1352_67_fu_7834_p2 = ($signed(mul_ln1352_67_fu_7834_p0) * $signed(mul_ln1352_67_fu_7834_p1));

assign mul_ln1352_69_fu_7844_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_69_fu_7844_p1 = w_tensor_i_4_5_fu_5444_p4;

assign mul_ln1352_69_fu_7844_p2 = ($signed(mul_ln1352_69_fu_7844_p0) * $signed(mul_ln1352_69_fu_7844_p1));

assign mul_ln1352_71_fu_7854_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_71_fu_7854_p1 = w_tensor_i_4_7_fu_5464_p4;

assign mul_ln1352_71_fu_7854_p2 = ($signed(mul_ln1352_71_fu_7854_p0) * $signed(mul_ln1352_71_fu_7854_p1));

assign mul_ln1352_73_fu_7864_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_73_fu_7864_p1 = w_tensor_i_4_9_fu_5484_p4;

assign mul_ln1352_73_fu_7864_p2 = ($signed(mul_ln1352_73_fu_7864_p0) * $signed(mul_ln1352_73_fu_7864_p1));

assign mul_ln1352_75_fu_7874_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_75_fu_7874_p1 = w_tensor_i_4_10_fu_5504_p4;

assign mul_ln1352_75_fu_7874_p2 = ($signed(mul_ln1352_75_fu_7874_p0) * $signed(mul_ln1352_75_fu_7874_p1));

assign mul_ln1352_77_fu_7884_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_77_fu_7884_p1 = w_tensor_i_4_12_fu_5524_p4;

assign mul_ln1352_77_fu_7884_p2 = ($signed(mul_ln1352_77_fu_7884_p0) * $signed(mul_ln1352_77_fu_7884_p1));

assign mul_ln1352_79_fu_7894_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_79_fu_7894_p1 = w_tensor_i_4_14_fu_5544_p4;

assign mul_ln1352_79_fu_7894_p2 = ($signed(mul_ln1352_79_fu_7894_p0) * $signed(mul_ln1352_79_fu_7894_p1));

assign mul_ln1352_7_fu_7518_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_7_fu_7518_p1 = w_tensor_i_0_7_fu_4830_p4;

assign mul_ln1352_7_fu_7518_p2 = ($signed(mul_ln1352_7_fu_7518_p0) * $signed(mul_ln1352_7_fu_7518_p1));

assign mul_ln1352_81_fu_7904_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_81_fu_7904_p1 = w_tensor_i_5_1_fu_5564_p4;

assign mul_ln1352_81_fu_7904_p2 = ($signed(mul_ln1352_81_fu_7904_p0) * $signed(mul_ln1352_81_fu_7904_p1));

assign mul_ln1352_83_fu_7914_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_83_fu_7914_p1 = w_tensor_i_5_3_fu_5584_p4;

assign mul_ln1352_83_fu_7914_p2 = ($signed(mul_ln1352_83_fu_7914_p0) * $signed(mul_ln1352_83_fu_7914_p1));

assign mul_ln1352_85_fu_7924_p0 = sext_ln215_10_fu_7496_p1;

assign mul_ln1352_85_fu_7924_p1 = w_tensor_i_5_5_fu_5604_p4;

assign mul_ln1352_85_fu_7924_p2 = ($signed(mul_ln1352_85_fu_7924_p0) * $signed(mul_ln1352_85_fu_7924_p1));

assign mul_ln1352_87_fu_7934_p0 = sext_ln215_14_fu_7510_p1;

assign mul_ln1352_87_fu_7934_p1 = w_tensor_i_5_7_fu_5624_p4;

assign mul_ln1352_87_fu_7934_p2 = ($signed(mul_ln1352_87_fu_7934_p0) * $signed(mul_ln1352_87_fu_7934_p1));

assign mul_ln1352_89_fu_7944_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_89_fu_7944_p1 = w_tensor_i_5_9_fu_5644_p4;

assign mul_ln1352_89_fu_7944_p2 = ($signed(mul_ln1352_89_fu_7944_p0) * $signed(mul_ln1352_89_fu_7944_p1));

assign mul_ln1352_91_fu_7954_p0 = sext_ln215_22_fu_7538_p1;

assign mul_ln1352_91_fu_7954_p1 = w_tensor_i_5_10_fu_5664_p4;

assign mul_ln1352_91_fu_7954_p2 = ($signed(mul_ln1352_91_fu_7954_p0) * $signed(mul_ln1352_91_fu_7954_p1));

assign mul_ln1352_93_fu_7964_p0 = sext_ln215_26_fu_7552_p1;

assign mul_ln1352_93_fu_7964_p1 = w_tensor_i_5_12_fu_5684_p4;

assign mul_ln1352_93_fu_7964_p2 = ($signed(mul_ln1352_93_fu_7964_p0) * $signed(mul_ln1352_93_fu_7964_p1));

assign mul_ln1352_95_fu_7974_p0 = sext_ln215_30_fu_7566_p1;

assign mul_ln1352_95_fu_7974_p1 = w_tensor_i_5_14_fu_5704_p4;

assign mul_ln1352_95_fu_7974_p2 = ($signed(mul_ln1352_95_fu_7974_p0) * $signed(mul_ln1352_95_fu_7974_p1));

assign mul_ln1352_97_fu_7984_p0 = sext_ln215_2_fu_7468_p1;

assign mul_ln1352_97_fu_7984_p1 = w_tensor_i_6_1_fu_5724_p4;

assign mul_ln1352_97_fu_7984_p2 = ($signed(mul_ln1352_97_fu_7984_p0) * $signed(mul_ln1352_97_fu_7984_p1));

assign mul_ln1352_99_fu_7994_p0 = sext_ln215_6_fu_7482_p1;

assign mul_ln1352_99_fu_7994_p1 = w_tensor_i_6_3_fu_5744_p4;

assign mul_ln1352_99_fu_7994_p2 = ($signed(mul_ln1352_99_fu_7994_p0) * $signed(mul_ln1352_99_fu_7994_p1));

assign mul_ln1352_9_fu_7532_p0 = sext_ln215_18_fu_7524_p1;

assign mul_ln1352_9_fu_7532_p1 = w_tensor_i_0_9_fu_4844_p4;

assign mul_ln1352_9_fu_7532_p2 = ($signed(mul_ln1352_9_fu_7532_p0) * $signed(mul_ln1352_9_fu_7532_p1));

assign o_tensor_0_0_V_10_fu_2356_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_0_V_7_fu_2338_p1 : o_tensor_0_0_V_9_fu_2349_p3);

assign o_tensor_0_0_V_1_fu_10403_p1 = add_ln700_15_fu_10390_p2[7:0];

assign o_tensor_0_0_V_2_fu_2285_p1 = dst_tensor_0_0_V_1_fu_2277_p3[7:0];

assign o_tensor_0_0_V_3_fu_2294_p1 = dst_tensor_0_0_V_2_fu_2289_p2[7:0];

assign o_tensor_0_0_V_7_fu_2338_p1 = dst_tensor_0_0_V_3_fu_2330_p3[7:0];

assign o_tensor_0_0_V_8_fu_2342_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_0_V_2_fu_2285_p1 : o_tensor_0_0_V_fu_824);

assign o_tensor_0_0_V_9_fu_2349_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_0_V_3_fu_2294_p1 : o_tensor_0_0_V_8_fu_2342_p3);

assign o_tensor_0_10_V_1_fu_3733_p1 = dst_tensor_0_10_V_1_fu_3725_p3[7:0];

assign o_tensor_0_10_V_2_fu_3741_p1 = dst_tensor_0_10_V_2_fu_3737_p2[7:0];

assign o_tensor_0_10_V_6_fu_3776_p1 = dst_tensor_0_10_V_3_fu_3768_p3[7:0];

assign o_tensor_0_10_V_7_fu_3780_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_10_V_1_fu_3733_p1 : o_tensor_0_10_V_fu_864);

assign o_tensor_0_10_V_8_fu_3787_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_10_V_2_fu_3741_p1 : o_tensor_0_10_V_7_fu_3780_p3);

assign o_tensor_0_10_V_9_fu_3794_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_10_V_6_fu_3776_p1 : o_tensor_0_10_V_8_fu_3787_p3);

assign o_tensor_0_11_V_1_fu_3843_p1 = dst_tensor_0_11_V_1_fu_3835_p3[7:0];

assign o_tensor_0_11_V_2_fu_3851_p1 = dst_tensor_0_11_V_2_fu_3847_p2[7:0];

assign o_tensor_0_11_V_6_fu_3886_p1 = dst_tensor_0_11_V_3_fu_3878_p3[7:0];

assign o_tensor_0_11_V_7_fu_3890_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_11_V_1_fu_3843_p1 : o_tensor_0_11_V_fu_868);

assign o_tensor_0_11_V_8_fu_3897_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_11_V_2_fu_3851_p1 : o_tensor_0_11_V_7_fu_3890_p3);

assign o_tensor_0_11_V_9_fu_3904_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_11_V_6_fu_3886_p1 : o_tensor_0_11_V_8_fu_3897_p3);

assign o_tensor_0_12_V_1_fu_3953_p1 = dst_tensor_0_12_V_1_fu_3945_p3[7:0];

assign o_tensor_0_12_V_2_fu_3961_p1 = dst_tensor_0_12_V_2_fu_3957_p2[7:0];

assign o_tensor_0_12_V_6_fu_3996_p1 = dst_tensor_0_12_V_3_fu_3988_p3[7:0];

assign o_tensor_0_12_V_7_fu_4000_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_12_V_1_fu_3953_p1 : o_tensor_0_12_V_fu_872);

assign o_tensor_0_12_V_8_fu_4007_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_12_V_2_fu_3961_p1 : o_tensor_0_12_V_7_fu_4000_p3);

assign o_tensor_0_12_V_9_fu_4014_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_12_V_6_fu_3996_p1 : o_tensor_0_12_V_8_fu_4007_p3);

assign o_tensor_0_13_V_1_fu_4063_p1 = dst_tensor_0_13_V_1_fu_4055_p3[7:0];

assign o_tensor_0_13_V_2_fu_4071_p1 = dst_tensor_0_13_V_2_fu_4067_p2[7:0];

assign o_tensor_0_13_V_6_fu_4106_p1 = dst_tensor_0_13_V_3_fu_4098_p3[7:0];

assign o_tensor_0_13_V_7_fu_4110_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_13_V_1_fu_4063_p1 : o_tensor_0_13_V_fu_876);

assign o_tensor_0_13_V_8_fu_4117_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_13_V_2_fu_4071_p1 : o_tensor_0_13_V_7_fu_4110_p3);

assign o_tensor_0_13_V_9_fu_4124_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_13_V_6_fu_4106_p1 : o_tensor_0_13_V_8_fu_4117_p3);

assign o_tensor_0_14_V_1_fu_4173_p1 = dst_tensor_0_14_V_1_fu_4165_p3[7:0];

assign o_tensor_0_14_V_2_fu_4181_p1 = dst_tensor_0_14_V_2_fu_4177_p2[7:0];

assign o_tensor_0_14_V_6_fu_4216_p1 = dst_tensor_0_14_V_3_fu_4208_p3[7:0];

assign o_tensor_0_14_V_7_fu_4220_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_14_V_1_fu_4173_p1 : o_tensor_0_14_V_fu_880);

assign o_tensor_0_14_V_8_fu_4227_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_14_V_2_fu_4181_p1 : o_tensor_0_14_V_7_fu_4220_p3);

assign o_tensor_0_14_V_9_fu_4234_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_14_V_6_fu_4216_p1 : o_tensor_0_14_V_8_fu_4227_p3);

assign o_tensor_0_15_V_1_fu_4283_p1 = dst_tensor_0_15_V_1_fu_4275_p3[7:0];

assign o_tensor_0_15_V_2_fu_4291_p1 = dst_tensor_0_15_V_2_fu_4287_p2[7:0];

assign o_tensor_0_15_V_6_fu_4326_p1 = dst_tensor_0_15_V_3_fu_4318_p3[7:0];

assign o_tensor_0_15_V_7_fu_4330_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_15_V_1_fu_4283_p1 : o_tensor_0_15_V_fu_884);

assign o_tensor_0_15_V_8_fu_4337_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_15_V_2_fu_4291_p1 : o_tensor_0_15_V_7_fu_4330_p3);

assign o_tensor_0_15_V_9_fu_4344_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_15_V_6_fu_4326_p1 : o_tensor_0_15_V_8_fu_4337_p3);

assign o_tensor_0_1_V_10_fu_2488_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_1_V_7_fu_2470_p1 : o_tensor_0_1_V_9_fu_2481_p3);

assign o_tensor_0_1_V_1_fu_10462_p1 = add_ln700_31_fu_10449_p2[7:0];

assign o_tensor_0_1_V_2_fu_2417_p1 = dst_tensor_0_1_V_1_fu_2409_p3[7:0];

assign o_tensor_0_1_V_3_fu_2426_p1 = dst_tensor_0_1_V_2_fu_2421_p2[7:0];

assign o_tensor_0_1_V_7_fu_2470_p1 = dst_tensor_0_1_V_3_fu_2462_p3[7:0];

assign o_tensor_0_1_V_8_fu_2474_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_1_V_2_fu_2417_p1 : o_tensor_0_1_V_fu_828);

assign o_tensor_0_1_V_9_fu_2481_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_1_V_3_fu_2426_p1 : o_tensor_0_1_V_8_fu_2474_p3);

assign o_tensor_0_2_V_10_fu_2620_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_2_V_7_fu_2602_p1 : o_tensor_0_2_V_9_fu_2613_p3);

assign o_tensor_0_2_V_1_fu_10521_p1 = add_ln700_47_fu_10508_p2[7:0];

assign o_tensor_0_2_V_2_fu_2549_p1 = dst_tensor_0_2_V_1_fu_2541_p3[7:0];

assign o_tensor_0_2_V_3_fu_2558_p1 = dst_tensor_0_2_V_2_fu_2553_p2[7:0];

assign o_tensor_0_2_V_7_fu_2602_p1 = dst_tensor_0_2_V_3_fu_2594_p3[7:0];

assign o_tensor_0_2_V_8_fu_2606_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_2_V_2_fu_2549_p1 : o_tensor_0_2_V_fu_832);

assign o_tensor_0_2_V_9_fu_2613_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_2_V_3_fu_2558_p1 : o_tensor_0_2_V_8_fu_2606_p3);

assign o_tensor_0_3_V_10_fu_2752_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_3_V_7_fu_2734_p1 : o_tensor_0_3_V_9_fu_2745_p3);

assign o_tensor_0_3_V_1_fu_10580_p1 = add_ln700_63_fu_10567_p2[7:0];

assign o_tensor_0_3_V_2_fu_2681_p1 = dst_tensor_0_3_V_1_fu_2673_p3[7:0];

assign o_tensor_0_3_V_3_fu_2690_p1 = dst_tensor_0_3_V_2_fu_2685_p2[7:0];

assign o_tensor_0_3_V_7_fu_2734_p1 = dst_tensor_0_3_V_3_fu_2726_p3[7:0];

assign o_tensor_0_3_V_8_fu_2738_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_3_V_2_fu_2681_p1 : o_tensor_0_3_V_fu_836);

assign o_tensor_0_3_V_9_fu_2745_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_3_V_3_fu_2690_p1 : o_tensor_0_3_V_8_fu_2738_p3);

assign o_tensor_0_4_V_10_fu_2884_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_4_V_7_fu_2866_p1 : o_tensor_0_4_V_9_fu_2877_p3);

assign o_tensor_0_4_V_1_fu_10639_p1 = add_ln700_79_fu_10626_p2[7:0];

assign o_tensor_0_4_V_2_fu_2813_p1 = dst_tensor_0_4_V_1_fu_2805_p3[7:0];

assign o_tensor_0_4_V_3_fu_2822_p1 = dst_tensor_0_4_V_2_fu_2817_p2[7:0];

assign o_tensor_0_4_V_7_fu_2866_p1 = dst_tensor_0_4_V_3_fu_2858_p3[7:0];

assign o_tensor_0_4_V_8_fu_2870_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_4_V_2_fu_2813_p1 : o_tensor_0_4_V_fu_840);

assign o_tensor_0_4_V_9_fu_2877_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_4_V_3_fu_2822_p1 : o_tensor_0_4_V_8_fu_2870_p3);

assign o_tensor_0_5_V_1_fu_2945_p1 = dst_tensor_0_5_V_1_fu_2937_p3[7:0];

assign o_tensor_0_5_V_2_fu_2954_p1 = dst_tensor_0_5_V_2_fu_2949_p2[7:0];

assign o_tensor_0_5_V_6_fu_2998_p1 = dst_tensor_0_5_V_3_fu_2990_p3[7:0];

assign o_tensor_0_5_V_7_fu_3002_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_5_V_1_fu_2945_p1 : o_tensor_0_5_V_fu_844);

assign o_tensor_0_5_V_8_fu_3009_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_5_V_2_fu_2954_p1 : o_tensor_0_5_V_7_fu_3002_p3);

assign o_tensor_0_5_V_9_fu_3016_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_5_V_6_fu_2998_p1 : o_tensor_0_5_V_8_fu_3009_p3);

assign o_tensor_0_6_V_1_fu_3077_p1 = dst_tensor_0_6_V_1_fu_3069_p3[7:0];

assign o_tensor_0_6_V_2_fu_3086_p1 = dst_tensor_0_6_V_2_fu_3081_p2[7:0];

assign o_tensor_0_6_V_6_fu_3130_p1 = dst_tensor_0_6_V_3_fu_3122_p3[7:0];

assign o_tensor_0_6_V_7_fu_3134_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_6_V_1_fu_3077_p1 : o_tensor_0_6_V_fu_848);

assign o_tensor_0_6_V_8_fu_3141_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_6_V_2_fu_3086_p1 : o_tensor_0_6_V_7_fu_3134_p3);

assign o_tensor_0_6_V_9_fu_3148_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_6_V_6_fu_3130_p1 : o_tensor_0_6_V_8_fu_3141_p3);

assign o_tensor_0_7_V_1_fu_3209_p1 = dst_tensor_0_7_V_1_fu_3201_p3[7:0];

assign o_tensor_0_7_V_2_fu_3218_p1 = dst_tensor_0_7_V_2_fu_3213_p2[7:0];

assign o_tensor_0_7_V_6_fu_3262_p1 = dst_tensor_0_7_V_3_fu_3254_p3[7:0];

assign o_tensor_0_7_V_7_fu_3266_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_7_V_1_fu_3209_p1 : o_tensor_0_7_V_fu_852);

assign o_tensor_0_7_V_8_fu_3273_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_7_V_2_fu_3218_p1 : o_tensor_0_7_V_7_fu_3266_p3);

assign o_tensor_0_7_V_9_fu_3280_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_7_V_6_fu_3262_p1 : o_tensor_0_7_V_8_fu_3273_p3);

assign o_tensor_0_8_V_1_fu_3513_p1 = dst_tensor_0_8_V_1_fu_3505_p3[7:0];

assign o_tensor_0_8_V_2_fu_3521_p1 = dst_tensor_0_8_V_2_fu_3517_p2[7:0];

assign o_tensor_0_8_V_6_fu_3556_p1 = dst_tensor_0_8_V_3_fu_3548_p3[7:0];

assign o_tensor_0_8_V_7_fu_3560_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_8_V_1_fu_3513_p1 : o_tensor_0_8_V_fu_856);

assign o_tensor_0_8_V_8_fu_3567_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_8_V_2_fu_3521_p1 : o_tensor_0_8_V_7_fu_3560_p3);

assign o_tensor_0_8_V_9_fu_3574_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_8_V_6_fu_3556_p1 : o_tensor_0_8_V_8_fu_3567_p3);

assign o_tensor_0_9_V_1_fu_3623_p1 = dst_tensor_0_9_V_1_fu_3615_p3[7:0];

assign o_tensor_0_9_V_2_fu_3631_p1 = dst_tensor_0_9_V_2_fu_3627_p2[7:0];

assign o_tensor_0_9_V_6_fu_3666_p1 = dst_tensor_0_9_V_3_fu_3658_p3[7:0];

assign o_tensor_0_9_V_7_fu_3670_p3 = ((icmp_ln378_1_reg_13268[0:0] === 1'b1) ? o_tensor_0_9_V_1_fu_3623_p1 : o_tensor_0_9_V_fu_860);

assign o_tensor_0_9_V_8_fu_3677_p3 = ((and_ln385_reg_13304[0:0] === 1'b1) ? o_tensor_0_9_V_2_fu_3631_p1 : o_tensor_0_9_V_7_fu_3670_p3);

assign o_tensor_0_9_V_9_fu_3684_p3 = ((icmp_ln391_reg_13192[0:0] === 1'b1) ? o_tensor_0_9_V_6_fu_3666_p1 : o_tensor_0_9_V_8_fu_3677_p3);

assign out_mem_V_Addr_A = out_mem_V_Addr_A_orig << 32'd4;

assign out_mem_V_Clk_A = ap_clk;

assign out_mem_V_Rst_A = ap_rst_n_inv;

assign p_Result_2_fu_4738_p4 = {{uop_mem_V_q0[31:22]}};

assign p_cast37_fu_1586_p1 = tmp_fu_1576_p4;

assign p_cast_fu_1600_p1 = tmp_2_fu_1590_p4;

assign ret_V_fu_11478_p3 = {{dram_idx_assign_0_reg_1282}, {3'd0}};

assign s2g_dep_queue_V_0_vld_in = s2g_dep_queue_V_TVALID;

assign s2g_dep_queue_V_0_vld_out = s2g_dep_queue_V_0_state[1'd0];

assign s2g_dep_queue_V_TREADY = s2g_dep_queue_V_0_state[1'd1];

assign select_ln253_1_fu_4630_p3 = ((icmp_ln259_fu_4564_p2[0:0] === 1'b1) ? add_ln700_257_fu_4577_p2 : src_offset_in_V_reg_1197);

assign select_ln253_2_fu_4638_p3 = ((icmp_ln259_fu_4564_p2[0:0] === 1'b1) ? add_ln700_258_fu_4590_p2 : wgt_offset_in_V_reg_1208);

assign select_ln253_fu_4622_p3 = ((icmp_ln259_fu_4564_p2[0:0] === 1'b1) ? add_ln700_256_fu_4559_p2 : dst_offset_in_V_reg_1186);

assign select_ln254_1_fu_4582_p3 = ((icmp_ln259_fu_4564_p2[0:0] === 1'b1) ? add_ln700_257_fu_4577_p2 : ap_phi_mux_src_offset_in_0_i_phi_fu_1245_p4);

assign select_ln254_2_fu_4595_p3 = ((icmp_ln259_fu_4564_p2[0:0] === 1'b1) ? add_ln700_258_fu_4590_p2 : ap_phi_mux_wgt_offset_in_0_i_phi_fu_1256_p4);

assign select_ln254_3_fu_4603_p3 = ((icmp_ln259_fu_4564_p2[0:0] === 1'b1) ? zext_ln262_reg_13977 : upc_0_i_reg_1263);

assign select_ln254_4_fu_4615_p3 = ((icmp_ln259_fu_4564_p2[0:0] === 1'b1) ? icmp_ln262_reg_13069 : icmp_ln262_1_fu_4610_p2);

assign select_ln254_fu_4569_p3 = ((icmp_ln259_fu_4564_p2[0:0] === 1'b1) ? add_ln700_256_fu_4559_p2 : ap_phi_mux_dst_offset_in_0_i_phi_fu_1234_p4);

assign select_ln259_1_fu_4676_p3 = ((select_ln254_4_fu_4615_p3[0:0] === 1'b1) ? select_ln254_1_fu_4582_p3 : src_offset_in_V_4_fu_4651_p2);

assign select_ln259_2_fu_4684_p3 = ((select_ln254_4_fu_4615_p3[0:0] === 1'b1) ? select_ln254_2_fu_4595_p3 : wgt_offset_in_V_2_fu_4656_p2);

assign select_ln259_3_fu_4704_p3 = ((icmp_ln259_fu_4564_p2[0:0] === 1'b1) ? 46'd1 : add_ln259_fu_4698_p2);

assign select_ln259_fu_4668_p3 = ((select_ln254_4_fu_4615_p3[0:0] === 1'b1) ? select_ln254_fu_4569_p3 : dst_offset_in_V_4_fu_4646_p2);

assign select_ln262_fu_4661_p3 = ((select_ln254_4_fu_4615_p3[0:0] === 1'b1) ? select_ln254_3_fu_4603_p3 : zext_ln262_reg_13977);

assign select_ln304_1_fu_10750_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_111_fu_10744_p2);

assign select_ln304_2_fu_10809_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_127_fu_10803_p2);

assign select_ln304_3_fu_10868_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_143_fu_10862_p2);

assign select_ln304_4_fu_10927_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_159_fu_10921_p2);

assign select_ln304_5_fu_10986_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_175_fu_10980_p2);

assign select_ln304_fu_10691_p3 = ((tmp_10_reg_13989[0:0] === 1'b1) ? 32'd0 : add_ln700_95_fu_10685_p2);

assign select_ln343_1_fu_1975_p3 = ((icmp_ln348_fu_1922_p2[0:0] === 1'b1) ? add_ln700_263_fu_1935_p2 : ap_phi_mux_src_offset_in_V_1_phi_fu_1126_p4);

assign select_ln343_fu_1967_p3 = ((icmp_ln348_fu_1922_p2[0:0] === 1'b1) ? add_ln700_262_fu_1917_p2 : ap_phi_mux_dst_offset_in_V_1_phi_fu_1115_p4);

assign select_ln344_1_fu_1940_p3 = ((icmp_ln348_fu_1922_p2[0:0] === 1'b1) ? add_ln700_263_fu_1935_p2 : ap_phi_mux_src_offset_in_0_i318_phi_fu_1159_p4);

assign select_ln344_2_fu_1948_p3 = ((icmp_ln348_fu_1922_p2[0:0] === 1'b1) ? zext_ln350_reg_13124 : ap_phi_mux_upc_0_i322_phi_fu_1169_p4);

assign select_ln344_3_fu_1960_p3 = ((icmp_ln348_fu_1922_p2[0:0] === 1'b1) ? icmp_ln350_reg_13059 : icmp_ln350_1_fu_1955_p2);

assign select_ln344_fu_1927_p3 = ((icmp_ln348_fu_1922_p2[0:0] === 1'b1) ? add_ln700_262_fu_1917_p2 : ap_phi_mux_dst_offset_in_0_i317_phi_fu_1148_p4);

assign select_ln348_1_fu_2008_p3 = ((select_ln344_3_fu_1960_p3[0:0] === 1'b1) ? select_ln344_1_fu_1940_p3 : src_offset_in_V_5_fu_1988_p2);

assign select_ln348_2_fu_2022_p3 = ((icmp_ln348_fu_1922_p2[0:0] === 1'b1) ? 46'd1 : add_ln348_fu_2016_p2);

assign select_ln348_fu_2000_p3 = ((select_ln344_3_fu_1960_p3[0:0] === 1'b1) ? select_ln344_fu_1927_p3 : dst_offset_in_V_5_fu_1983_p2);

assign select_ln350_fu_1993_p3 = ((select_ln344_3_fu_1960_p3[0:0] === 1'b1) ? select_ln344_2_fu_1948_p3 : zext_ln350_reg_13124);

assign select_ln375_fu_2251_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : trunc_ln647_22_reg_13423);

assign select_ln380_10_fu_2667_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_3_fu_2647_p3 : dst_tensor_0_3_V_reg_13536);

assign select_ln380_12_fu_2793_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_4_V_reg_13547 : src_1_V_4_fu_2779_p3);

assign select_ln380_13_fu_2799_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_4_fu_2779_p3 : dst_tensor_0_4_V_reg_13547);

assign select_ln380_15_fu_2925_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_5_V_reg_13558 : src_1_V_5_fu_2911_p3);

assign select_ln380_16_fu_2931_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_5_fu_2911_p3 : dst_tensor_0_5_V_reg_13558);

assign select_ln380_18_fu_3057_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_6_V_reg_13569 : src_1_V_6_fu_3043_p3);

assign select_ln380_19_fu_3063_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_6_fu_3043_p3 : dst_tensor_0_6_V_reg_13569);

assign select_ln380_1_fu_2271_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? select_ln375_fu_2251_p3 : dst_tensor_0_0_V_reg_13503);

assign select_ln380_21_fu_3189_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_7_V_reg_13580 : src_1_V_7_fu_3175_p3);

assign select_ln380_22_fu_3195_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_7_fu_3175_p3 : dst_tensor_0_7_V_reg_13580);

assign select_ln380_24_fu_3495_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_8_V_reg_13591 : src_1_V_8_reg_13759);

assign select_ln380_25_fu_3500_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_8_reg_13759 : dst_tensor_0_8_V_reg_13591);

assign select_ln380_27_fu_3605_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_9_V_reg_13602 : src_1_V_9_reg_13778);

assign select_ln380_28_fu_3610_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_9_reg_13778 : dst_tensor_0_9_V_reg_13602);

assign select_ln380_30_fu_3715_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_10_V_reg_13613 : src_1_V_10_reg_13797);

assign select_ln380_31_fu_3720_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_10_reg_13797 : dst_tensor_0_10_V_reg_13613);

assign select_ln380_33_fu_3825_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_11_V_reg_13624 : src_1_V_11_reg_13816);

assign select_ln380_34_fu_3830_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_11_reg_13816 : dst_tensor_0_11_V_reg_13624);

assign select_ln380_36_fu_3935_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_12_V_reg_13635 : src_1_V_12_reg_13835);

assign select_ln380_37_fu_3940_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_12_reg_13835 : dst_tensor_0_12_V_reg_13635);

assign select_ln380_39_fu_4045_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_13_V_reg_13646 : src_1_V_13_reg_13854);

assign select_ln380_3_fu_2397_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_1_V_reg_13514 : src_1_V_1_fu_2383_p3);

assign select_ln380_40_fu_4050_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_13_reg_13854 : dst_tensor_0_13_V_reg_13646);

assign select_ln380_42_fu_4155_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_14_V_reg_13657 : src_1_V_14_reg_13873);

assign select_ln380_43_fu_4160_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_14_reg_13873 : dst_tensor_0_14_V_reg_13657);

assign select_ln380_45_fu_4265_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_15_V_reg_13668 : src_1_V_15_reg_13892);

assign select_ln380_46_fu_4270_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_15_reg_13892 : dst_tensor_0_15_V_reg_13668);

assign select_ln380_4_fu_2403_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_1_fu_2383_p3 : dst_tensor_0_1_V_reg_13514);

assign select_ln380_6_fu_2529_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_2_V_reg_13525 : src_1_V_2_fu_2515_p3);

assign select_ln380_7_fu_2535_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? src_1_V_2_fu_2515_p3 : dst_tensor_0_2_V_reg_13525);

assign select_ln380_9_fu_2661_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_3_V_reg_13536 : src_1_V_3_fu_2647_p3);

assign select_ln380_fu_2265_p3 = ((icmp_ln378_reg_13156[0:0] === 1'b1) ? dst_tensor_0_0_V_reg_13503 : select_ln375_fu_2251_p3);

assign select_ln67_1_fu_11585_p3 = ((icmp_ln67_1_reg_16081[0:0] === 1'b1) ? zext_ln67_3_fu_11566_p1 : zext_ln67_2_fu_11563_p1);

assign select_ln67_2_fu_11592_p3 = ((icmp_ln67_1_reg_16081[0:0] === 1'b1) ? xor_ln67_fu_11572_p2 : zext_ln67_2_fu_11563_p1);

assign select_ln67_3_fu_11633_p3 = ((icmp_ln67_1_reg_16081[0:0] === 1'b1) ? tmp_33_fu_11623_p4 : shl_ln67_1_fu_11617_p2);

assign select_ln67_fu_11578_p3 = ((icmp_ln67_1_reg_16081[0:0] === 1'b1) ? zext_ln67_2_fu_11563_p1 : zext_ln67_3_fu_11566_p1);

assign sext_ln215_10_fu_7496_p1 = $signed(i_tensor_i_0_5_fu_7358_p4);

assign sext_ln215_12_fu_8811_p1 = $signed(i_tensor_i_0_6_reg_14791);

assign sext_ln215_14_fu_7510_p1 = $signed(i_tensor_i_0_7_fu_7378_p4);

assign sext_ln215_16_fu_8820_p1 = $signed(i_tensor_i_0_8_reg_14796);

assign sext_ln215_18_fu_7524_p1 = $signed(i_tensor_i_0_9_fu_7398_p4);

assign sext_ln215_20_fu_8829_p1 = $signed(i_tensor_i_0_s_reg_14801);

assign sext_ln215_22_fu_7538_p1 = $signed(i_tensor_i_0_10_fu_7418_p4);

assign sext_ln215_24_fu_8838_p1 = $signed(i_tensor_i_0_11_reg_14806);

assign sext_ln215_26_fu_7552_p1 = $signed(i_tensor_i_0_12_fu_7438_p4);

assign sext_ln215_28_fu_8847_p1 = $signed(i_tensor_i_0_13_reg_14811);

assign sext_ln215_2_fu_7468_p1 = $signed(i_tensor_i_0_1_fu_7318_p4);

assign sext_ln215_30_fu_7566_p1 = $signed(i_tensor_i_0_14_fu_7458_p4);

assign sext_ln215_4_fu_8793_p1 = $signed(i_tensor_i_0_2_reg_14781);

assign sext_ln215_6_fu_7482_p1 = $signed(i_tensor_i_0_3_fu_7338_p4);

assign sext_ln215_8_fu_8802_p1 = $signed(i_tensor_i_0_4_reg_14786);

assign sext_ln215_fu_8784_p1 = $signed(trunc_ln647_3_reg_14776);

assign sext_ln253_fu_4461_p1 = $signed(sub_ln253_reg_13064);

assign sext_ln265_fu_4712_p1 = select_ln262_reg_14068;

assign sext_ln343_fu_1778_p1 = $signed(sub_ln343_reg_13054);

assign sext_ln353_fu_2030_p1 = select_ln350_reg_13364;

assign sext_ln68_10_fu_10976_p1 = $signed(add_ln700_174_fu_10970_p2);

assign sext_ln68_11_fu_11035_p1 = $signed(add_ln700_190_fu_11029_p2);

assign sext_ln68_12_fu_11094_p1 = $signed(add_ln700_206_fu_11088_p2);

assign sext_ln68_13_fu_11153_p1 = $signed(add_ln700_222_fu_11147_p2);

assign sext_ln68_14_fu_11212_p1 = $signed(add_ln700_238_fu_11206_p2);

assign sext_ln68_15_fu_11271_p1 = $signed(add_ln700_254_fu_11265_p2);

assign sext_ln68_1_fu_10445_p1 = $signed(add_ln700_30_fu_10439_p2);

assign sext_ln68_2_fu_10504_p1 = $signed(add_ln700_46_fu_10498_p2);

assign sext_ln68_3_fu_10563_p1 = $signed(add_ln700_62_fu_10557_p2);

assign sext_ln68_4_fu_10622_p1 = $signed(add_ln700_78_fu_10616_p2);

assign sext_ln68_5_fu_10681_p1 = $signed(add_ln700_94_fu_10675_p2);

assign sext_ln68_6_fu_10740_p1 = $signed(add_ln700_110_fu_10734_p2);

assign sext_ln68_7_fu_10799_p1 = $signed(add_ln700_126_fu_10793_p2);

assign sext_ln68_8_fu_10858_p1 = $signed(add_ln700_142_fu_10852_p2);

assign sext_ln68_9_fu_10917_p1 = $signed(add_ln700_158_fu_10911_p2);

assign sext_ln68_fu_10386_p1 = $signed(add_ln700_14_fu_10380_p2);

assign sext_ln700_100_fu_10718_p1 = $signed(add_ln700_105_reg_15597);

assign sext_ln700_101_fu_9468_p1 = grp_fu_12233_p3;

assign sext_ln700_102_fu_9471_p1 = grp_fu_12242_p3;

assign sext_ln700_103_fu_10721_p1 = $signed(add_ln700_108_reg_15602);

assign sext_ln700_104_fu_10730_p1 = $signed(add_ln700_109_fu_10724_p2);

assign sext_ln700_106_fu_9528_p1 = grp_fu_12251_p3;

assign sext_ln700_107_fu_9531_p1 = grp_fu_12260_p3;

assign sext_ln700_108_fu_10761_p1 = $signed(add_ln700_114_reg_15607);

assign sext_ln700_109_fu_9540_p1 = grp_fu_12269_p3;

assign sext_ln700_10_fu_10364_p1 = $signed(add_ln700_9_reg_15477);

assign sext_ln700_110_fu_9543_p1 = grp_fu_12278_p3;

assign sext_ln700_111_fu_10764_p1 = $signed(add_ln700_117_reg_15612);

assign sext_ln700_112_fu_10773_p1 = $signed(add_ln700_118_fu_10767_p2);

assign sext_ln700_113_fu_9552_p1 = grp_fu_12287_p3;

assign sext_ln700_114_fu_9555_p1 = grp_fu_12296_p3;

assign sext_ln700_115_fu_10777_p1 = $signed(add_ln700_121_reg_15617);

assign sext_ln700_116_fu_9564_p1 = grp_fu_12305_p3;

assign sext_ln700_117_fu_9567_p1 = grp_fu_12314_p3;

assign sext_ln700_118_fu_10780_p1 = $signed(add_ln700_124_reg_15622);

assign sext_ln700_119_fu_10789_p1 = $signed(add_ln700_125_fu_10783_p2);

assign sext_ln700_11_fu_8892_p1 = grp_fu_11801_p3;

assign sext_ln700_121_fu_9624_p1 = grp_fu_12323_p3;

assign sext_ln700_122_fu_9627_p1 = grp_fu_12332_p3;

assign sext_ln700_123_fu_10820_p1 = $signed(add_ln700_130_reg_15627);

assign sext_ln700_124_fu_9636_p1 = grp_fu_12341_p3;

assign sext_ln700_125_fu_9639_p1 = grp_fu_12350_p3;

assign sext_ln700_126_fu_10823_p1 = $signed(add_ln700_133_reg_15632);

assign sext_ln700_127_fu_10832_p1 = $signed(add_ln700_134_fu_10826_p2);

assign sext_ln700_128_fu_9648_p1 = grp_fu_12359_p3;

assign sext_ln700_129_fu_9651_p1 = grp_fu_12368_p3;

assign sext_ln700_12_fu_8895_p1 = grp_fu_11810_p3;

assign sext_ln700_130_fu_10836_p1 = $signed(add_ln700_137_reg_15637);

assign sext_ln700_131_fu_9660_p1 = grp_fu_12377_p3;

assign sext_ln700_132_fu_9663_p1 = grp_fu_12386_p3;

assign sext_ln700_133_fu_10839_p1 = $signed(add_ln700_140_reg_15642);

assign sext_ln700_134_fu_10848_p1 = $signed(add_ln700_141_fu_10842_p2);

assign sext_ln700_136_fu_9720_p1 = grp_fu_12395_p3;

assign sext_ln700_137_fu_9723_p1 = grp_fu_12404_p3;

assign sext_ln700_138_fu_10879_p1 = $signed(add_ln700_146_reg_15647);

assign sext_ln700_139_fu_9732_p1 = grp_fu_12413_p3;

assign sext_ln700_13_fu_10367_p1 = $signed(add_ln700_12_reg_15482);

assign sext_ln700_140_fu_9735_p1 = grp_fu_12422_p3;

assign sext_ln700_141_fu_10882_p1 = $signed(add_ln700_149_reg_15652);

assign sext_ln700_142_fu_10891_p1 = $signed(add_ln700_150_fu_10885_p2);

assign sext_ln700_143_fu_9744_p1 = grp_fu_12431_p3;

assign sext_ln700_144_fu_9747_p1 = grp_fu_12440_p3;

assign sext_ln700_145_fu_10895_p1 = $signed(add_ln700_153_reg_15657);

assign sext_ln700_146_fu_9756_p1 = grp_fu_12449_p3;

assign sext_ln700_147_fu_9759_p1 = grp_fu_12458_p3;

assign sext_ln700_148_fu_10898_p1 = $signed(add_ln700_156_reg_15662);

assign sext_ln700_149_fu_10907_p1 = $signed(add_ln700_157_fu_10901_p2);

assign sext_ln700_14_fu_10376_p1 = $signed(add_ln700_13_fu_10370_p2);

assign sext_ln700_151_fu_9816_p1 = grp_fu_12467_p3;

assign sext_ln700_152_fu_9819_p1 = grp_fu_12476_p3;

assign sext_ln700_153_fu_10938_p1 = $signed(add_ln700_162_reg_15667);

assign sext_ln700_154_fu_9828_p1 = grp_fu_12485_p3;

assign sext_ln700_155_fu_9831_p1 = grp_fu_12494_p3;

assign sext_ln700_156_fu_10941_p1 = $signed(add_ln700_165_reg_15672);

assign sext_ln700_157_fu_10950_p1 = $signed(add_ln700_166_fu_10944_p2);

assign sext_ln700_158_fu_9840_p1 = grp_fu_12503_p3;

assign sext_ln700_159_fu_9843_p1 = grp_fu_12512_p3;

assign sext_ln700_160_fu_10954_p1 = $signed(add_ln700_169_reg_15677);

assign sext_ln700_161_fu_9852_p1 = grp_fu_12521_p3;

assign sext_ln700_162_fu_9855_p1 = grp_fu_12530_p3;

assign sext_ln700_163_fu_10957_p1 = $signed(add_ln700_172_reg_15682);

assign sext_ln700_164_fu_10966_p1 = $signed(add_ln700_173_fu_10960_p2);

assign sext_ln700_166_fu_9912_p1 = grp_fu_12539_p3;

assign sext_ln700_167_fu_9915_p1 = grp_fu_12548_p3;

assign sext_ln700_168_fu_10997_p1 = $signed(add_ln700_178_reg_15687);

assign sext_ln700_169_fu_9924_p1 = grp_fu_12557_p3;

assign sext_ln700_16_fu_8952_p1 = grp_fu_11819_p3;

assign sext_ln700_170_fu_9927_p1 = grp_fu_12566_p3;

assign sext_ln700_171_fu_11000_p1 = $signed(add_ln700_181_reg_15692);

assign sext_ln700_172_fu_11009_p1 = $signed(add_ln700_182_fu_11003_p2);

assign sext_ln700_173_fu_9936_p1 = grp_fu_12575_p3;

assign sext_ln700_174_fu_9939_p1 = grp_fu_12584_p3;

assign sext_ln700_175_fu_11013_p1 = $signed(add_ln700_185_reg_15697);

assign sext_ln700_176_fu_9948_p1 = grp_fu_12593_p3;

assign sext_ln700_177_fu_9951_p1 = grp_fu_12602_p3;

assign sext_ln700_178_fu_11016_p1 = $signed(add_ln700_188_reg_15702);

assign sext_ln700_179_fu_11025_p1 = $signed(add_ln700_189_fu_11019_p2);

assign sext_ln700_17_fu_8955_p1 = grp_fu_11828_p3;

assign sext_ln700_181_fu_10008_p1 = grp_fu_12611_p3;

assign sext_ln700_182_fu_10011_p1 = grp_fu_12620_p3;

assign sext_ln700_183_fu_11056_p1 = $signed(add_ln700_194_reg_15707);

assign sext_ln700_184_fu_10020_p1 = grp_fu_12629_p3;

assign sext_ln700_185_fu_10023_p1 = grp_fu_12638_p3;

assign sext_ln700_186_fu_11059_p1 = $signed(add_ln700_197_reg_15712);

assign sext_ln700_187_fu_11068_p1 = $signed(add_ln700_198_fu_11062_p2);

assign sext_ln700_188_fu_10032_p1 = grp_fu_12647_p3;

assign sext_ln700_189_fu_10035_p1 = grp_fu_12656_p3;

assign sext_ln700_18_fu_10407_p1 = $signed(add_ln700_18_reg_15487);

assign sext_ln700_190_fu_11072_p1 = $signed(add_ln700_201_reg_15717);

assign sext_ln700_191_fu_10044_p1 = grp_fu_12665_p3;

assign sext_ln700_192_fu_10047_p1 = grp_fu_12674_p3;

assign sext_ln700_193_fu_11075_p1 = $signed(add_ln700_204_reg_15722);

assign sext_ln700_194_fu_11084_p1 = $signed(add_ln700_205_fu_11078_p2);

assign sext_ln700_196_fu_10104_p1 = grp_fu_12683_p3;

assign sext_ln700_197_fu_10107_p1 = grp_fu_12692_p3;

assign sext_ln700_198_fu_11115_p1 = $signed(add_ln700_210_reg_15727);

assign sext_ln700_199_fu_10116_p1 = grp_fu_12701_p3;

assign sext_ln700_19_fu_8964_p1 = grp_fu_11837_p3;

assign sext_ln700_1_fu_8856_p1 = grp_fu_11747_p3;

assign sext_ln700_200_fu_10119_p1 = grp_fu_12710_p3;

assign sext_ln700_201_fu_11118_p1 = $signed(add_ln700_213_reg_15732);

assign sext_ln700_202_fu_11127_p1 = $signed(add_ln700_214_fu_11121_p2);

assign sext_ln700_203_fu_10128_p1 = grp_fu_12719_p3;

assign sext_ln700_204_fu_10131_p1 = grp_fu_12728_p3;

assign sext_ln700_205_fu_11131_p1 = $signed(add_ln700_217_reg_15737);

assign sext_ln700_206_fu_10140_p1 = grp_fu_12737_p3;

assign sext_ln700_207_fu_10143_p1 = grp_fu_12746_p3;

assign sext_ln700_208_fu_11134_p1 = $signed(add_ln700_220_reg_15742);

assign sext_ln700_209_fu_11143_p1 = $signed(add_ln700_221_fu_11137_p2);

assign sext_ln700_20_fu_8967_p1 = grp_fu_11846_p3;

assign sext_ln700_211_fu_10200_p1 = grp_fu_12755_p3;

assign sext_ln700_212_fu_10203_p1 = grp_fu_12764_p3;

assign sext_ln700_213_fu_11174_p1 = $signed(add_ln700_226_reg_15747);

assign sext_ln700_214_fu_10212_p1 = grp_fu_12773_p3;

assign sext_ln700_215_fu_10215_p1 = grp_fu_12782_p3;

assign sext_ln700_216_fu_11177_p1 = $signed(add_ln700_229_reg_15752);

assign sext_ln700_217_fu_11186_p1 = $signed(add_ln700_230_fu_11180_p2);

assign sext_ln700_218_fu_10224_p1 = grp_fu_12791_p3;

assign sext_ln700_219_fu_10227_p1 = grp_fu_12800_p3;

assign sext_ln700_21_fu_10410_p1 = $signed(add_ln700_21_reg_15492);

assign sext_ln700_220_fu_11190_p1 = $signed(add_ln700_233_reg_15757);

assign sext_ln700_221_fu_10236_p1 = grp_fu_12809_p3;

assign sext_ln700_222_fu_10239_p1 = grp_fu_12818_p3;

assign sext_ln700_223_fu_11193_p1 = $signed(add_ln700_236_reg_15762);

assign sext_ln700_224_fu_11202_p1 = $signed(add_ln700_237_fu_11196_p2);

assign sext_ln700_226_fu_10296_p1 = grp_fu_12827_p3;

assign sext_ln700_227_fu_10299_p1 = grp_fu_12836_p3;

assign sext_ln700_228_fu_11233_p1 = $signed(add_ln700_242_reg_15767);

assign sext_ln700_229_fu_10308_p1 = grp_fu_12845_p3;

assign sext_ln700_22_fu_10419_p1 = $signed(add_ln700_22_fu_10413_p2);

assign sext_ln700_230_fu_10311_p1 = grp_fu_12854_p3;

assign sext_ln700_231_fu_11236_p1 = $signed(add_ln700_245_reg_15772);

assign sext_ln700_232_fu_11245_p1 = $signed(add_ln700_246_fu_11239_p2);

assign sext_ln700_233_fu_10320_p1 = grp_fu_12863_p3;

assign sext_ln700_234_fu_10323_p1 = grp_fu_12872_p3;

assign sext_ln700_235_fu_11249_p1 = $signed(add_ln700_249_reg_15777);

assign sext_ln700_236_fu_10332_p1 = grp_fu_12881_p3;

assign sext_ln700_237_fu_10335_p1 = grp_fu_12890_p3;

assign sext_ln700_238_fu_11252_p1 = $signed(add_ln700_252_reg_15782);

assign sext_ln700_239_fu_11261_p1 = $signed(add_ln700_253_fu_11255_p2);

assign sext_ln700_23_fu_8976_p1 = grp_fu_11855_p3;

assign sext_ln700_24_fu_8979_p1 = grp_fu_11864_p3;

assign sext_ln700_25_fu_10423_p1 = $signed(add_ln700_25_reg_15497);

assign sext_ln700_26_fu_8988_p1 = grp_fu_11873_p3;

assign sext_ln700_27_fu_8991_p1 = grp_fu_11882_p3;

assign sext_ln700_28_fu_10426_p1 = $signed(add_ln700_28_reg_15502);

assign sext_ln700_29_fu_10435_p1 = $signed(add_ln700_29_fu_10429_p2);

assign sext_ln700_2_fu_8859_p1 = grp_fu_11756_p3;

assign sext_ln700_31_fu_9048_p1 = grp_fu_11891_p3;

assign sext_ln700_32_fu_9051_p1 = grp_fu_11900_p3;

assign sext_ln700_33_fu_10466_p1 = $signed(add_ln700_34_reg_15507);

assign sext_ln700_34_fu_9060_p1 = grp_fu_11909_p3;

assign sext_ln700_35_fu_9063_p1 = grp_fu_11918_p3;

assign sext_ln700_36_fu_10469_p1 = $signed(add_ln700_37_reg_15512);

assign sext_ln700_37_fu_10478_p1 = $signed(add_ln700_38_fu_10472_p2);

assign sext_ln700_38_fu_9072_p1 = grp_fu_11927_p3;

assign sext_ln700_39_fu_9075_p1 = grp_fu_11936_p3;

assign sext_ln700_3_fu_10348_p1 = $signed(add_ln700_2_reg_15467);

assign sext_ln700_40_fu_10482_p1 = $signed(add_ln700_41_reg_15517);

assign sext_ln700_41_fu_9084_p1 = grp_fu_11945_p3;

assign sext_ln700_42_fu_9087_p1 = grp_fu_11954_p3;

assign sext_ln700_43_fu_10485_p1 = $signed(add_ln700_44_reg_15522);

assign sext_ln700_44_fu_10494_p1 = $signed(add_ln700_45_fu_10488_p2);

assign sext_ln700_46_fu_9144_p1 = grp_fu_11963_p3;

assign sext_ln700_47_fu_9147_p1 = grp_fu_11972_p3;

assign sext_ln700_48_fu_10525_p1 = $signed(add_ln700_50_reg_15527);

assign sext_ln700_49_fu_9156_p1 = grp_fu_11981_p3;

assign sext_ln700_4_fu_8868_p1 = grp_fu_11765_p3;

assign sext_ln700_50_fu_9159_p1 = grp_fu_11990_p3;

assign sext_ln700_51_fu_10528_p1 = $signed(add_ln700_53_reg_15532);

assign sext_ln700_52_fu_10537_p1 = $signed(add_ln700_54_fu_10531_p2);

assign sext_ln700_53_fu_9168_p1 = grp_fu_11999_p3;

assign sext_ln700_54_fu_9171_p1 = grp_fu_12008_p3;

assign sext_ln700_55_fu_10541_p1 = $signed(add_ln700_57_reg_15537);

assign sext_ln700_56_fu_9180_p1 = grp_fu_12017_p3;

assign sext_ln700_57_fu_9183_p1 = grp_fu_12026_p3;

assign sext_ln700_58_fu_10544_p1 = $signed(add_ln700_60_reg_15542);

assign sext_ln700_59_fu_10553_p1 = $signed(add_ln700_61_fu_10547_p2);

assign sext_ln700_5_fu_8871_p1 = grp_fu_11774_p3;

assign sext_ln700_61_fu_9240_p1 = grp_fu_12035_p3;

assign sext_ln700_62_fu_9243_p1 = grp_fu_12044_p3;

assign sext_ln700_63_fu_10584_p1 = $signed(add_ln700_66_reg_15547);

assign sext_ln700_64_fu_9252_p1 = grp_fu_12053_p3;

assign sext_ln700_65_fu_9255_p1 = grp_fu_12062_p3;

assign sext_ln700_66_fu_10587_p1 = $signed(add_ln700_69_reg_15552);

assign sext_ln700_67_fu_10596_p1 = $signed(add_ln700_70_fu_10590_p2);

assign sext_ln700_68_fu_9264_p1 = grp_fu_12071_p3;

assign sext_ln700_69_fu_9267_p1 = grp_fu_12080_p3;

assign sext_ln700_6_fu_10351_p1 = $signed(add_ln700_5_reg_15472);

assign sext_ln700_70_fu_10600_p1 = $signed(add_ln700_73_reg_15557);

assign sext_ln700_71_fu_9276_p1 = grp_fu_12089_p3;

assign sext_ln700_72_fu_9279_p1 = grp_fu_12098_p3;

assign sext_ln700_73_fu_10603_p1 = $signed(add_ln700_76_reg_15562);

assign sext_ln700_74_fu_10612_p1 = $signed(add_ln700_77_fu_10606_p2);

assign sext_ln700_76_fu_9336_p1 = grp_fu_12107_p3;

assign sext_ln700_77_fu_9339_p1 = grp_fu_12116_p3;

assign sext_ln700_78_fu_10643_p1 = $signed(add_ln700_82_reg_15567);

assign sext_ln700_79_fu_9348_p1 = grp_fu_12125_p3;

assign sext_ln700_7_fu_10360_p1 = $signed(add_ln700_6_fu_10354_p2);

assign sext_ln700_80_fu_9351_p1 = grp_fu_12134_p3;

assign sext_ln700_81_fu_10646_p1 = $signed(add_ln700_85_reg_15572);

assign sext_ln700_82_fu_10655_p1 = $signed(add_ln700_86_fu_10649_p2);

assign sext_ln700_83_fu_9360_p1 = grp_fu_12143_p3;

assign sext_ln700_84_fu_9363_p1 = grp_fu_12152_p3;

assign sext_ln700_85_fu_10659_p1 = $signed(add_ln700_89_reg_15577);

assign sext_ln700_86_fu_9372_p1 = grp_fu_12161_p3;

assign sext_ln700_87_fu_9375_p1 = grp_fu_12170_p3;

assign sext_ln700_88_fu_10662_p1 = $signed(add_ln700_92_reg_15582);

assign sext_ln700_89_fu_10671_p1 = $signed(add_ln700_93_fu_10665_p2);

assign sext_ln700_8_fu_8880_p1 = grp_fu_11783_p3;

assign sext_ln700_91_fu_9432_p1 = grp_fu_12179_p3;

assign sext_ln700_92_fu_9435_p1 = grp_fu_12188_p3;

assign sext_ln700_93_fu_10702_p1 = $signed(add_ln700_98_reg_15587);

assign sext_ln700_94_fu_9444_p1 = grp_fu_12197_p3;

assign sext_ln700_95_fu_9447_p1 = grp_fu_12206_p3;

assign sext_ln700_96_fu_10705_p1 = $signed(add_ln700_101_reg_15592);

assign sext_ln700_97_fu_10714_p1 = $signed(add_ln700_102_fu_10708_p2);

assign sext_ln700_98_fu_9456_p1 = grp_fu_12215_p3;

assign sext_ln700_99_fu_9459_p1 = grp_fu_12224_p3;

assign sext_ln700_9_fu_8883_p1 = grp_fu_11792_p3;

assign shl_ln67_1_fu_11617_p2 = zext_ln67_4_fu_11569_p1 << zext_ln67_5_fu_11605_p1;

assign shl_ln67_2_fu_11544_p3 = {{trunc_ln67_1_reg_16060}, {6'd0}};

assign shl_ln67_3_fu_11640_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 << zext_ln67_6_fu_11609_p1;

assign shl_ln67_4_fu_11679_p2 = 64'd255 << zext_ln67_8_fu_11675_p1;

assign shl_ln67_fu_11505_p2 = sram_idx_V_assign_2_reg_16029 << 16'd3;

assign shl_ln790_10_fu_3755_p2 = dst_tensor_0_10_V_reg_13613 << zext_ln556_20_fu_3752_p1;

assign shl_ln790_11_fu_3865_p2 = dst_tensor_0_11_V_reg_13624 << zext_ln556_22_fu_3862_p1;

assign shl_ln790_12_fu_3975_p2 = dst_tensor_0_12_V_reg_13635 << zext_ln556_24_fu_3972_p1;

assign shl_ln790_13_fu_4085_p2 = dst_tensor_0_13_V_reg_13646 << zext_ln556_26_fu_4082_p1;

assign shl_ln790_14_fu_4195_p2 = dst_tensor_0_14_V_reg_13657 << zext_ln556_28_fu_4192_p1;

assign shl_ln790_15_fu_4305_p2 = dst_tensor_0_15_V_reg_13668 << zext_ln556_30_fu_4302_p1;

assign shl_ln790_1_fu_2448_p2 = dst_tensor_0_1_V_reg_13514 << zext_ln556_2_fu_2444_p1;

assign shl_ln790_2_fu_2580_p2 = dst_tensor_0_2_V_reg_13525 << zext_ln556_4_fu_2576_p1;

assign shl_ln790_3_fu_2712_p2 = dst_tensor_0_3_V_reg_13536 << zext_ln556_6_fu_2708_p1;

assign shl_ln790_4_fu_2844_p2 = dst_tensor_0_4_V_reg_13547 << zext_ln556_8_fu_2840_p1;

assign shl_ln790_5_fu_2976_p2 = dst_tensor_0_5_V_reg_13558 << zext_ln556_10_fu_2972_p1;

assign shl_ln790_6_fu_3108_p2 = dst_tensor_0_6_V_reg_13569 << zext_ln556_12_fu_3104_p1;

assign shl_ln790_7_fu_3240_p2 = dst_tensor_0_7_V_reg_13580 << zext_ln556_14_fu_3236_p1;

assign shl_ln790_8_fu_3535_p2 = dst_tensor_0_8_V_reg_13591 << zext_ln556_16_fu_3532_p1;

assign shl_ln790_9_fu_3645_p2 = dst_tensor_0_9_V_reg_13602 << zext_ln556_18_fu_3642_p1;

assign shl_ln790_fu_2316_p2 = dst_tensor_0_0_V_reg_13503 << zext_ln556_fu_2312_p1;

assign shl_ln_fu_11456_p3 = {{trunc_ln478_1_reg_13079}, {3'd0}};

assign smax18_cast_fu_1670_p1 = smax18_fu_1662_p3;

assign smax18_fu_1662_p3 = ((empty_22_fu_1656_p2[0:0] === 1'b1) ? zext_ln350_3_fu_1652_p1 : grp_fu_1344_p4);

assign smax_cast_fu_1708_p1 = smax_fu_1700_p3;

assign smax_fu_1700_p3 = ((empty_20_fu_1694_p2[0:0] === 1'b1) ? zext_ln262_3_fu_1690_p1 : grp_fu_1344_p4);

assign src_1_V_10_fu_3337_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_5_reg_13473);

assign src_1_V_11_fu_3352_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_5_1_reg_13478);

assign src_1_V_12_fu_3367_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_6_reg_13483);

assign src_1_V_13_fu_3382_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_6_1_reg_13488);

assign src_1_V_14_fu_3397_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_7_reg_13493);

assign src_1_V_15_fu_3412_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_7_1_reg_13498);

assign src_1_V_1_fu_2383_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_0_1_reg_13428);

assign src_1_V_2_fu_2515_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_1_reg_13433);

assign src_1_V_3_fu_2647_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_1_1_reg_13438);

assign src_1_V_4_fu_2779_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_2_reg_13443);

assign src_1_V_5_fu_2911_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_2_1_reg_13448);

assign src_1_V_6_fu_3043_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_3_reg_13453);

assign src_1_V_7_fu_3175_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_3_1_reg_13458);

assign src_1_V_8_fu_3307_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_4_reg_13463);

assign src_1_V_9_fu_3322_p3 = ((tmp_12_reg_13136[0:0] === 1'b1) ? src_1_V_reg_13228 : p_Result_11_4_1_reg_13468);

assign src_1_V_fu_1859_p1 = $signed(ins_i_fu_1808_p4);

assign src_idx_V_1_fu_2056_p2 = (zext_ln209_6_fu_2052_p1 + select_ln348_1_reg_13376);

assign src_idx_V_fu_4733_p2 = (zext_ln209_3_fu_4729_p1 + select_ln259_1_reg_14079_pp1_iter1_reg);

assign src_offset_in_V_4_fu_4651_p2 = (select_ln254_1_fu_4582_p3 + zext_ln700_3_reg_14014);

assign src_offset_in_V_5_fu_1988_p2 = (select_ln344_1_fu_1940_p3 + zext_ln700_8_reg_13253);

assign sub_ln253_fu_1712_p2 = (smax_cast_fu_1708_p1 - zext_ln262_2_fu_1686_p1);

assign sub_ln343_fu_1674_p2 = (smax18_cast_fu_1670_p1 - zext_ln350_2_fu_1648_p1);

assign sub_ln461_10_fu_3346_p2 = (5'd0 - trunc_ln647_64_fu_3342_p1);

assign sub_ln461_11_fu_3361_p2 = (5'd0 - trunc_ln647_68_fu_3357_p1);

assign sub_ln461_12_fu_3376_p2 = (5'd0 - trunc_ln647_72_fu_3372_p1);

assign sub_ln461_13_fu_3391_p2 = (5'd0 - trunc_ln647_76_fu_3387_p1);

assign sub_ln461_14_fu_3406_p2 = (5'd0 - trunc_ln647_80_fu_3402_p1);

assign sub_ln461_15_fu_3421_p2 = (5'd0 - trunc_ln647_84_fu_3417_p1);

assign sub_ln461_1_fu_2438_p2 = (5'd0 - trunc_ln647_28_fu_2388_p1);

assign sub_ln461_2_fu_2570_p2 = (5'd0 - trunc_ln647_32_fu_2520_p1);

assign sub_ln461_3_fu_2702_p2 = (5'd0 - trunc_ln647_36_fu_2652_p1);

assign sub_ln461_4_fu_2834_p2 = (5'd0 - trunc_ln647_40_fu_2784_p1);

assign sub_ln461_5_fu_2966_p2 = (5'd0 - trunc_ln647_44_fu_2916_p1);

assign sub_ln461_6_fu_3098_p2 = (5'd0 - trunc_ln647_48_fu_3048_p1);

assign sub_ln461_7_fu_3230_p2 = (5'd0 - trunc_ln647_52_fu_3180_p1);

assign sub_ln461_8_fu_3316_p2 = (5'd0 - trunc_ln647_56_fu_3312_p1);

assign sub_ln461_9_fu_3331_p2 = (5'd0 - trunc_ln647_60_fu_3327_p1);

assign sub_ln461_fu_2306_p2 = (5'd0 - trunc_ln647_24_fu_2256_p1);

assign tmp_11_fu_11313_p17 = {{{{{{{{{{{{{{{{trunc_ln647_20_reg_15942}, {trunc_ln647_19_reg_15932}}, {trunc_ln647_18_reg_15922}}, {trunc_ln647_17_reg_15912}}, {trunc_ln647_16_reg_15902}}, {trunc_ln647_15_reg_15892}}, {trunc_ln647_14_reg_15882}}, {trunc_ln647_13_reg_15872}}, {trunc_ln647_12_reg_15862}}, {trunc_ln647_11_reg_15852}}, {trunc_ln647_10_reg_15842}}, {o_tensor_0_4_V_1_reg_15832}}, {o_tensor_0_3_V_1_reg_15822}}, {o_tensor_0_2_V_1_reg_15812}}, {o_tensor_0_1_V_1_reg_15802}}, {o_tensor_0_0_V_1_reg_15792}};

assign tmp_14_fu_4440_p17 = {{{{{{{{{{{{{{{{dst_tensor_0_15_V_6_reg_13946}, {dst_tensor_0_14_V_6_reg_13941}}, {dst_tensor_0_13_V_6_reg_13936}}, {dst_tensor_0_12_V_6_reg_13931}}, {dst_tensor_0_11_V_6_reg_13926}}, {dst_tensor_0_10_V_6_reg_13921}}, {dst_tensor_0_9_V_6_reg_13916}}, {dst_tensor_0_8_V_6_reg_13911}}, {dst_tensor_0_7_V_6_reg_13754_pp0_iter3_reg}}, {dst_tensor_0_6_V_6_reg_13744_pp0_iter3_reg}}, {dst_tensor_0_5_V_6_reg_13734_pp0_iter3_reg}}, {dst_tensor_0_4_V_6_reg_13724_pp0_iter3_reg}}, {dst_tensor_0_3_V_6_reg_13714_pp0_iter3_reg}}, {dst_tensor_0_2_V_6_reg_13704_pp0_iter3_reg}}, {dst_tensor_0_1_V_6_reg_13694_pp0_iter3_reg}}, {dst_tensor_0_0_V_6_reg_13684_pp0_iter3_reg}};

assign tmp_15_fu_4371_p17 = {{{{{{{{{{{{{{{{o_tensor_0_15_V_9_fu_4344_p3}, {o_tensor_0_14_V_9_fu_4234_p3}}, {o_tensor_0_13_V_9_fu_4124_p3}}, {o_tensor_0_12_V_9_fu_4014_p3}}, {o_tensor_0_11_V_9_fu_3904_p3}}, {o_tensor_0_10_V_9_fu_3794_p3}}, {o_tensor_0_9_V_9_fu_3684_p3}}, {o_tensor_0_8_V_9_fu_3574_p3}}, {o_tensor_0_7_V_9_reg_13749}}, {o_tensor_0_6_V_9_reg_13739}}, {o_tensor_0_5_V_9_reg_13729}}, {o_tensor_0_4_V_10_reg_13719}}, {o_tensor_0_3_V_10_reg_13709}}, {o_tensor_0_2_V_10_reg_13699}}, {o_tensor_0_1_V_10_reg_13689}}, {o_tensor_0_0_V_10_reg_13679}};

assign tmp_16_fu_1879_p4 = {{tmp_V_reg_12909[110:109]}};

assign tmp_17_fu_2298_p3 = select_ln375_fu_2251_p3[32'd4];

assign tmp_18_fu_2430_p3 = src_1_V_1_fu_2383_p3[32'd4];

assign tmp_19_fu_2562_p3 = src_1_V_2_fu_2515_p3[32'd4];

assign tmp_20_fu_2694_p3 = src_1_V_3_fu_2647_p3[32'd4];

assign tmp_21_fu_2826_p3 = src_1_V_4_fu_2779_p3[32'd4];

assign tmp_22_fu_2958_p3 = src_1_V_5_fu_2911_p3[32'd4];

assign tmp_23_fu_3090_p3 = src_1_V_6_fu_3043_p3[32'd4];

assign tmp_24_fu_3222_p3 = src_1_V_7_fu_3175_p3[32'd4];

assign tmp_25_fu_3525_p3 = src_1_V_8_reg_13759[32'd4];

assign tmp_26_fu_3635_p3 = src_1_V_9_reg_13778[32'd4];

assign tmp_27_fu_3745_p3 = src_1_V_10_reg_13797[32'd4];

assign tmp_28_fu_3855_p3 = src_1_V_11_reg_13816[32'd4];

assign tmp_29_fu_3965_p3 = src_1_V_12_reg_13835[32'd4];

assign tmp_2_fu_1590_p4 = {{uops_V[31:2]}};

assign tmp_30_fu_4075_p3 = src_1_V_13_reg_13854[32'd4];

assign tmp_31_fu_4185_p3 = src_1_V_14_reg_13873[32'd4];

assign tmp_32_fu_4295_p3 = src_1_V_15_reg_13892[32'd4];

integer ap_tvar_int_0;

always @ (shl_ln67_1_fu_11617_p2) begin
    for (ap_tvar_int_0 = 512 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 511 - 0) begin
            tmp_33_fu_11623_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_33_fu_11623_p4[ap_tvar_int_0] = shl_ln67_1_fu_11617_p2[511 - ap_tvar_int_0];
        end
    end
end

assign tmp_34_fu_11668_p3 = {{trunc_ln67_1_reg_16060_pp2_iter2_reg}, {3'd0}};

assign tmp_35_fu_11733_p3 = tmp_V_reg_12909[32'd5];

assign tmp_36_fu_11740_p3 = tmp_V_reg_12909[32'd6];

assign tmp_4_fu_1604_p3 = gemm_queue_V_V_0_data_out[32'd3];

assign tmp_6_fu_1612_p3 = gemm_queue_V_V_0_data_out[32'd4];

assign tmp_9_fu_11292_p17 = {{{{{{{{{{{{{{{{a_tensor_0_15_V_1_reg_15937}, {a_tensor_0_14_V_1_reg_15927}}, {a_tensor_0_13_V_1_reg_15917}}, {a_tensor_0_12_V_1_reg_15907}}, {a_tensor_0_11_V_1_reg_15897}}, {select_ln304_5_reg_15887}}, {select_ln304_4_reg_15877}}, {select_ln304_3_reg_15867}}, {select_ln304_2_reg_15857}}, {select_ln304_1_reg_15847}}, {select_ln304_reg_15837}}, {a_tensor_0_4_V_1_reg_15827}}, {a_tensor_0_3_V_1_reg_15817}}, {a_tensor_0_2_V_1_reg_15807}}, {a_tensor_0_1_V_1_reg_15797}}, {a_tensor_0_0_V_1_reg_15787}};

assign tmp_fu_1576_p4 = {{biases_V[31:3]}};

assign trunc_ln209_1_fu_11373_p4 = {{tmp_V_reg_12909[119:116]}};

assign trunc_ln304_2_fu_11440_p4 = {{tmp_V_reg_12909[111:96]}};

assign trunc_ln3_fu_1724_p4 = {{gemm_queue_V_V_0_data_out[123:120]}};

assign trunc_ln470_fu_1620_p1 = gemm_queue_V_V_0_data_out[2:0];

assign trunc_ln478_1_fu_1738_p4 = {{gemm_queue_V_V_0_data_out[95:80]}};

assign trunc_ln478_2_fu_1748_p4 = {{gemm_queue_V_V_0_data_out[127:124]}};

assign trunc_ln485_fu_11720_p1 = phi_ln485_reg_1314[14:0];

assign trunc_ln4_fu_11355_p4 = {{tmp_V_reg_12909[115:112]}};

assign trunc_ln5_fu_11391_p4 = {{tmp_V_reg_12909[9:7]}};

assign trunc_ln647_10_fu_10698_p1 = add_ln700_95_fu_10685_p2[7:0];

assign trunc_ln647_11_fu_10757_p1 = add_ln700_111_fu_10744_p2[7:0];

assign trunc_ln647_12_fu_10816_p1 = add_ln700_127_fu_10803_p2[7:0];

assign trunc_ln647_13_fu_10875_p1 = add_ln700_143_fu_10862_p2[7:0];

assign trunc_ln647_14_fu_10934_p1 = add_ln700_159_fu_10921_p2[7:0];

assign trunc_ln647_15_fu_10993_p1 = add_ln700_175_fu_10980_p2[7:0];

assign trunc_ln647_16_fu_11052_p1 = add_ln700_191_fu_11039_p2[7:0];

assign trunc_ln647_17_fu_11111_p1 = add_ln700_207_fu_11098_p2[7:0];

assign trunc_ln647_18_fu_11170_p1 = add_ln700_223_fu_11157_p2[7:0];

assign trunc_ln647_19_fu_11229_p1 = add_ln700_239_fu_11216_p2[7:0];

assign trunc_ln647_1_fu_4766_p1 = wgt_mem_0_V_Dout_A[7:0];

assign trunc_ln647_20_fu_11288_p1 = add_ln700_255_fu_11275_p2[7:0];

assign trunc_ln647_21_fu_2039_p1 = uop_mem_V_q0[10:0];

assign trunc_ln647_22_fu_2069_p1 = acc_mem_V_q0[31:0];

assign trunc_ln647_24_fu_2256_p1 = select_ln375_fu_2251_p3[4:0];

assign trunc_ln647_28_fu_2388_p1 = src_1_V_1_fu_2383_p3[4:0];

assign trunc_ln647_2_fu_4840_p1 = wgt_mem_1_V_Dout_A[7:0];

assign trunc_ln647_32_fu_2520_p1 = src_1_V_2_fu_2515_p3[4:0];

assign trunc_ln647_36_fu_2652_p1 = src_1_V_3_fu_2647_p3[4:0];

assign trunc_ln647_3_fu_7314_p1 = inp_mem_V_Dout_A[7:0];

assign trunc_ln647_40_fu_2784_p1 = src_1_V_4_fu_2779_p3[4:0];

assign trunc_ln647_44_fu_2916_p1 = src_1_V_5_fu_2911_p3[4:0];

assign trunc_ln647_48_fu_3048_p1 = src_1_V_6_fu_3043_p3[4:0];

assign trunc_ln647_52_fu_3180_p1 = src_1_V_7_fu_3175_p3[4:0];

assign trunc_ln647_56_fu_3312_p1 = src_1_V_8_fu_3307_p3[4:0];

assign trunc_ln647_60_fu_3327_p1 = src_1_V_9_fu_3322_p3[4:0];

assign trunc_ln647_64_fu_3342_p1 = src_1_V_10_fu_3337_p3[4:0];

assign trunc_ln647_68_fu_3357_p1 = src_1_V_11_fu_3352_p3[4:0];

assign trunc_ln647_72_fu_3372_p1 = src_1_V_12_fu_3367_p3[4:0];

assign trunc_ln647_76_fu_3387_p1 = src_1_V_13_fu_3382_p3[4:0];

assign trunc_ln647_80_fu_3402_p1 = src_1_V_14_fu_3397_p3[4:0];

assign trunc_ln647_84_fu_3417_p1 = src_1_V_15_fu_3412_p3[4:0];

assign trunc_ln647_fu_4716_p1 = uop_mem_V_q0[10:0];

assign trunc_ln67_1_fu_11540_p1 = phi_ln67_reg_1303[2:0];

assign trunc_ln67_fu_11521_p1 = phi_ln67_reg_1303[15:0];

assign trunc_ln700_4_fu_4535_p4 = {{tmp_V_reg_12909[117:108]}};

assign trunc_ln9_fu_4514_p4 = {{tmp_V_reg_12909[127:118]}};

assign trunc_ln_fu_1832_p4 = {{tmp_V_reg_12909[110:108]}};

assign uop_port_ARLEN = trunc_ln478_1_reg_13079;

assign upc_1_fu_4692_p2 = ($signed(32'd1) + $signed(select_ln262_fu_4661_p3));

assign upc_3_fu_2034_p2 = ($signed(32'd1) + $signed(select_ln350_reg_13364));

assign w_tensor_i_0_11_fu_4884_p4 = {{wgt_mem_1_V_Dout_A[47:40]}};

assign w_tensor_i_0_13_fu_4904_p4 = {{wgt_mem_1_V_Dout_A[63:56]}};

assign w_tensor_i_0_1_fu_4770_p4 = {{wgt_mem_0_V_Dout_A[15:8]}};

assign w_tensor_i_0_3_fu_4790_p4 = {{wgt_mem_0_V_Dout_A[31:24]}};

assign w_tensor_i_0_5_fu_4810_p4 = {{wgt_mem_0_V_Dout_A[47:40]}};

assign w_tensor_i_0_7_fu_4830_p4 = {{wgt_mem_0_V_Dout_A[63:56]}};

assign w_tensor_i_0_8_fu_4864_p4 = {{wgt_mem_1_V_Dout_A[31:24]}};

assign w_tensor_i_0_9_fu_4844_p4 = {{wgt_mem_1_V_Dout_A[15:8]}};

assign w_tensor_i_10_10_fu_6464_p4 = {{wgt_mem_1_V_Dout_A[671:664]}};

assign w_tensor_i_10_12_fu_6484_p4 = {{wgt_mem_1_V_Dout_A[687:680]}};

assign w_tensor_i_10_14_fu_6504_p4 = {{wgt_mem_1_V_Dout_A[703:696]}};

assign w_tensor_i_10_1_fu_6364_p4 = {{wgt_mem_0_V_Dout_A[655:648]}};

assign w_tensor_i_10_3_fu_6384_p4 = {{wgt_mem_0_V_Dout_A[671:664]}};

assign w_tensor_i_10_5_fu_6404_p4 = {{wgt_mem_0_V_Dout_A[687:680]}};

assign w_tensor_i_10_7_fu_6424_p4 = {{wgt_mem_0_V_Dout_A[703:696]}};

assign w_tensor_i_10_9_fu_6444_p4 = {{wgt_mem_1_V_Dout_A[655:648]}};

assign w_tensor_i_11_10_fu_6624_p4 = {{wgt_mem_1_V_Dout_A[735:728]}};

assign w_tensor_i_11_12_fu_6644_p4 = {{wgt_mem_1_V_Dout_A[751:744]}};

assign w_tensor_i_11_14_fu_6664_p4 = {{wgt_mem_1_V_Dout_A[767:760]}};

assign w_tensor_i_11_1_fu_6524_p4 = {{wgt_mem_0_V_Dout_A[719:712]}};

assign w_tensor_i_11_3_fu_6544_p4 = {{wgt_mem_0_V_Dout_A[735:728]}};

assign w_tensor_i_11_5_fu_6564_p4 = {{wgt_mem_0_V_Dout_A[751:744]}};

assign w_tensor_i_11_7_fu_6584_p4 = {{wgt_mem_0_V_Dout_A[767:760]}};

assign w_tensor_i_11_9_fu_6604_p4 = {{wgt_mem_1_V_Dout_A[719:712]}};

assign w_tensor_i_12_10_fu_6784_p4 = {{wgt_mem_1_V_Dout_A[799:792]}};

assign w_tensor_i_12_12_fu_6804_p4 = {{wgt_mem_1_V_Dout_A[815:808]}};

assign w_tensor_i_12_14_fu_6824_p4 = {{wgt_mem_1_V_Dout_A[831:824]}};

assign w_tensor_i_12_1_fu_6684_p4 = {{wgt_mem_0_V_Dout_A[783:776]}};

assign w_tensor_i_12_3_fu_6704_p4 = {{wgt_mem_0_V_Dout_A[799:792]}};

assign w_tensor_i_12_5_fu_6724_p4 = {{wgt_mem_0_V_Dout_A[815:808]}};

assign w_tensor_i_12_7_fu_6744_p4 = {{wgt_mem_0_V_Dout_A[831:824]}};

assign w_tensor_i_12_9_fu_6764_p4 = {{wgt_mem_1_V_Dout_A[783:776]}};

assign w_tensor_i_13_10_fu_6944_p4 = {{wgt_mem_1_V_Dout_A[863:856]}};

assign w_tensor_i_13_12_fu_6964_p4 = {{wgt_mem_1_V_Dout_A[879:872]}};

assign w_tensor_i_13_14_fu_6984_p4 = {{wgt_mem_1_V_Dout_A[895:888]}};

assign w_tensor_i_13_1_fu_6844_p4 = {{wgt_mem_0_V_Dout_A[847:840]}};

assign w_tensor_i_13_3_fu_6864_p4 = {{wgt_mem_0_V_Dout_A[863:856]}};

assign w_tensor_i_13_5_fu_6884_p4 = {{wgt_mem_0_V_Dout_A[879:872]}};

assign w_tensor_i_13_7_fu_6904_p4 = {{wgt_mem_0_V_Dout_A[895:888]}};

assign w_tensor_i_13_9_fu_6924_p4 = {{wgt_mem_1_V_Dout_A[847:840]}};

assign w_tensor_i_14_10_fu_7104_p4 = {{wgt_mem_1_V_Dout_A[927:920]}};

assign w_tensor_i_14_12_fu_7124_p4 = {{wgt_mem_1_V_Dout_A[943:936]}};

assign w_tensor_i_14_14_fu_7144_p4 = {{wgt_mem_1_V_Dout_A[959:952]}};

assign w_tensor_i_14_1_fu_7004_p4 = {{wgt_mem_0_V_Dout_A[911:904]}};

assign w_tensor_i_14_3_fu_7024_p4 = {{wgt_mem_0_V_Dout_A[927:920]}};

assign w_tensor_i_14_5_fu_7044_p4 = {{wgt_mem_0_V_Dout_A[943:936]}};

assign w_tensor_i_14_7_fu_7064_p4 = {{wgt_mem_0_V_Dout_A[959:952]}};

assign w_tensor_i_14_9_fu_7084_p4 = {{wgt_mem_1_V_Dout_A[911:904]}};

assign w_tensor_i_15_10_fu_7264_p4 = {{wgt_mem_1_V_Dout_A[991:984]}};

assign w_tensor_i_15_12_fu_7284_p4 = {{wgt_mem_1_V_Dout_A[1007:1000]}};

assign w_tensor_i_15_14_fu_7304_p4 = {{wgt_mem_1_V_Dout_A[1023:1016]}};

assign w_tensor_i_15_1_fu_7164_p4 = {{wgt_mem_0_V_Dout_A[975:968]}};

assign w_tensor_i_15_3_fu_7184_p4 = {{wgt_mem_0_V_Dout_A[991:984]}};

assign w_tensor_i_15_5_fu_7204_p4 = {{wgt_mem_0_V_Dout_A[1007:1000]}};

assign w_tensor_i_15_7_fu_7224_p4 = {{wgt_mem_0_V_Dout_A[1023:1016]}};

assign w_tensor_i_15_9_fu_7244_p4 = {{wgt_mem_1_V_Dout_A[975:968]}};

assign w_tensor_i_1_10_fu_5024_p4 = {{wgt_mem_1_V_Dout_A[95:88]}};

assign w_tensor_i_1_12_fu_5044_p4 = {{wgt_mem_1_V_Dout_A[111:104]}};

assign w_tensor_i_1_14_fu_5064_p4 = {{wgt_mem_1_V_Dout_A[127:120]}};

assign w_tensor_i_1_1_fu_4924_p4 = {{wgt_mem_0_V_Dout_A[79:72]}};

assign w_tensor_i_1_3_fu_4944_p4 = {{wgt_mem_0_V_Dout_A[95:88]}};

assign w_tensor_i_1_5_fu_4964_p4 = {{wgt_mem_0_V_Dout_A[111:104]}};

assign w_tensor_i_1_7_fu_4984_p4 = {{wgt_mem_0_V_Dout_A[127:120]}};

assign w_tensor_i_1_9_fu_5004_p4 = {{wgt_mem_1_V_Dout_A[79:72]}};

assign w_tensor_i_2_10_fu_5184_p4 = {{wgt_mem_1_V_Dout_A[159:152]}};

assign w_tensor_i_2_12_fu_5204_p4 = {{wgt_mem_1_V_Dout_A[175:168]}};

assign w_tensor_i_2_14_fu_5224_p4 = {{wgt_mem_1_V_Dout_A[191:184]}};

assign w_tensor_i_2_1_fu_5084_p4 = {{wgt_mem_0_V_Dout_A[143:136]}};

assign w_tensor_i_2_3_fu_5104_p4 = {{wgt_mem_0_V_Dout_A[159:152]}};

assign w_tensor_i_2_5_fu_5124_p4 = {{wgt_mem_0_V_Dout_A[175:168]}};

assign w_tensor_i_2_7_fu_5144_p4 = {{wgt_mem_0_V_Dout_A[191:184]}};

assign w_tensor_i_2_9_fu_5164_p4 = {{wgt_mem_1_V_Dout_A[143:136]}};

assign w_tensor_i_3_10_fu_5344_p4 = {{wgt_mem_1_V_Dout_A[223:216]}};

assign w_tensor_i_3_12_fu_5364_p4 = {{wgt_mem_1_V_Dout_A[239:232]}};

assign w_tensor_i_3_14_fu_5384_p4 = {{wgt_mem_1_V_Dout_A[255:248]}};

assign w_tensor_i_3_1_fu_5244_p4 = {{wgt_mem_0_V_Dout_A[207:200]}};

assign w_tensor_i_3_3_fu_5264_p4 = {{wgt_mem_0_V_Dout_A[223:216]}};

assign w_tensor_i_3_5_fu_5284_p4 = {{wgt_mem_0_V_Dout_A[239:232]}};

assign w_tensor_i_3_7_fu_5304_p4 = {{wgt_mem_0_V_Dout_A[255:248]}};

assign w_tensor_i_3_9_fu_5324_p4 = {{wgt_mem_1_V_Dout_A[207:200]}};

assign w_tensor_i_4_10_fu_5504_p4 = {{wgt_mem_1_V_Dout_A[287:280]}};

assign w_tensor_i_4_12_fu_5524_p4 = {{wgt_mem_1_V_Dout_A[303:296]}};

assign w_tensor_i_4_14_fu_5544_p4 = {{wgt_mem_1_V_Dout_A[319:312]}};

assign w_tensor_i_4_1_fu_5404_p4 = {{wgt_mem_0_V_Dout_A[271:264]}};

assign w_tensor_i_4_3_fu_5424_p4 = {{wgt_mem_0_V_Dout_A[287:280]}};

assign w_tensor_i_4_5_fu_5444_p4 = {{wgt_mem_0_V_Dout_A[303:296]}};

assign w_tensor_i_4_7_fu_5464_p4 = {{wgt_mem_0_V_Dout_A[319:312]}};

assign w_tensor_i_4_9_fu_5484_p4 = {{wgt_mem_1_V_Dout_A[271:264]}};

assign w_tensor_i_5_10_fu_5664_p4 = {{wgt_mem_1_V_Dout_A[351:344]}};

assign w_tensor_i_5_12_fu_5684_p4 = {{wgt_mem_1_V_Dout_A[367:360]}};

assign w_tensor_i_5_14_fu_5704_p4 = {{wgt_mem_1_V_Dout_A[383:376]}};

assign w_tensor_i_5_1_fu_5564_p4 = {{wgt_mem_0_V_Dout_A[335:328]}};

assign w_tensor_i_5_3_fu_5584_p4 = {{wgt_mem_0_V_Dout_A[351:344]}};

assign w_tensor_i_5_5_fu_5604_p4 = {{wgt_mem_0_V_Dout_A[367:360]}};

assign w_tensor_i_5_7_fu_5624_p4 = {{wgt_mem_0_V_Dout_A[383:376]}};

assign w_tensor_i_5_9_fu_5644_p4 = {{wgt_mem_1_V_Dout_A[335:328]}};

assign w_tensor_i_6_10_fu_5824_p4 = {{wgt_mem_1_V_Dout_A[415:408]}};

assign w_tensor_i_6_12_fu_5844_p4 = {{wgt_mem_1_V_Dout_A[431:424]}};

assign w_tensor_i_6_14_fu_5864_p4 = {{wgt_mem_1_V_Dout_A[447:440]}};

assign w_tensor_i_6_1_fu_5724_p4 = {{wgt_mem_0_V_Dout_A[399:392]}};

assign w_tensor_i_6_3_fu_5744_p4 = {{wgt_mem_0_V_Dout_A[415:408]}};

assign w_tensor_i_6_5_fu_5764_p4 = {{wgt_mem_0_V_Dout_A[431:424]}};

assign w_tensor_i_6_7_fu_5784_p4 = {{wgt_mem_0_V_Dout_A[447:440]}};

assign w_tensor_i_6_9_fu_5804_p4 = {{wgt_mem_1_V_Dout_A[399:392]}};

assign w_tensor_i_7_10_fu_5984_p4 = {{wgt_mem_1_V_Dout_A[479:472]}};

assign w_tensor_i_7_12_fu_6004_p4 = {{wgt_mem_1_V_Dout_A[495:488]}};

assign w_tensor_i_7_14_fu_6024_p4 = {{wgt_mem_1_V_Dout_A[511:504]}};

assign w_tensor_i_7_1_fu_5884_p4 = {{wgt_mem_0_V_Dout_A[463:456]}};

assign w_tensor_i_7_3_fu_5904_p4 = {{wgt_mem_0_V_Dout_A[479:472]}};

assign w_tensor_i_7_5_fu_5924_p4 = {{wgt_mem_0_V_Dout_A[495:488]}};

assign w_tensor_i_7_7_fu_5944_p4 = {{wgt_mem_0_V_Dout_A[511:504]}};

assign w_tensor_i_7_9_fu_5964_p4 = {{wgt_mem_1_V_Dout_A[463:456]}};

assign w_tensor_i_8_10_fu_6144_p4 = {{wgt_mem_1_V_Dout_A[543:536]}};

assign w_tensor_i_8_12_fu_6164_p4 = {{wgt_mem_1_V_Dout_A[559:552]}};

assign w_tensor_i_8_14_fu_6184_p4 = {{wgt_mem_1_V_Dout_A[575:568]}};

assign w_tensor_i_8_1_fu_6044_p4 = {{wgt_mem_0_V_Dout_A[527:520]}};

assign w_tensor_i_8_3_fu_6064_p4 = {{wgt_mem_0_V_Dout_A[543:536]}};

assign w_tensor_i_8_5_fu_6084_p4 = {{wgt_mem_0_V_Dout_A[559:552]}};

assign w_tensor_i_8_7_fu_6104_p4 = {{wgt_mem_0_V_Dout_A[575:568]}};

assign w_tensor_i_8_9_fu_6124_p4 = {{wgt_mem_1_V_Dout_A[527:520]}};

assign w_tensor_i_9_10_fu_6304_p4 = {{wgt_mem_1_V_Dout_A[607:600]}};

assign w_tensor_i_9_12_fu_6324_p4 = {{wgt_mem_1_V_Dout_A[623:616]}};

assign w_tensor_i_9_14_fu_6344_p4 = {{wgt_mem_1_V_Dout_A[639:632]}};

assign w_tensor_i_9_1_fu_6204_p4 = {{wgt_mem_0_V_Dout_A[591:584]}};

assign w_tensor_i_9_3_fu_6224_p4 = {{wgt_mem_0_V_Dout_A[607:600]}};

assign w_tensor_i_9_5_fu_6244_p4 = {{wgt_mem_0_V_Dout_A[623:616]}};

assign w_tensor_i_9_7_fu_6264_p4 = {{wgt_mem_0_V_Dout_A[639:632]}};

assign w_tensor_i_9_9_fu_6284_p4 = {{wgt_mem_1_V_Dout_A[591:584]}};

assign wgt_idx_V_fu_4752_p2 = (zext_ln209_4_fu_4748_p1 + select_ln259_2_reg_14085_pp1_iter1_reg);

assign wgt_mem_0_V_Addr_A = wgt_mem_0_V_Addr_A_orig << 32'd7;

assign wgt_mem_0_V_Addr_A_orig = zext_ln544_fu_4757_p1;

assign wgt_mem_0_V_Clk_A = ap_clk;

assign wgt_mem_0_V_Din_A = 1024'd0;

assign wgt_mem_0_V_Rst_A = ap_rst_n_inv;

assign wgt_mem_0_V_WEN_A = 128'd0;

assign wgt_mem_1_V_Addr_A = wgt_mem_1_V_Addr_A_orig << 32'd7;

assign wgt_mem_1_V_Addr_A_orig = zext_ln544_fu_4757_p1;

assign wgt_mem_1_V_Clk_A = ap_clk;

assign wgt_mem_1_V_Din_A = 1024'd0;

assign wgt_mem_1_V_Rst_A = ap_rst_n_inv;

assign wgt_mem_1_V_WEN_A = 128'd0;

assign wgt_offset_in_V_2_fu_4656_p2 = (select_ln254_2_fu_4595_p3 + zext_ln700_reg_14019);

assign x_width_V_fu_1772_p2 = (zext_ln301_1_fu_1768_p1 + trunc_ln478_1_fu_1738_p4);

assign xor_ln378_fu_1894_p2 = (icmp_ln378_1_fu_1888_p2 ^ 1'd1);

assign xor_ln67_1_fu_11599_p2 = (select_ln67_fu_11578_p3 ^ 10'd511);

assign xor_ln67_fu_11572_p2 = (zext_ln67_2_fu_11563_p1 ^ 10'd511);

assign y_fu_11472_p2 = (i_op_assign_reg_1292 + 16'd1);

assign y_offset_0_V_fu_11368_p0 = y_offset_0_V_fu_11368_p00;

assign y_offset_0_V_fu_11368_p00 = trunc_ln4_fu_11355_p4;

assign y_offset_0_V_fu_11368_p2 = ($signed({{1'b0}, {y_offset_0_V_fu_11368_p0}}) * $signed(x_width_V_reg_13092));

assign y_offset_1_V_fu_11386_p0 = y_offset_1_V_fu_11386_p00;

assign y_offset_1_V_fu_11386_p00 = trunc_ln209_1_fu_11373_p4;

assign y_offset_1_V_fu_11386_p2 = ($signed({{1'b0}, {y_offset_1_V_fu_11386_p0}}) * $signed(x_width_V_reg_13092));

assign zext_ln1352_fu_11486_p1 = ret_V_fu_11478_p3;

assign zext_ln209_1_fu_11449_p1 = trunc_ln3_reg_13074;

assign zext_ln209_2_fu_4720_p1 = trunc_ln647_fu_4716_p1;

assign zext_ln209_3_fu_4729_p1 = grp_fu_1408_p4;

assign zext_ln209_4_fu_4748_p1 = p_Result_2_fu_4738_p4;

assign zext_ln209_5_fu_2043_p1 = trunc_ln647_21_fu_2039_p1;

assign zext_ln209_6_fu_2052_p1 = grp_fu_1408_p4;

assign zext_ln262_1_fu_4495_p1 = reg_1572;

assign zext_ln262_2_fu_1686_p1 = grp_fu_1334_p4;

assign zext_ln262_3_fu_1690_p1 = grp_fu_1334_p4;

assign zext_ln262_fu_4491_p1 = reg_1568;

assign zext_ln301_1_fu_1768_p1 = add_ln301_fu_1762_p2;

assign zext_ln301_fu_1758_p1 = trunc_ln478_2_fu_1748_p4;

assign zext_ln350_1_fu_1821_p1 = reg_1572;

assign zext_ln350_2_fu_1648_p1 = grp_fu_1334_p4;

assign zext_ln350_3_fu_1652_p1 = grp_fu_1334_p4;

assign zext_ln350_fu_1817_p1 = reg_1568;

assign zext_ln478_1_fu_11352_p1 = trunc_ln478_2_reg_13087;

assign zext_ln478_fu_1734_p1 = trunc_ln3_fu_1724_p4;

assign zext_ln485_2_fu_11421_p1 = add_ln485_1_fu_11416_p2;

assign zext_ln485_3_fu_11729_p1 = add_ln485_2_reg_16128_pp3_iter1_reg;

assign zext_ln485_fu_11412_p1 = dram_idx_V_fu_11343_p4;

assign zext_ln544_1_fu_4762_p1 = src_idx_V_reg_14111;

assign zext_ln544_2_fu_8780_p1 = dst_idx_V_reg_14106_pp1_iter4_reg;

assign zext_ln544_3_fu_2061_p1 = src_idx_V_1_reg_13402;

assign zext_ln544_4_fu_2065_p1 = dst_idx_V_1_reg_13397;

assign zext_ln544_fu_4757_p1 = wgt_idx_V_reg_14116;

assign zext_ln556_10_fu_2972_p1 = sub_ln461_5_fu_2966_p2;

assign zext_ln556_11_fu_2981_p1 = trunc_ln647_44_fu_2916_p1;

assign zext_ln556_12_fu_3104_p1 = sub_ln461_6_fu_3098_p2;

assign zext_ln556_13_fu_3113_p1 = trunc_ln647_48_fu_3048_p1;

assign zext_ln556_14_fu_3236_p1 = sub_ln461_7_fu_3230_p2;

assign zext_ln556_15_fu_3245_p1 = trunc_ln647_52_fu_3180_p1;

assign zext_ln556_16_fu_3532_p1 = sub_ln461_8_reg_13773;

assign zext_ln556_17_fu_3540_p1 = trunc_ln647_56_reg_13768;

assign zext_ln556_18_fu_3642_p1 = sub_ln461_9_reg_13792;

assign zext_ln556_19_fu_3650_p1 = trunc_ln647_60_reg_13787;

assign zext_ln556_1_fu_2321_p1 = trunc_ln647_24_fu_2256_p1;

assign zext_ln556_20_fu_3752_p1 = sub_ln461_10_reg_13811;

assign zext_ln556_21_fu_3760_p1 = trunc_ln647_64_reg_13806;

assign zext_ln556_22_fu_3862_p1 = sub_ln461_11_reg_13830;

assign zext_ln556_23_fu_3870_p1 = trunc_ln647_68_reg_13825;

assign zext_ln556_24_fu_3972_p1 = sub_ln461_12_reg_13849;

assign zext_ln556_25_fu_3980_p1 = trunc_ln647_72_reg_13844;

assign zext_ln556_26_fu_4082_p1 = sub_ln461_13_reg_13868;

assign zext_ln556_27_fu_4090_p1 = trunc_ln647_76_reg_13863;

assign zext_ln556_28_fu_4192_p1 = sub_ln461_14_reg_13887;

assign zext_ln556_29_fu_4200_p1 = trunc_ln647_80_reg_13882;

assign zext_ln556_2_fu_2444_p1 = sub_ln461_1_fu_2438_p2;

assign zext_ln556_30_fu_4302_p1 = sub_ln461_15_reg_13906;

assign zext_ln556_31_fu_4310_p1 = trunc_ln647_84_reg_13901;

assign zext_ln556_3_fu_2453_p1 = trunc_ln647_28_fu_2388_p1;

assign zext_ln556_4_fu_2576_p1 = sub_ln461_2_fu_2570_p2;

assign zext_ln556_5_fu_2585_p1 = trunc_ln647_32_fu_2520_p1;

assign zext_ln556_6_fu_2708_p1 = sub_ln461_3_fu_2702_p2;

assign zext_ln556_7_fu_2717_p1 = trunc_ln647_36_fu_2652_p1;

assign zext_ln556_8_fu_2840_p1 = sub_ln461_4_fu_2834_p2;

assign zext_ln556_9_fu_2849_p1 = trunc_ln647_40_fu_2784_p1;

assign zext_ln556_fu_2312_p1 = sub_ln461_fu_2306_p2;

assign zext_ln66_fu_11495_p1 = add_ln66_reg_16024;

assign zext_ln67_1_fu_11664_p1 = lshr_ln2_reg_16055_pp2_iter2_reg;

assign zext_ln67_2_fu_11563_p1 = shl_ln67_2_reg_16071;

assign zext_ln67_3_fu_11566_p1 = empty_18_reg_16076;

assign zext_ln67_4_fu_11569_p1 = data_port_addr_read_reg_16066;

assign zext_ln67_5_fu_11605_p1 = select_ln67_2_fu_11592_p3;

assign zext_ln67_6_fu_11609_p1 = select_ln67_1_fu_11585_p3;

assign zext_ln67_7_fu_11613_p1 = xor_ln67_1_fu_11599_p2;

assign zext_ln67_8_fu_11675_p1 = tmp_34_fu_11668_p3;

assign zext_ln67_fu_11463_p1 = shl_ln_fu_11456_p3;

assign zext_ln700_10_fu_1875_p1 = grp_fu_1399_p4;

assign zext_ln700_1_fu_11452_p1 = trunc_ln304_2_fu_11440_p4;

assign zext_ln700_2_fu_4506_p1 = grp_fu_1372_p4;

assign zext_ln700_3_fu_4510_p1 = grp_fu_1381_p4;

assign zext_ln700_4_fu_4527_p1 = grp_fu_1390_p4;

assign zext_ln700_5_fu_4531_p1 = grp_fu_1399_p4;

assign zext_ln700_6_fu_4544_p1 = trunc_ln700_4_fu_4535_p4;

assign zext_ln700_7_fu_1863_p1 = grp_fu_1372_p4;

assign zext_ln700_8_fu_1867_p1 = grp_fu_1381_p4;

assign zext_ln700_9_fu_1871_p1 = grp_fu_1390_p4;

assign zext_ln700_fu_4523_p1 = trunc_ln9_fu_4514_p4;

always @ (posedge ap_clk) begin
    p_cast37_reg_12899[35:29] <= 7'b0000000;
    p_cast_reg_12904[32:30] <= 3'b000;
    zext_ln350_reg_13124[31:13] <= 19'b0000000000000000000;
    zext_ln350_1_reg_13131[31:14] <= 18'b000000000000000000;
    zext_ln700_7_reg_13248[11] <= 1'b0;
    zext_ln700_8_reg_13253[11] <= 1'b0;
    zext_ln700_9_reg_13258[11] <= 1'b0;
    zext_ln700_10_reg_13263[11] <= 1'b0;
    zext_ln544_4_reg_13412[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln544_4_reg_13412_pp0_iter2_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln262_reg_13977[31:13] <= 19'b0000000000000000000;
    zext_ln262_1_reg_13984[31:14] <= 18'b000000000000000000;
    zext_ln700_2_reg_14009[11] <= 1'b0;
    zext_ln700_3_reg_14014[11] <= 1'b0;
    zext_ln700_reg_14019[10] <= 1'b0;
    zext_ln700_4_reg_14024[11] <= 1'b0;
    zext_ln700_5_reg_14029[11] <= 1'b0;
    zext_ln700_6_reg_14034[10] <= 1'b0;
    zext_ln544_2_reg_15456[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln544_2_reg_15456_pp1_iter6_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln478_1_reg_15957[15:4] <= 12'b000000000000;
    zext_ln209_1_reg_15996[15:4] <= 12'b000000000000;
    zext_ln700_1_reg_16001[31:16] <= 16'b0000000000000000;
    shl_ln_reg_16006[2:0] <= 3'b000;
    zext_ln67_reg_16011[2:0] <= 3'b000;
    zext_ln67_reg_16011[31:19] <= 13'b0000000000000;
    shl_ln67_reg_16041[2:0] <= 3'b000;
    shl_ln67_2_reg_16071[5:0] <= 6'b000000;
    empty_18_reg_16076[5:0] <= 6'b111111;
end

endmodule //compute
